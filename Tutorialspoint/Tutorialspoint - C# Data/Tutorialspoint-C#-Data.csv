,main_headings,sub_headings_h2,sub_headings_h3,links,image_urls,facts,definitions,explanations,codes,outputs,table_data,list_items
0,"['C# Tutorial', 'Audience', 'Prerequisites']",['Useful Video Courses'],[],"['https://www.tutorialspoint.com/csharp/csharp_pdf_version.htm', 'https://www.tutorialspoint.com/csharp/csharp_quick_guide.htm', 'https://www.tutorialspoint.com/csharp/csharp_useful_resources.htm', 'https://www.tutorialspoint.com/csharp/csharp_discussion.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/index.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_overview.htm']","['https://www.tutorialspoint.com/csharp/images/csharp.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",[],['This tutorial has been prepared for the beginners to help them understand basic C# programming.'],"['C# is a simple, modern, general-purpose, object-oriented programming language developed by Microsoft within its .NET initiative led by Anders Hejlsberg. This tutorial will teach you basic C# programming and will also take you through various advanced concepts related to C# programming language.', 'C# programming is very much based on C and C++ programming languages, so if you have a basic understanding of C or C++ programming, then it will be fun to learn C#.']",[],[],[],[]
1,['C# - Overview'],"['Strong Programming Features of C#', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/index.htm', 'https://www.tutorialspoint.com/csharp/csharp_environment_setup.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/index.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_environment_setup.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The following reasons make C# a widely used professional language −', 'Following is the list of few important features of C# −']",['C# was developed by Anders Hejlsberg and his team during the development of .Net Framework.'],"['C# is a modern, general-purpose, object-oriented programming language developed by Microsoft and approved by European Computer Manufacturers Association (ECMA) and International Standards Organization (ISO).', 'C# is designed for Common Language Infrastructure (CLI), which consists of the executable code and runtime environment that allows use of various high-level languages on different computer platforms and architectures.', 'Although C# constructs closely follow traditional high-level languages, C and C++ and being an object-oriented programming language. It has strong resemblance with Java, it has numerous strong programming features that make it endearing to a number of programmers worldwide.']",[],[],[],"['It is a modern, general-purpose programming language|||It is object oriented.|||It is component oriented.|||It is easy to learn.|||It is a structured language.|||It produces efficient programs.|||It can be compiled on a variety of computer platforms.|||It is a part of .Net Framework.|||Boolean Conditions|||Automatic Garbage Collection|||Standard Library|||Assembly Versioning|||Properties and Events|||Delegates and Events Management|||Easy-to-use Generics|||Indexers|||Conditional Compilation|||Simple Multithreading|||LINQ and Lambda Expressions|||Integration with Windows|||']"
2,['C# - Environment'],"['The .Net Framework', 'Integrated Development Environment (IDE) for C#', 'Writing C# Programs on Linux or Mac OS', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_overview.htm', 'https://www.tutorialspoint.com/csharp/csharp_program_structure.htm', 'https://www.tutorialspoint.com/asp.net/asp.net_introduction.htm', 'https://www.microsoft.com/visualstudio/eng/downloads', 'http://www.go-mono.com/mono-downloads/download.html', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_overview.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_program_structure.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['Microsoft provides the following development tools for C# programming −'],"['The .Net framework is a revolutionary platform that helps you to write the following types of applications −', 'You can download it from Microsoft Visual Studio. It gets installed automatically on your machine.', 'Note: You need an active internet connection for installing the express edition.']","['In this chapter, we will discuss the tools required for creating C# programming. We have already mentioned that C# is part of .Net framework and is used for writing .Net applications. Therefore, before discussing the available tools for running a C# program, let us understand how C# relates to the .Net framework.', 'The .Net framework applications are multi-platform applications. The framework has been designed in such a way that it can be used from any of the following languages: C#, C++, Visual Basic, Jscript, COBOL, etc. All these languages can access the framework as well as communicate with each other.', 'The .Net framework consists of an enormous library of codes used by the client languages such as C#. Following are some of the components of the .Net framework −', ""For the jobs each of these components perform, please see ASP.Net - Introduction, and for details of each component, please consult Microsoft's documentation."", 'The last two are freely available from Microsoft official website. Using these tools, you can write all kinds of C# programs from simple command-line applications to more complex applications. You can also write C# source code files using a basic text editor, like Notepad, and compile the code into assemblies using the command-line compiler, which is again a part of the .NET Framework.', 'Visual C# Express and Visual Web Developer Express edition are trimmed down versions of Visual Studio and has the same appearance. They retain most features of Visual Studio. In this tutorial, we have used Visual C# 2010 Express.', 'Although the.NET Framework runs on the Windows operating system, there are some alternative versions that work on other operating systems. Mono is an open-source version of the .NET Framework which includes a C# compiler and runs on several operating systems, including various flavors of Linux and Mac OS. Kindly check Go Mono.', 'The stated purpose of Mono is not only to be able to run Microsoft .NET applications cross-platform, but also to bring better development tools for Linux developers. Mono can be run on many operating systems including Android, BSD, iOS, Linux, OS X, Windows, Solaris, and UNIX.']",[],[],[],['Windows applications|||Web applications|||Web services|||Common Language Runtime (CLR)|||The .Net Framework Class Library|||Common Language Specification|||Common Type System|||Metadata and Assemblies|||Windows Forms|||ASP.Net and ASP.Net AJAX|||ADO.Net|||Windows Workflow Foundation (WF)|||Windows Presentation Foundation|||Windows Communication Foundation (WCF)|||LINQ|||Visual Studio 2010 (VS)|||Visual C# 2010 Express (VCE)|||Visual Web Developer|||']
3,['C# - Program Structure'],"['Creating Hello World Program', 'Compiling and Executing the Program', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_environment_setup.htm', 'https://www.tutorialspoint.com/csharp/csharp_basic_syntax.htm', 'http://tpcg.io/sy8oqc', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_environment_setup.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_basic_syntax.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['A C# program consists of the following parts −', 'Let us look at a simple code that prints the words ""Hello World"" −', 'When this code is compiled and executed, it produces the following result −', 'Let us look at the various parts of the given program −', 'It is worth to note the following points −', 'All statements and expression must end with a semicolon (;).', 'The program execution starts at the Main method.', 'Unlike Java, program file name could be different from the class name.', 'On the menu bar, choose File -> New -> Project.', 'Choose Visual C# from templates, and then choose Windows.', 'Specify a name for your project and click OK button.', 'This creates a new project in Solution Explorer.', 'Open a text editor and add the above-mentioned code.', 'Open the command prompt tool and go to the directory where you saved the file.', 'Type csc helloworld.cs and press enter to compile your code.', 'Type helloworld to execute your program.', 'You can see the output Hello World printed on the screen.']","['The next line /*...*/ is ignored by the compiler and it is put to add  comments in the program.', 'If you are using Visual Studio.Net for compiling and executing C# programs, take the following steps −', 'You can compile a C# program by using the command-line instead of the Visual Studio IDE −']","['Before we study basic building blocks of the C# programming language, let us look at a bare minimum C# program structure so that we can take it as a reference in upcoming chapters.', 'The first line of the program using System; -  the using keyword is used to include the System  namespace in the program. A program generally has multiple using statements.', 'The next line has the namespace declaration. A namespace is a collection of classes. The HelloWorldApplication namespace contains the class HelloWorld.', 'The next line has a class declaration, the class HelloWorld contains the data and method definitions that your program uses. Classes generally contain multiple methods. Methods define the behavior of the class. However, the HelloWorld class has only one method  Main.', 'The next line defines the Main method, which is the entry point for all C# programs. The Main  method states what the class does when executed.', 'The Main method specifies its behavior with the statement Console.WriteLine(""Hello World"");WriteLine is a method of the Console class defined in the System namespace. This statement causes the message ""Hello, World!"" to be displayed on the screen.', 'WriteLine is a method of the Console class defined in the System namespace. This statement causes the message ""Hello, World!"" to be displayed on the screen.', 'The last line Console.ReadKey(); is for the VS.NET Users. This makes the program wait for a key press and it prevents the screen from running and closing quickly when the program is launched from Visual Studio .NET.', 'Click the Run button or press F5 key to execute the project. A Command Prompt window appears that contains the line Hello World.', 'If there are no errors in your code, the command prompt takes you to the next line and generates helloworld.exe executable file.']","['\nusing System;\n\nnamespace HelloWorldApplication {\n   class HelloWorld {\n      static void Main(string[] args) {\n         /* my first program in C# */\n         Console.WriteLine(""Hello World"");\n         Console.ReadKey();\n      }\n   }\n}\n', '\nHello World\n']",['\nHello World\n'],[],"['Namespace declaration|||A class|||Class methods|||Class attributes|||A Main method|||Statements and Expressions|||Comments|||The first line of the program using System; -  the using keyword is used to include the System  namespace in the program. A program generally has multiple using statements.|||The next line has the namespace declaration. A namespace is a collection of classes. The HelloWorldApplication namespace contains the class HelloWorld.|||The next line has a class declaration, the class HelloWorld contains the data and method definitions that your program uses. Classes generally contain multiple methods. Methods define the behavior of the class. However, the HelloWorld class has only one method  Main.|||The next line defines the Main method, which is the entry point for all C# programs. The Main  method states what the class does when executed.|||The next line /*...*/ is ignored by the compiler and it is put to add  comments in the program.|||The Main method specifies its behavior with the statement Console.WriteLine(""Hello World"");|||WriteLine is a method of the Console class defined in the System namespace. This statement causes the message ""Hello, World!"" to be displayed on the screen.||||||The last line Console.ReadKey(); is for the VS.NET Users. This makes the program wait for a key press and it prevents the screen from running and closing quickly when the program is launched from Visual Studio .NET.|||C# is case sensitive.|||All statements and expression must end with a semicolon (;).|||The program execution starts at the Main method.|||Unlike Java, program file name could be different from the class name.|||Start Visual Studio.|||On the menu bar, choose File -> New -> Project.|||Choose Visual C# from templates, and then choose Windows.|||Choose Console Application.|||Specify a name for your project and click OK button.|||This creates a new project in Solution Explorer.|||Write code in the Code Editor.|||Click the Run button or press F5 key to execute the project. A Command Prompt window appears that contains the line Hello World.|||Open a text editor and add the above-mentioned code.|||Save the file as helloworld.cs|||Open the command prompt tool and go to the directory where you saved the file.|||Type csc helloworld.cs and press enter to compile your code.|||If there are no errors in your code, the command prompt takes you to the next line and generates helloworld.exe executable file.|||Type helloworld to execute your program.|||You can see the output Hello World printed on the screen.|||']"
4,['C# - Basic Syntax'],"['The using Keyword', 'The class Keyword', 'Comments in C#', 'Member Variables', 'Member Functions', 'Instantiating a Class', 'Identifiers', 'C# Keywords', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_program_structure.htm', 'https://www.tutorialspoint.com/csharp/csharp_data_types.htm', 'http://tpcg.io/xRqOPn', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_program_structure.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_data_types.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The first statement in any C# program is', 'The class keyword is used for declaring a class.', ""Single-line comments are indicated by the '//' symbol. For example,"", 'The following table lists the reserved keywords and contextual keywords in C# −']","['Let us look at implementation of a Rectangle class and discuss C# basic syntax −', 'When the above code is compiled and executed, it produces the following result −', 'The using keyword is used for including the namespaces in the program. A program can include multiple using statements.', 'In the preceding program, the class ExecuteRectangle contains the Main()  method and instantiates the Rectangle class.', 'In C#, some identifiers have special meaning in context of code, such as get and set are called contextual keywords.']","['C# is an object-oriented programming language. In Object-Oriented Programming methodology, a program consists of various objects that interact with each other by means of actions. The actions that an object may take are called methods. Objects of the same kind are said to have the same type or, are said to be in the same class.', 'For example, let us consider a Rectangle object. It has attributes such as length and width. Depending upon the design, it may need ways for accepting the values of these attributes, calculating the area, and displaying details.', 'Comments are used for explaining code. Compilers ignore the comment entries. The multiline comments in C# programs start with /* and terminates with the characters */ as shown below −', 'Variables are attributes or data members of a class, used for storing data. In the preceding program, the Rectangle class has two member variables named length and width.', 'Functions are set of statements that perform a specific task. The member functions of a class are declared within the class. Our sample class Rectangle contains three member functions:  AcceptDetails, GetArea and Display.', 'An identifier is a name used to identify a class, variable, function, or any other user-defined item. The basic rules for naming classes in C# are as follows −', 'A name must begin with a letter that could be followed by a sequence of letters, digits (0 - 9) or underscore. The first character in an identifier cannot be a digit.', 'It must not contain any embedded space or symbol such as? - + ! @ # % ^ & * ( ) [ ] { } . ; : "" \' / and \\. However, an underscore ( _ ) can be used.', 'Keywords are reserved words predefined to the C# compiler. These keywords cannot be used as identifiers. However, if you want to use these keywords as identifiers, you may prefix the keyword with the @ character.']","['\nusing System;\n\nnamespace RectangleApplication {\n   class Rectangle {\n      \n      // member variables\n      double length;\n      double width;\n      \n      public void Acceptdetails() {\n         length = 4.5;    \n         width = 3.5;\n      }\n      public double GetArea() {\n         return length * width; \n      }\n      public void Display() {\n         Console.WriteLine(""Length: {0}"", length);\n         Console.WriteLine(""Width: {0}"", width);\n         Console.WriteLine(""Area: {0}"", GetArea());\n      }\n   }\n   class ExecuteRectangle {\n      static void Main(string[] args) {\n         Rectangle r = new Rectangle();\n         r.Acceptdetails();\n         r.Display();\n         Console.ReadLine(); \n      }\n   }\n}\n', '\nLength: 4.5\nWidth: 3.5\nArea: 15.75\n', '\nusing System;\n', '\n/* This program demonstrates\nThe basic syntax of C# programming \nLanguage */\n', '\n}//end class Rectangle    \n']","['\nLength: 4.5\nWidth: 3.5\nArea: 15.75\n', '\nusing System;\n']",['Reserved Keywords&&&abstract|||as|||base|||bool|||break|||byte|||case&&&catch|||char|||checked|||class|||const|||continue|||decimal&&&default|||delegate|||do|||double|||else|||enum|||event&&&explicit|||extern|||false|||finally|||fixed|||float|||for&&&foreach|||goto|||if|||implicit|||in|||in (generic modifier)|||int&&&interface|||internal|||is|||lock|||long|||namespace|||new&&&null|||object|||operator|||out|||out (generic modifier)|||override|||params&&&private|||protected|||public|||readonly|||ref|||return|||sbyte&&&sealed|||short|||sizeof|||stackalloc|||static|||string|||struct&&&switch|||this|||throw|||true|||try|||typeof|||uint&&&ulong|||unchecked|||unsafe|||ushort|||using|||virtual|||void&&&volatile|||while|||||||||||||||&&&Contextual Keywords&&&add|||alias|||ascending|||descending|||dynamic|||from|||get&&&global|||group|||into|||join|||let|||orderby|||partial (type)&&&partial (method)|||remove|||select|||set|||||||||'],"['A name must begin with a letter that could be followed by a sequence of letters, digits (0 - 9) or underscore. The first character in an identifier cannot be a digit.|||It must not contain any embedded space or symbol such as? - + ! @ # % ^ & * ( ) [ ] { } . ; : "" \' / and \\. However, an underscore ( _ ) can be used.|||It should not be a C# keyword.|||']"
5,['C# - Data Types'],"['Value Type', 'Reference Type', 'Pointer Type', 'Useful Video Courses']","['Object Type', 'Dynamic Type', 'String Type']","['https://www.tutorialspoint.com/csharp/csharp_basic_syntax.htm', 'https://www.tutorialspoint.com/csharp/csharp_type_conversion.htm', 'http://tpcg.io/0migdg', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_basic_syntax.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_type_conversion.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The variables in C#, are categorized into the following types −', 'The following table lists the available value types in C# 2010 −', 'Syntax for declaring a dynamic type is −', 'A @quoted string literal looks as follows −', 'Syntax for declaring a pointer type is −', ""We will discuss pointer types in the chapter 'Unsafe Codes'.""]","['Value type variables can be assigned a value directly. They are derived from the class  System.ValueType.', 'When the above code is compiled and executed, it produces the following result −', 'The reference types do not contain the actual data stored in a variable, but they contain a reference to the variables.', 'The user-defined reference types are: class, interface, or delegate. We will discuss these types in later chapter.']","['The value types directly contain data. Some examples are int, char, and float, which stores numbers, alphabets, and floating point numbers, respectively. When you declare an int type, the system allocates memory to store the value.', 'To get the exact size of a type or a variable on a particular platform, you can use the sizeof method. The expression sizeof(type) yields the storage size of the object or type in bytes. Following is an example to get the size of int type on any machine −', 'In other words, they refer to a memory location. Using multiple variables, the reference types can refer to a memory location. If the data in the memory location is changed by one of the variables, the other variable automatically reflects this change in value. Example of built-in reference types are: object, dynamic, and string.', 'The Object Type is the ultimate base class for all data types in C# Common Type System (CTS). Object is an alias for System.Object class. The object types can be assigned values of any other types, value types, reference types, predefined or user-defined types. However, before assigning values, it needs type conversion.', 'When a value type is converted to object type, it is called boxing and on the other hand, when an object type is converted to a value type, it is called unboxing.', 'You can store any type of value in the dynamic data type variable. Type checking for these types of variables takes place at run-time.', 'Dynamic types are similar to object types except that type checking for object type variables takes place at compile time, whereas that for the dynamic type variables takes place at run time.', 'The String Type allows you to assign any string values to a variable. The string type is an alias for the System.String class. It is derived from object type. The value for a string type can be assigned using string literals in two forms: quoted and @quoted.', 'Pointer type variables store the memory address of another type. Pointers in C# have the same capabilities as the pointers in C or C++.']","['\nusing System;\n\nnamespace DataTypeApplication {\n   class Program {\n      static void Main(string[] args) {\n         Console.WriteLine(""Size of int: {0}"", sizeof(int));\n         Console.ReadLine();\n      }\n   }\n}\n', '\nSize of int: 4\n', '\nobject obj;\nobj = 100; // this is boxing\n', '\ndynamic <variable_name> = value;\n', '\ndynamic d = 20;\n', '\nString str = ""Tutorials Point"";\n', '\n@""Tutorials Point"";\n', '\ntype* identifier;\n', '\nchar* cptr;\nint* iptr;\n']","['\nSize of int: 4\n', '\ndynamic <variable_name> = value;\n']","[""Type|||Represents|||Range|||Default Value&&&bool|||Boolean value|||True or False|||False&&&byte|||8-bit unsigned integer|||0 to 255|||0&&&char|||16-bit Unicode character|||U +0000 to U +ffff|||'\\0'&&&decimal|||128-bit precise decimal values with 28-29 significant digits|||(-7.9 x 1028 to 7.9 x 1028) |||/ 100 to 28||||||0.0M&&&double|||64-bit double-precision floating point type|||(+/-)5.0 x 10-324 to (+/-)1.7 x 10308|||0.0D&&&float|||32-bit single-precision floating point type|||-3.4 x 1038 to + 3.4 x 1038|||0.0F&&&int|||32-bit signed integer type|||-2,147,483,648 to 2,147,483,647|||0&&&long|||64-bit signed integer type|||-9,223,372,036,854,775,808 to |||9,223,372,036,854,775,807||||||0L&&&sbyte|||8-bit signed integer type|||-128 to 127|||0&&&short|||16-bit signed integer type|||-32,768 to 32,767|||0&&&uint|||32-bit unsigned integer type|||0 to 4,294,967,295|||0&&&ulong|||64-bit unsigned integer type|||0 to 18,446,744,073,709,551,615|||0&&&ushort|||16-bit unsigned integer type|||0 to 65,535|||0""]",['Value types|||Reference types|||Pointer types|||']
6,['C# - Type Conversion'],"['C# Type Conversion Methods', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_data_types.htm', 'https://www.tutorialspoint.com/csharp/csharp_variables.htm', 'http://tpcg.io/JzfLhC', 'http://tpcg.io/Wjo68S', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_data_types.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_variables.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The following example shows an explicit type conversion −', 'C# provides the following built-in type conversion methods −', 'Converts a type to a Boolean value, where possible.', 'Converts a type to a single Unicode character, where possible.', 'Converts a type (integer or string type) to date-time structures.', 'Converts a floating point or integer type to a decimal type.', 'Converts a type to a 16-bit integer.', 'Converts a type to a 32-bit integer.', 'Converts a type to a 64-bit integer.', 'Converts a type to a signed byte type.', 'Converts a type to a small floating point number.', 'Converts a type to a specified type.', 'Converts a type to an unsigned int type.', 'Converts a type to an unsigned long type.', 'Converts a type to an unsigned big integer.', 'The following example converts various value types to string type −']","['When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['Type conversion is converting one type of data to another type. It is also known as Type Casting. In C#, type casting has two forms −', 'Implicit type conversion − These conversions are performed by C# in a type-safe manner. For example, are conversions from smaller to larger integral types and conversions from derived classes to base classes.', 'Explicit type conversion − These conversions are done explicitly by users using the pre-defined functions. Explicit conversions require a cast operator.']","['\nusing System;\n\nnamespace TypeConversionApplication {\n   class ExplicitConversion {\n      static void Main(string[] args) {\n         double d = 5673.74; \n         int i;\n         \n         // cast double to int.\n         i = (int)d;\n         Console.WriteLine(i);\n         Console.ReadKey();\n      }\n   }\n}\n', '\n5673\n', '\nusing System;\n\nnamespace TypeConversionApplication {\n   class StringConversion {\n      static void Main(string[] args) {\n         int i = 75;\n         float f = 53.005f;\n         double d = 2345.7652;\n         bool b = true;\n\n         Console.WriteLine(i.ToString());\n         Console.WriteLine(f.ToString());\n         Console.WriteLine(d.ToString());\n         Console.WriteLine(b.ToString());\n         Console.ReadKey();\n            \n      }\n   }\n}\n', '\n75\n53.005\n2345.7652\nTrue\n']","['\n5673\n', '\n75\n53.005\n2345.7652\nTrue\n']","['Sr.No.|||Methods & Description&&&1|||ToBoolean|||Converts a type to a Boolean value, where possible.|||&&&2|||ToByte|||Converts a type to a byte.|||&&&3|||ToChar|||Converts a type to a single Unicode character, where possible.|||&&&4|||ToDateTime|||Converts a type (integer or string type) to date-time structures.|||&&&5|||ToDecimal|||Converts a floating point or integer type to a decimal type.|||&&&6|||ToDouble|||Converts a type to a double type.|||&&&7|||ToInt16|||Converts a type to a 16-bit integer.|||&&&8|||ToInt32|||Converts a type to a 32-bit integer.|||&&&9|||ToInt64|||Converts a type to a 64-bit integer.|||&&&10|||ToSbyte|||Converts a type to a signed byte type.|||&&&11|||ToSingle|||Converts a type to a small floating point number.|||&&&12|||ToString|||Converts a type to a string.|||&&&13|||ToType|||Converts a type to a specified type.|||&&&14|||ToUInt16|||Converts a type to an unsigned int type.|||&&&15|||ToUInt32|||Converts a type to an unsigned long type.|||&&&16|||ToUInt64|||Converts a type to an unsigned big integer.|||']","['Implicit type conversion − These conversions are performed by C# in a type-safe manner. For example, are conversions from smaller to larger integral types and conversions from derived classes to base classes.|||Explicit type conversion − These conversions are done explicitly by users using the pre-defined functions. Explicit conversions require a cast operator.|||']"
7,['C# - Variables'],"['Defining Variables', 'Initializing Variables', 'Accepting Values from User', 'Lvalue and Rvalue Expressions in C#', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_type_conversion.htm', 'https://www.tutorialspoint.com/csharp/csharp_constants.htm', 'http://tpcg.io/u3on95', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_type_conversion.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_constants.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The basic value types provided in C# can be categorized as −', 'Syntax for variable definition in C# is −', 'Some valid variable definitions are shown here −', 'You can initialize a variable at the time of definition as −', 'The following example uses various types of variables −', 'There are two kinds of expressions in C# −', 'But following is not a valid statement and would generate compile-time error −']","['When the above code is compiled and executed, it produces the following result −', 'lvalue − An expression that is an lvalue may appear as either the left-hand or right-hand side of an assignment.', 'rvalue − An expression that is an rvalue may appear on the right- but not left-hand side of an assignment.']","[""A variable is nothing but a name given to a storage area that our programs can manipulate. Each variable in C# has a specific type, which determines the size and layout of the variable's memory the range of values that can be stored within that memory and the set of operations that can be applied to the variable."", 'C# also allows defining other value types of variable such as enum and reference types of variables such as  class, which we will cover in subsequent chapters.', 'Here, data_type must be a valid C# data type including char, int, float, double, or any user-defined data type, and variable_list may consist of one or more identifier names separated by commas.', 'Variables are initialized (assigned a value) with an equal sign followed by a constant expression. The general form of initialization is −', 'Variables can be initialized in their declaration. The initializer consists of an equal sign followed by a constant expression as −', 'It is a good programming practice to initialize variables properly, otherwise sometimes program may produce unexpected result.', 'The Console class in the System namespace provides a function ReadLine() for accepting input from the user and store it into a variable.', 'The function Convert.ToInt32() converts the data entered by the user to int data type, because Console.ReadLine() accepts the data in string format.', 'Variables are lvalues and hence they may appear on the left-hand side of an assignment. Numeric literals are rvalues and hence they may not be assigned and can not appear on the left-hand side. Following is a valid C# statement −']","['\n<data_type> <variable_list>;\n', '\nint i, j, k;\nchar c, ch;\nfloat f, salary;\ndouble d;\n', '\nint i = 100;\n', '\nvariable_name = value;\n', '\n<data_type> <variable_name> = value;\n', ""\nint d = 3, f = 5;    /* initializing d and f. */\nbyte z = 22;         /* initializes z. */\ndouble pi = 3.14159; /* declares an approximation of pi. */\nchar x = 'x';        /* the variable x has the value 'x'. */\n"", '\nusing System;\n\nnamespace VariableDefinition {\n   class Program {\n      static void Main(string[] args) {\n         short a;\n         int b ;\n         double c;\n\n         /* actual initialization */\n         a = 10;\n         b = 20;\n         c = a + b;\n         Console.WriteLine(""a = {0}, b = {1}, c = {2}"", a, b, c);\n         Console.ReadLine();\n      }\n   }\n}\n', '\na = 10, b = 20, c = 30\n', '\nint num;\nnum = Convert.ToInt32(Console.ReadLine());\n', '\nint g = 20;\n', '\n10 = 20;\n']","['\n<data_type> <variable_list>;\n', '\nint i, j, k;\nchar c, ch;\nfloat f, salary;\ndouble d;\n', '\nint i = 100;\n', '\nvariable_name = value;\n', '\n<data_type> <variable_name> = value;\n', '\na = 10, b = 20, c = 30\n', '\nint g = 20;\n', '\n10 = 20;\n']","['Type|||Example&&&Integral types|||sbyte, byte, short, ushort, int, uint, long, ulong, and char&&&Floating point types|||float and double&&&Decimal types|||decimal&&&Boolean types|||true or false values, as assigned&&&Nullable types|||Nullable data types']",['lvalue − An expression that is an lvalue may appear as either the left-hand or right-hand side of an assignment.|||rvalue − An expression that is an rvalue may appear on the right- but not left-hand side of an assignment.|||']
8,['C# - Constants and Literals'],"['Integer Literals', 'Floating-point Literals', 'Character Constants', 'String Literals', 'Defining Constants', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_variables.htm', 'https://www.tutorialspoint.com/csharp/csharp_operators.htm', 'http://tpcg.io/dF4h0V', 'http://tpcg.io/C4QjxW', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_variables.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_operators.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Here are some examples of integer literals −', 'Following are other examples of various types of Integer literals −', 'Here are some examples of floating-point literals −', 'Following is the example to show few escape sequence characters −']","['When the above code is compiled and executed, it produces the following result −', 'You can break a long line into multiple lines using string literals and separating the parts using whitespaces.', 'Here are some examples of string literals. All the three forms are identical strings.', 'Constants are defined using the const keyword. Syntax for defining a constant is −', 'The following program demonstrates defining and using a constant in your program −', 'When the above code is compiled and executed, it produces the following result −']","['The constants refer to fixed values that the program may not alter during its execution. These fixed values are also called literals. Constants can be of any of the basic data types like an integer constant, a floating constant, a character constant, or a string literal. There are also enumeration constants as well.', 'The constants are treated just like regular variables except that their values cannot be modified after their definition.', 'An integer literal can be a decimal, or hexadecimal constant. A prefix specifies the base or radix: 0x or 0X for hexadecimal, and there is no prefix id for decimal.', 'An integer literal can also have a suffix that is a combination of U and L, for unsigned and long, respectively. The suffix can be uppercase or lowercase and can be in any order.', 'A floating-point literal has an integer part, a decimal point, a fractional part, and an exponent part. You can represent floating point literals either in decimal form or exponential form.', 'While representing in decimal form, you must include the decimal point, the exponent, or both; and while representing using exponential form you must include the integer part, the fractional part, or both. The signed exponent is introduced by e or E.', ""Character literals are enclosed in single quotes. For example, 'x' and can be stored in a simple variable of char type. A character literal can be a plain character (such as 'x'), an escape sequence (such as '\\t'), or a universal character (such as '\\u02C0')."", 'There are certain characters in C# when they are preceded by a backslash. They have special meaning and they are used to represent like newline (\\n) or tab (\\t). Here, is a list of some of such escape sequence codes −', 'String literals or constants are enclosed in double quotes """" or with @"""". A string contains characters that are similar to character literals: plain characters, escape sequences, and universal characters.']","['\n212         /* Legal */\n215u        /* Legal */\n0xFeeL      /* Legal */\n', '\n85         /* decimal */\n0x4b       /* hexadecimal */\n30         /* int */\n30u        /* unsigned int */\n30l        /* long */\n30ul       /* unsigned long */\n', '\n3.14159       /* Legal */\n314159E-5F    /* Legal */\n510E          /* Illegal: incomplete exponent */\n210f          /* Illegal: no decimal or exponent */\n.e55          /* Illegal: missing integer or fraction */\n', '\nusing System;\n\nnamespace EscapeChar {\n   class Program {\n      static void Main(string[] args) {\n         Console.WriteLine(""Hello\\tWorld\\n\\n"");\n         Console.ReadLine();\n      }\n   }\n}\n', '\nHello   World\n', '\n""hello, dear""\n""hello, \\\ndear""\n""hello, "" ""d"" ""ear""\n@""hello dear""\n', '\nconst <data_type> <constant_name> = value;\n', '\nusing System;\n\nnamespace DeclaringConstants {\n   class Program {\n      static void Main(string[] args) {\n         const double pi = 3.14159;   \n            \n         // constant declaration \n         double r;\n         Console.WriteLine(""Enter Radius: "");\n         r = Convert.ToDouble(Console.ReadLine());\n            \n         double areaCircle = pi * r * r;\n         Console.WriteLine(""Radius: {0}, Area: {1}"", r, areaCircle);\n         Console.ReadLine();\n      }\n   }\n}\n', '\nEnter Radius: \n3\nRadius: 3, Area: 28.27431\n']","['\nHello   World\n', '\nconst <data_type> <constant_name> = value;\n', '\nEnter Radius: \n3\nRadius: 3, Area: 28.27431\n']","['Escape sequence|||Meaning&&&\\\\|||\\ character&&&\\\'||| \' character&&&\\""|||"" character&&&\\?|||? character&&&\\a|||Alert or bell&&&\\b|||Backspace&&&\\f|||Form fee&&&\\n|||Newline&&&\\r|||Carriage return&&&\\t|||Horizontal tab&&&\\v|||Vertical tab&&&\\xhh . . .|||Hexadecimal number of one or more digits']",[]
9,['C# - Operators'],"['Arithmetic Operators', 'Relational Operators', 'Logical Operators', 'Bitwise Operators', 'Assignment Operators', 'Miscellaneous Operators', 'Operator Precedence in C#', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_constants.htm', 'https://www.tutorialspoint.com/csharp/csharp_decision_making.htm', 'https://www.tutorialspoint.com/csharp/csharp_arithmetic_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_relational_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_logical_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_bitwise_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_assignment_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_misc_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_operators_precedence.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_constants.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_decision_making.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Assume if A = 60; and B = 13; then in the binary format they are as follows −', 'There are following assignment operators supported by C# −', 'StringReader r = obj as StringReader;']","['This tutorial explains the arithmetic, relational, logical, bitwise, assignment, and other operators one by one.', 'Bitwise operator works on bits and perform bit by bit operation. The truth tables for &, |, and ^ are as follows −', 'There are few other important operators including sizeof, typeof and ? :  supported by C#.']","['An operator is a symbol that tells the compiler to perform specific mathematical or logical manipulations. C# has rich set of built-in operators and provides the following type of operators −', 'Following table shows all the arithmetic operators supported by C#. Assume variable A holds 10 and variable B holds 20 then −', 'Following table shows all the relational operators supported by C#. Assume variable A holds 10 and variable B holds 20, then −', 'Following table shows all the logical operators supported by C#. Assume variable A holds Boolean value true and variable B holds Boolean value false, then −', 'The Bitwise operators supported by C# are listed in the following table. Assume variable A holds 60 and variable B holds 13, then −', 'Operator precedence determines the grouping of terms in an expression. This affects evaluation of an expression. Certain operators have higher precedence than others; for example, the multiplication operator has higher precedence than the addition operator.', 'For example x = 7 + 3 * 2; here, x is assigned 13, not 20 because operator * has higher precedence than +, so the first evaluation takes place for 3*2 and then 7 is added into it.', 'Here, operators with the highest precedence appear at the top of the table, those with the lowest appear at the bottom. Within an expression, higher precedence operators are evaluated first.']",[],[],"['Operator|||Description|||Example&&&+|||Adds two operands|||A + B = 30&&&-|||Subtracts second operand from the first|||A - B = -10&&&*|||Multiplies both operands|||A * B = 200&&&/|||Divides numerator by de-numerator|||B / A = 2&&&%|||Modulus Operator and remainder of after an integer division|||B % A = 0&&&++|||Increment operator increases integer value by one|||A++ = 11&&&--|||Decrement operator decreases integer value by one|||A-- = 9', 'Operator|||Description|||Example&&&==|||Checks if the values of two operands are equal or not, if yes then condition becomes true.|||(A == B) is not true.&&&!=|||Checks if the values of two operands are equal or not, if values are not equal then condition becomes true.|||(A != B) is true.&&&>|||Checks if the value of left  operand is greater than the value of right operand, if yes then condition becomes true.|||(A > B) is not true. &&&<|||Checks if the value of left operand is less than the value of right operand, if yes then condition becomes true.|||(A < B) is true.&&&>=|||Checks if the value of left operand is greater than or equal to the value of right operand, if yes then condition becomes true.|||(A >= B) is not true.&&&<=|||Checks if the value of left operand is less than or equal to the value of right operand, if yes then condition becomes true.|||(A <= B) is true.', 'Operator|||Description|||Example&&&&&|||Called Logical AND operator. If both the operands are non zero then condition becomes true.|||(A && B) is false.&&&|||||Called Logical OR Operator. If any of the two operands is non zero then condition becomes true.|||(A || B) is true.&&&!|||Called Logical NOT Operator. Use to reverses the logical state of its operand. If a condition is true then Logical NOT operator will make false.|||!(A && B) is true.', 'p|||q|||p & q|||p | q|||p ^ q&&&0|||0|||0|||0|||0&&&0|||1|||0|||1|||1&&&1|||1|||1|||1|||0&&&1|||0|||0|||1|||1', ""Operator|||Description|||Example&&&&|||Binary AND Operator copies a bit to the result if it exists in both operands.|||(A & B) = 12, which is 0000 1100&&&||||Binary OR Operator copies a bit if it exists in either operand.|||(A | B) = 61, which is 0011 1101&&&^|||Binary XOR Operator copies the bit if it is set in one operand but not both.|||(A ^ B) = 49, which is 0011 0001&&&~|||Binary Ones Complement Operator is unary and has the effect of 'flipping' bits.|||(~A ) = -61, which is 1100 0011 in 2's complement due to a signed binary number.&&&<<|||Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand.|||A << 2 = 240, which is 1111 0000&&&>>|||Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand.|||A >> 2 = 15, which is 0000 1111"", 'Operator|||Description|||Example&&&=|||Simple assignment operator, Assigns values from right side operands to left side operand|||C = A + B assigns value of A + B into C&&&+=|||Add AND assignment operator, It adds right operand to the left operand and assign the result to left operand|||C += A is equivalent to C = C + A&&&-=|||Subtract AND assignment operator, It subtracts right operand from the left operand and assign the result to left operand|||C -= A is equivalent to C = C - A&&&*=|||Multiply AND assignment operator, It multiplies right operand with the left operand and assign the result to left operand|||C *= A is equivalent to C = C * A&&&/=|||Divide AND assignment operator, It divides left operand with the right operand and assign the result to left operand|||C /= A is equivalent to C = C / A&&&%=|||Modulus AND assignment operator, It takes modulus using two operands and assign the result to left operand|||C %= A is equivalent to C = C % A&&&<<=|||Left shift AND assignment operator|||C <<= 2 is same as  C = C << 2&&&>>=|||Right shift AND assignment operator|||C >>= 2 is same as  C = C >> 2&&&&=|||Bitwise AND assignment operator|||C &= 2 is same as  C = C & 2&&&^=|||bitwise exclusive OR and assignment operator|||C ^= 2 is same as  C = C ^ 2&&&|=|||bitwise inclusive OR and assignment operator|||C |= 2 is same as  C = C | 2', 'Operator|||Description|||Example&&&sizeof()|||Returns the size of a data type.|||sizeof(int), returns 4.&&&typeof()|||Returns the type of a class.|||typeof(StreamReader);&&&&|||Returns the address of an variable.|||&a; returns actual address of the variable.&&&*|||Pointer to a variable.|||*a; creates pointer named \'a\' to a variable.&&&? :|||Conditional Expression|||If Condition is true ? Then value X : Otherwise value Y&&&is|||Determines whether an object is of a certain type.|||If( Ford is Car)  // checks if Ford is an object of the Car class.&&&as|||Cast without raising an exception if the cast fails.|||Object obj = new StringReader(""Hello"");|||StringReader r = obj as StringReader;|||', 'Category|||Operator|||Associativity&&&Postfix|||() [] -> .  ++  - - |||Left to right&&&Unary|||+  -  !  ~  ++  - -  (type)*  &  sizeof|||Right to left&&&Multiplicative |||* / %|||Left to right&&&Additive |||+ -|||Left to right&&&Shift |||<< >>|||Left to right&&&Relational |||< <=  > >=|||Left to right&&&Equality |||==  !=|||Left to right&&&Bitwise AND|||&|||Left to right&&&Bitwise XOR|||^|||Left to right&&&Bitwise OR|||||||Left to right&&&Logical AND|||&&|||Left to right&&&Logical OR||||||||Left to right&&&Conditional|||?:|||Right to left&&&Assignment|||=  +=  -=  *=  /=  %=>>=  <<=  &=  ^=   |=|||Right to left&&&Comma|||,|||Left to right']",['Arithmetic Operators|||Relational Operators|||Logical Operators|||Bitwise Operators|||Assignment Operators|||Misc Operators|||']
10,['C# - Decision Making'],"['The ? : Operator', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_operators.htm', 'https://www.tutorialspoint.com/csharp/csharp_loops.htm', 'https://www.tutorialspoint.com/csharp/if_statement_in_csharp.htm', 'https://www.tutorialspoint.com/csharp/if_else_statement_in_csharp.htm', 'https://www.tutorialspoint.com/csharp/nested_if_statements_in_csharp.htm', 'https://www.tutorialspoint.com/csharp/switch_statement_in_csharp.htm', 'https://www.tutorialspoint.com/csharp/nested_switch_statements_in_csharp.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_operators.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_loops.htm']","['https://www.tutorialspoint.com/csharp/images/decision_making.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['You can use one switch statement inside another switch  statement(s).'],"['Following is the general form of a typical decision making structure found in most of the programming languages −', 'C# provides following types of decision making statements. Click the following links to check their detail.', 'An if statement consists of a boolean expression followed by one or more statements.', 'An if statement can be followed by an optional else statement, which executes when the boolean expression is false.', 'You can use one if or else if statement inside another if or else if statement(s).', 'A switch statement allows a variable to be tested for equality against a list of values.', 'Where Exp1, Exp2, and Exp3 are expressions. Notice the use and placement of the colon.']","['Decision making structures requires the programmer to specify one or more conditions to be evaluated or tested by the program, along with a statement or statements to be executed if the condition is determined to be true, and optionally, other statements to be executed if the condition is determined to be false.', 'We have covered conditional operator ? : in previous chapter which can be used to replace if...else statements. It has the following general form −', 'The value of a ? expression is determined as follows: Exp1 is evaluated. If it is true, then Exp2 is evaluated and becomes the value of the entire ? expression. If Exp1 is false, then Exp3 is evaluated and its value becomes the value of the expression.']",['\nExp1 ? Exp2 : Exp3;\n'],['\nExp1 ? Exp2 : Exp3;\n'],"['Sr.No.|||Statement & Description&&&1|||if statement|||An if statement consists of a boolean expression followed by one or more statements.&&&2|||if...else statement|||An if statement can be followed by an optional else statement, which executes when the boolean expression is false.&&&3|||nested if statements|||You can use one if or else if statement inside another if or else if statement(s).&&&4|||switch statement|||A switch statement allows a variable to be tested for equality against a list of values.&&&5|||nested switch statements|||You can use one switch statement inside another switch  statement(s).']",[]
11,['C# - Loops'],"['Loop Control Statements', 'Infinite Loop', 'Useful Video Courses']",['Example'],"['https://www.tutorialspoint.com/csharp/csharp_decision_making.htm', 'https://www.tutorialspoint.com/csharp/csharp_encapsulation.htm', 'https://www.tutorialspoint.com/csharp/csharp_while_loop.htm', 'https://www.tutorialspoint.com/csharp/csharp_for_loop.htm', 'https://www.tutorialspoint.com/csharp/csharp_do_while_loop.htm', 'https://www.tutorialspoint.com/csharp/csharp_nested_loops.htm', 'https://www.tutorialspoint.com/csharp/csharp_break_statement.htm', 'https://www.tutorialspoint.com/csharp/csharp_continue_statement.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_decision_making.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_encapsulation.htm']","['https://www.tutorialspoint.com/csharp/images/loop_architecture.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['You can use one or more loop inside any another while, for or do..while loop.']","['Programming languages provide various control structures that allow for more complicated execution paths.', 'C# provides following types of loop to handle looping requirements. Click the following links to check their detail.', 'It executes a sequence of statements multiple times and abbreviates the code that manages the loop variable.', 'It is similar to a while statement, except that it tests the condition at the end of the loop body', 'C# provides the following control statements. Click the following links to check their details.', 'Causes the loop to skip the remainder of its body and immediately retest its condition prior to reiterating.']","['There may be a situation, when you need to execute a block of code several number of times. In general, the statements are executed sequentially: The first statement in a function is executed first, followed by the second, and so on.', 'A loop statement allows us to execute a statement or a group of statements multiple times and following is the general from of a loop statement in most of the programming languages −', 'It repeats a statement or a group of statements while a given condition is true. It tests the condition before executing the loop body.', 'Loop control statements change execution from its normal sequence. When execution leaves a scope, all automatic objects that were created in that scope are destroyed.', 'Terminates the loop or switch statement and transfers execution to the statement immediately following the loop or switch.', 'A loop becomes infinite loop if a condition never becomes false. The for loop is traditionally used for this purpose. Since none of the three expressions that form the for loop are required, you can make an endless loop by leaving the conditional expression empty.', 'When the conditional expression is absent, it is assumed to be true. You may have an initialization and increment expression, but programmers more commonly use the for(;;) construct to signify an infinite loop.']","['\nusing System;\n\nnamespace Loops {\n   class Program {\n      static void Main(string[] args) {\n         for (; ; ) {\n            Console.WriteLine(""Hey! I am Trapped"");\n         }\n      }\n   }\n} \n']",[],"['Sr.No.|||Loop Type & Description&&&1|||while loop|||It repeats a statement or a group of statements while a given condition is true. It tests the condition before executing the loop body.&&&2|||for loop|||It executes a sequence of statements multiple times and abbreviates the code that manages the loop variable.&&&3|||do...while loop|||It is similar to a while statement, except that it tests the condition at the end of the loop body&&&4|||nested loops|||You can use one or more loop inside any another while, for or do..while loop.', 'Sr.No.|||Control Statement & Description&&&1|||break statement|||Terminates the loop or switch statement and transfers execution to the statement immediately following the loop or switch.&&&2|||continue statement|||Causes the loop to skip the remainder of its body and immediately retest its condition prior to reiterating.']",[]
12,['C# - Encapsulation'],"['Public Access Specifier', 'Private Access Specifier', 'Protected Access Specifier', 'Internal Access Specifier', 'Protected Internal Access Specifier', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_loops.htm', 'https://www.tutorialspoint.com/csharp/csharp_methods.htm', 'http://tpcg.io/K4GlIi', 'http://tpcg.io/rIUpfp', 'http://tpcg.io/m3ixfT', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_loops.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_methods.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The following example illustrates this −', 'The following example illustrates this −', 'The following program illustrates this −']","['When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","[""Encapsulation is defined 'as the process of enclosing one or more items within a physical or logical package'. Encapsulation, in object oriented programming methodology, prevents access to implementation details."", 'Abstraction and encapsulation are related features in object oriented programming. Abstraction allows making relevant information visible and encapsulation enables a programmer to implement the desired level of abstraction.', 'Encapsulation is implemented by using access specifiers. An access specifier defines the scope and visibility of a class member. C# supports the following access specifiers −', 'Public access specifier allows a class to expose its member variables and member functions to other functions and objects. Any public member can be accessed from outside the class.', 'In the preceding example, the member variables length and width are declared public, so they can be accessed from the function Main() using an instance of the Rectangle class, named r.', 'The member function Display() and GetArea() can also access these variables directly without using any instance of the class.', 'The member functions Display() is also declared public, so it can also be accessed from Main() using an instance of the Rectangle class, named r.', 'Private access specifier allows a class to hide its member variables and member functions from other functions and objects. Only functions of the same class can access its private members. Even an instance of a class cannot access its private members.', 'In the preceding example, the member variables length and width are declared private, so they cannot be accessed from the function Main(). The member functions AcceptDetails() and Display() can access these variables. Since the member functions AcceptDetails() and Display() are declared public, they can be accessed from Main() using an instance of the Rectangle class, named r.', 'Protected access specifier allows a child class to access the member variables and member functions of its base class. This way it helps in implementing inheritance. We will discuss this in more details in the inheritance chapter.', 'Internal access specifier allows a class to expose its member variables and member functions to other functions and objects in the current assembly. In other words, any member with internal access specifier can be accessed from any class or method defined within the application in which the member is defined.', ""In the preceding example, notice that the member function GetArea() is not declared with any access specifier. Then what would be the default access specifier of a class member if we don't mention any? It is private."", 'The protected internal access specifier allows a class to hide its member variables and member functions from other class objects and functions, except a child class within the same application. This is also used while implementing inheritance.']","['\nusing System;\n\nnamespace RectangleApplication {\n   class Rectangle {\n      //member variables\n      public double length;\n      public double width;\n      \n      public double GetArea() {\n         return length * width;\n      }\n      public void Display() {\n         Console.WriteLine(""Length: {0}"", length);\n         Console.WriteLine(""Width: {0}"", width);\n         Console.WriteLine(""Area: {0}"", GetArea());\n      }\n   }//end class Rectangle\n   \n   class ExecuteRectangle {\n      static void Main(string[] args) {\n         Rectangle r = new Rectangle();\n         r.length = 4.5;\n         r.width = 3.5;\n         r.Display();\n         Console.ReadLine();\n      }\n   }\n}\n', '\nLength: 4.5\nWidth: 3.5\nArea: 15.75\n', '\nusing System;\n\nnamespace RectangleApplication {\n   class Rectangle {\n      //member variables\n      private double length;\n      private double width;\n      \n      public void Acceptdetails() {\n         Console.WriteLine(""Enter Length: "");\n         length = Convert.ToDouble(Console.ReadLine());\n         Console.WriteLine(""Enter Width: "");\n         width = Convert.ToDouble(Console.ReadLine());\n      }\n      public double GetArea() {\n         return length * width;\n      }\n      public void Display() {\n         Console.WriteLine(""Length: {0}"", length);\n         Console.WriteLine(""Width: {0}"", width);\n         Console.WriteLine(""Area: {0}"", GetArea());\n      }\n   }//end class Rectangle\n   \n   class ExecuteRectangle {\n      static void Main(string[] args) {\n         Rectangle r = new Rectangle();\n         r.Acceptdetails();\n         r.Display();\n         Console.ReadLine();\n      }\n   }\n}\n', '\nEnter Length:\n4.4\nEnter Width:\n3.3\nLength: 4.4\nWidth: 3.3\nArea: 14.52\n', '\nusing System;\n\nnamespace RectangleApplication {\n   class Rectangle {\n      //member variables\n      internal double length;\n      internal double width;\n      \n      double GetArea() {\n         return length * width;\n      }\n      public void Display() {\n         Console.WriteLine(""Length: {0}"", length);\n         Console.WriteLine(""Width: {0}"", width);\n         Console.WriteLine(""Area: {0}"", GetArea());\n      }\n   }//end class Rectangle\n   \n   class ExecuteRectangle {\n      static void Main(string[] args) {\n         Rectangle r = new Rectangle();\n         r.length = 4.5;\n         r.width = 3.5;\n         r.Display();\n         Console.ReadLine();\n      }\n   }\n}\n', '\nLength: 4.5\nWidth: 3.5\nArea: 15.75\n']","['\nLength: 4.5\nWidth: 3.5\nArea: 15.75\n', '\nEnter Length:\n4.4\nEnter Width:\n3.3\nLength: 4.4\nWidth: 3.3\nArea: 14.52\n', '\nLength: 4.5\nWidth: 3.5\nArea: 15.75\n']",[],['Public|||Private|||Protected|||Internal|||Protected internal|||']
13,['C# - Methods'],"['Defining Methods in C#', 'Example', 'Calling Methods in C#', 'Recursive Method Call', 'Passing Parameters to a Method', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_encapsulation.htm', 'https://www.tutorialspoint.com/csharp/csharp_nullables.htm', 'http://tpcg.io/vhdOSt', 'http://tpcg.io/sAp1Ws', 'http://tpcg.io/BLPZ6q', 'https://www.tutorialspoint.com/csharp/csharp_value_parameters.htm', 'https://www.tutorialspoint.com/csharp/csharp_reference_parameters.htm', 'https://www.tutorialspoint.com/csharp/csharp_output_parameters.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_encapsulation.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_nullables.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Following are the various elements of a method −', 'This method helps in returning more than one value.']","['Access Specifier − This determines the visibility of a variable or a method from another class.', 'Method body − This contains the set of instructions needed to complete the required activity.', 'You can call a method using the name of the method. The following example illustrates this −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['A method is a group of statements that together perform a task. Every C# program has at least one class with a method named Main.', 'When you define a method, you basically declare the elements of its structure. The syntax for defining a method in C# is as follows −', 'Return type − A method may return a value. The return type is the data type of the value the method returns. If the method is not returning any values, then the return type is void.', 'Method name − Method name is a unique identifier and it is case sensitive. It cannot be same as any other identifier declared in the class.', 'Parameter list − Enclosed between parentheses, the parameters are used to pass and receive data from a method. The parameter list refers to the type, order, and number of the parameters of a method. Parameters are optional; that is, a method may contain no parameters.', 'Following code snippet shows a function FindMax that takes two integer values and returns the larger of the two. It has public access specifier, so it can be accessed from outside the class using an instance of the class.', 'You can also call public method from other classes by using the instance of the class. For example, the method FindMax belongs to the NumberManipulator class, you can call it from another class Test.', 'A method can call itself. This is known as recursion. Following is an example that calculates factorial for a given number using a recursive function −', 'When method with parameters is called, you need to pass the parameters to the method. There are three ways that parameters can be passed to a method −', 'This method copies the actual value of an argument into the formal parameter of the function. In this case, changes made to the parameter inside the function have no effect on the argument.', 'This method copies the reference to the memory location of an argument into the formal parameter. This means that changes made to the parameter affect the argument.']","['\n<Access Specifier> <Return Type> <Method Name>(Parameter List) {\n   Method Body\n}\n', '\nclass NumberManipulator {\n\n   public int FindMax(int num1, int num2) {\n      /* local variable declaration */\n      int result;\n\n      if (num1 > num2)\n         result = num1;\n      else\n         result = num2;\n\n      return result;\n   }\n   ...\n}\n', '\nusing System;\n\nnamespace CalculatorApplication {\n   class NumberManipulator {\n      public int FindMax(int num1, int num2) {\n         /* local variable declaration */\n         int result;\n         \n         if (num1 > num2)\n            result = num1;\n         else\n            result = num2;\n         return result;\n      }\n      \n      static void Main(string[] args) {\n         /* local variable definition */\n         int a = 100;\n         int b = 200;\n         int ret;\n         NumberManipulator n = new NumberManipulator();\n\n         //calling the FindMax method\n         ret = n.FindMax(a, b);\n         Console.WriteLine(""Max value is : {0}"", ret );\n         Console.ReadLine();\n      }\n   }\n}\n', '\nMax value is : 200\n', '\nusing System;\n\nnamespace CalculatorApplication {\n   class NumberManipulator {\n      public int FindMax(int num1, int num2) {\n         /* local variable declaration */\n         int result;\n         \n         if(num1 > num2)\n            result = num1;\n         else\n            result = num2;\n         \n         return result;\n      }\n   }\n   class Test {\n      static void Main(string[] args) {\n         /* local variable definition */\n         int a = 100;\n         int b = 200;\n         int ret;\n         NumberManipulator n = new NumberManipulator();\n         \n         //calling the FindMax method\n         ret = n.FindMax(a, b);\n         Console.WriteLine(""Max value is : {0}"", ret );\n         Console.ReadLine();\n      }\n   }\n}\n', '\nMax value is : 200\n', '\nusing System;\n\nnamespace CalculatorApplication {\n   class NumberManipulator {\n      public int factorial(int num) {\n         /* local variable declaration */\n         int result;\n         if (num == 1) {\n            return 1;\n         } else {\n            result = factorial(num - 1) * num;\n            return result;\n         }\n      }\n      static void Main(string[] args) {\n         NumberManipulator n = new NumberManipulator();\n         //calling the factorial method {0}"", n.factorial(6));\n         Console.WriteLine(""Factorial of 7 is : {0}"", n.factorial(7));\n         Console.WriteLine(""Factorial of 8 is : {0}"", n.factorial(8));\n         Console.ReadLine();\n      }\n   }\n}\n', '\nFactorial of 6 is: 720\nFactorial of 7 is: 5040\nFactorial of 8 is: 40320\n']","['\n<Access Specifier> <Return Type> <Method Name>(Parameter List) {\n   Method Body\n}\n', '\nMax value is : 200\n', '\nMax value is : 200\n', '\nFactorial of 6 is: 720\nFactorial of 7 is: 5040\nFactorial of 8 is: 40320\n']","['Sr.No.|||Mechanism & Description&&&1|||Value parameters|||This method copies the actual value of an argument into the formal parameter of the function. In this case, changes made to the parameter inside the function have no effect on the argument.&&&2|||Reference parameters|||This method copies the reference to the memory location of an argument into the formal parameter. This means that changes made to the parameter affect the argument.&&&3|||Output parameters|||This method helps in returning more than one value.']","['Define the method|||Call the method|||Access Specifier − This determines the visibility of a variable or a method from another class.|||Return type − A method may return a value. The return type is the data type of the value the method returns. If the method is not returning any values, then the return type is void.|||Method name − Method name is a unique identifier and it is case sensitive. It cannot be same as any other identifier declared in the class.|||Parameter list − Enclosed between parentheses, the parameters are used to pass and receive data from a method. The parameter list refers to the type, order, and number of the parameters of a method. Parameters are optional; that is, a method may contain no parameters.|||Method body − This contains the set of instructions needed to complete the required activity.|||']"
14,['C# - Nullables'],"['The Null Coalescing Operator (??)', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_methods.htm', 'https://www.tutorialspoint.com/csharp/csharp_arrays.htm', 'http://tpcg.io/1PlUri', 'http://tpcg.io/aDQvLU', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_methods.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_arrays.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['The following example demonstrates use of nullable data types −'],"['When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['C# provides a special data types, the nullable types, to which you can assign normal range of values as well as null values.', 'For example, you can store any value from -2,147,483,648 to 2,147,483,647 or null in a Nullable<Int32> variable. Similarly, you can assign true, false, or null in a Nullable<bool> variable. Syntax for declaring a nullable type is as follows −', 'The null coalescing operator is used with the nullable value types and reference types. It is used for converting an operand to the type of another nullable (or not) value type operand, where an implicit conversion is possible.', 'If the value of the first operand is null, then the operator returns the value of the second operand, otherwise it returns the value of the first operand. The following example explains this −']","['\n< data_type> ? <variable_name> = null;\n', '\nusing System;\n\nnamespace CalculatorApplication {\n   class NullablesAtShow {\n      static void Main(string[] args) {\n         int? num1 = null;\n         int? num2 = 45;\n         \n         double? num3 = new double?();\n         double? num4 = 3.14157;\n         \n         bool? boolval = new bool?();\n\n         // display the values\n         Console.WriteLine(""Nullables at Show: {0}, {1}, {2}, {3}"", num1, num2, num3, num4);\n         Console.WriteLine(""A Nullable boolean value: {0}"", boolval);\n         Console.ReadLine();\n      }\n   }\n}\n', '\nNullables at Show: , 45,  , 3.14157\nA Nullable boolean value:\n', '\nusing System;\n\nnamespace CalculatorApplication {\n   class NullablesAtShow {\n      static void Main(string[] args) {\n         double? num1 = null;\n         double? num2 = 3.14157;\n         double num3;\n         \n         num3 = num1 ?? 5.34;      \n         Console.WriteLine("" Value of num3: {0}"", num3);\n         \n         num3 = num2 ?? 5.34;\n         Console.WriteLine("" Value of num3: {0}"", num3);\n         Console.ReadLine();\n      }\n   }\n}\n', '\nValue of num3: 5.34\nValue of num3: 3.14157\n']","['\n< data_type> ? <variable_name> = null;\n', '\nNullables at Show: , 45,  , 3.14157\nA Nullable boolean value:\n', '\nValue of num3: 5.34\nValue of num3: 3.14157\n']",[],[]
15,['C# - Arrays'],"['Declaring Arrays', 'Initializing an Array', 'Assigning Values to an Array', 'Accessing Array Elements', 'Using the foreach Loop', 'C# Arrays', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_nullables.htm', 'https://www.tutorialspoint.com/csharp/csharp_strings.htm', 'http://tpcg.io/iFdIey', 'http://tpcg.io/uvQmGo', 'https://www.tutorialspoint.com/csharp/csharp_multi_dimensional_arrays.htm', 'https://www.tutorialspoint.com/csharp/csharp_jagged_arrays.htm', 'https://www.tutorialspoint.com/csharp/csharp_passing_arrays_to_functions.htm', 'https://www.tutorialspoint.com/csharp/csharp_param_arrays.htm', 'https://www.tutorialspoint.com/csharp/csharp_array_class.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_nullables.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_strings.htm']","['https://www.tutorialspoint.com/csharp/images/arrays.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['To declare an array in C#, you can use the following syntax −', 'datatype is used to specify the type of elements in the array.', '[ ] specifies the rank of the array. The rank specifies the size of the array.', 'arrayName specifies the name of the array.', 'You can assign values to the array at the time of declaration, as shown −', 'You can also create and initialize an array, as shown −', 'You may also omit the size of the array, as shown −', 'C# supports multidimensional arrays, which are arrays of arrays.', 'This is used for passing unknown number of parameters to a function.']","['Array is a reference type, so you need to use the new keyword to create an instance of the array. For example,', 'You can assign values to individual array elements, by using the index number, like −', 'The following example, demonstrates the above-mentioned concepts declaration, assignment, and accessing arrays −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'There are following few important concepts related to array which should be clear to a C# programmer −', 'C# supports multidimensional arrays. The simplest form of the multidimensional array is the two-dimensional array.', ""You can pass to the function a pointer to an array by specifying the array's name without an index.""]","['An array stores a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type stored at contiguous memory locations.', 'Instead of declaring individual variables, such as number0, number1, ..., and number99, you declare one array variable such as numbers and use numbers[0], numbers[1], and ..., numbers[99] to represent individual variables. A specific element in an array is accessed by an index.', 'All arrays consist of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.', 'Declaring an array does not initialize the array in the memory. When the array variable is initialized, you can assign values to the array.', 'You can copy an array variable into another target array variable. In such case, both the target and source point to the same memory location −', 'When you create an array, C# compiler implicitly initializes each array element to a default value depending on the array type. For example, for an int array all elements are initialized to 0.', 'An element is accessed by indexing the array name. This is done by placing the index of the element within square brackets after the name of the array. For example,', 'In the previous example, we used a for loop for accessing each array element. You can also use a foreach statement to iterate through an array.', 'Defined in System namespace, it is the base class to all arrays, and provides various properties and methods for working with arrays.']","['\ndatatype[] arrayName;\n', '\ndouble[] balance;\n', '\ndouble[] balance = new double[10];\n', '\ndouble[] balance = new double[10];\nbalance[0] = 4500.0;\n', '\ndouble[] balance = { 2340.0, 4523.69, 3421.0};\n', '\nint [] marks = new int[5]  { 99,  98, 92, 97, 95};\n', '\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\n', '\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\nint[] score = marks;\n', '\ndouble salary = balance[9];\n', '\nusing System;\n\nnamespace ArrayApplication {\n   class MyArray {\n      static void Main(string[] args) {\n         int []  n = new int[10]; /* n is an array of 10 integers */\n         int i,j;\n\n         /* initialize elements of array n */\n         for ( i = 0; i < 10; i++ ) {\n            n[ i ] = i + 100;\n         }\n         \n         /* output each array element\'s value */\n         for (j = 0; j < 10; j++ ) {\n            Console.WriteLine(""Element[{0}] = {1}"", j, n[j]);\n         }\n         Console.ReadKey();\n      }\n   }\n}\n', '\nElement[0] = 100\nElement[1] = 101\nElement[2] = 102\nElement[3] = 103\nElement[4] = 104\nElement[5] = 105\nElement[6] = 106\nElement[7] = 107\nElement[8] = 108\nElement[9] = 109\n', '\nusing System;\n\nnamespace ArrayApplication {\n   class MyArray {\n      static void Main(string[] args) {\n         int []  n = new int[10]; /* n is an array of 10 integers */\n         \n         /* initialize elements of array n */\n         for ( int i = 0; i < 10; i++ ) {\n            n[i] = i + 100;\n         }\n         \n         /* output each array element\'s value */\n         foreach (int j in n ) {\n            int i = j-100;\n            Console.WriteLine(""Element[{0}] = {1}"", i, j);\n         }\n         Console.ReadKey();\n      }\n   }\n}\n', '\nElement[0] = 100\nElement[1] = 101\nElement[2] = 102\nElement[3] = 103\nElement[4] = 104\nElement[5] = 105\nElement[6] = 106\nElement[7] = 107\nElement[8] = 108\nElement[9] = 109\n']","['\ndatatype[] arrayName;\n', '\ndouble[] balance;\n', '\ndouble[] balance = new double[10];\n', '\ndouble[] balance = new double[10];\nbalance[0] = 4500.0;\n', '\ndouble[] balance = { 2340.0, 4523.69, 3421.0};\n', '\nint [] marks = new int[5]  { 99,  98, 92, 97, 95};\n', '\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\n', '\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\nint[] score = marks;\n', '\ndouble salary = balance[9];\n', '\nElement[0] = 100\nElement[1] = 101\nElement[2] = 102\nElement[3] = 103\nElement[4] = 104\nElement[5] = 105\nElement[6] = 106\nElement[7] = 107\nElement[8] = 108\nElement[9] = 109\n', '\nElement[0] = 100\nElement[1] = 101\nElement[2] = 102\nElement[3] = 103\nElement[4] = 104\nElement[5] = 105\nElement[6] = 106\nElement[7] = 107\nElement[8] = 108\nElement[9] = 109\n']","[""Sr.No.|||Concept & Description&&&1|||Multi-dimensional arrays|||C# supports multidimensional arrays. The simplest form of the multidimensional array is the two-dimensional array.&&&2|||Jagged arrays|||C# supports multidimensional arrays, which are arrays of arrays.&&&3|||Passing arrays to functions|||You can pass to the function a pointer to an array by specifying the array's name without an index.&&&4|||Param arrays|||This is used for passing unknown number of parameters to a function.&&&5|||The Array Class|||Defined in System namespace, it is the base class to all arrays, and provides various properties and methods for working with arrays.""]",['datatype is used to specify the type of elements in the array.|||[ ] specifies the rank of the array. The rank specifies the size of the array.|||arrayName specifies the name of the array.|||']
16,['C# - Strings'],"['Creating a String Object', 'Properties of the String Class', 'Methods of the String Class', 'Examples', 'Useful Video Courses']","['Comparing Strings', 'String Contains String', 'Getting a Substring', 'Joining Strings']","['https://www.tutorialspoint.com/csharp/csharp_arrays.htm', 'https://www.tutorialspoint.com/csharp/csharp_struct.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_arrays.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_struct.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['You can create string object using one of the following methods −', 'By assigning a string literal to a String variable', 'By using the string concatenation operator (+)', 'By retrieving a property or calling a method that returns a string', 'The following example demonstrates this −', 'The String class has the following two properties −', 'Gets the Char object at a specified position in the current String object.', 'Gets the number of characters in the current String object.', 'public static int Compare(string strA, string strB)', 'public static int Compare(string strA, string strB, bool ignoreCase )', 'public static string Concat(string str0, string str1)', 'public static string Concat(string str0, string str1, string str2)', 'public static string Concat(string str0, string str1, string str2, string str3)', 'public static string Copy(string str)', 'Creates a new String object with the same value as the specified string.', 'Determines whether the end of the string object matches the specified string.', 'public static bool Equals(string a, string b)', 'Determines whether two specified String objects have the same value.', 'public static string Format(string format, Object arg0)', 'public int IndexOf(char value, int startIndex)', 'public int IndexOf(string value, int startIndex)', 'public int IndexOfAny(char[] anyOf, int startIndex)', 'public string Insert(int startIndex, string value)', 'public static bool IsNullOrEmpty(string value)', 'Indicates whether the specified string is null or an Empty string.', 'public static string Join(string separator, params string[] value)', 'public int LastIndexOf(string value)', 'public string Remove(int startIndex)', 'public string Remove(int startIndex, int count)', 'public string Replace(char oldChar, char newChar)', 'public string Replace(string oldValue, string newValue)', 'public string[] Split(params char[] separator)', 'public string[] Split(char[] separator, int count)', 'public bool StartsWith(string value)', 'public char[] ToCharArray(int startIndex, int length)', 'Returns a copy of this string converted to lowercase.', 'Returns a copy of this string converted to uppercase.', 'The following example demonstrates some of the methods mentioned above −']","['By calling a formatting method to convert a value or an object to its string representation', 'When the above code is compiled and executed, it produces the following result −', 'Compares two specified string objects and returns an integer that indicates their relative position in the sort order.', 'Returns a value indicating whether the specified String object occurs within this string.', 'public void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)', 'Determines whether the current String object and the specified String object have the same value.', 'Replaces one or more format items in a specified string with the string representation of a specified object.', 'Returns the zero-based index of the first occurrence of the specified Unicode character in the current string.', 'Returns the zero-based index of the first occurrence of the specified string in this instance.', 'Concatenates all the elements of a string array, using the specified separator between each element.', 'public static string Join(string separator, string[] value, int startIndex, int count)', 'Concatenates the specified elements of a string array, using the specified separator between each element.', 'Returns the zero-based index position of the last occurrence of a specified string within the current string object.', 'Determines whether the beginning of this string instance matches the specified string.', 'Returns a Unicode character array with all the characters in the current string object.', 'Removes all leading and trailing white-space characters from the current String object.', 'You can visit MSDN library for the complete list of methods and String class constructors.', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['In C#, you can use strings as array of characters, However, more common practice is to use the string keyword to declare a string variable. The string keyword is an alias for the System.String class.', 'The String class has numerous methods that help you in working with the string objects. The following table provides some of the most commonly used methods −', 'Compares two specified string objects and returns an integer that indicates their relative position in the sort order. However, it ignores case if the Boolean parameter is true.', 'Copies a specified number of characters from a specified position of the String object to a specified position in an array of Unicode characters.', 'Returns the zero-based index of the first occurrence of the specified Unicode character in this string, starting search at the specified character position.', 'Returns the zero-based index of the first occurrence of the specified string in this instance, starting search at the specified character position.', 'Returns the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.', 'Returns the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters, starting search at the specified character position.', 'Returns a new string in which a specified string is inserted at a specified index position in the current string object.', 'Returns the zero-based index position of the last occurrence of the specified Unicode character within the current string object.', 'Removes all the characters in the current instance, beginning at a specified position and continuing through the last position, and returns the string.', 'Removes the specified number of characters in the current string beginning at a specified position and returns the string.', 'Replaces all occurrences of a specified Unicode character in the current string object with the specified Unicode character and returns the new string.', 'Replaces all occurrences of a specified string in the current string object with the specified string and returns the new string.', 'Returns a string array that contains the substrings in the current string object, delimited by elements of a specified Unicode character array.', 'Returns a string array that contains the substrings in the current string object, delimited by elements of a specified Unicode character array. The int parameter specifies the maximum number of substrings to return.', 'Returns a Unicode character array with all the characters in the current string object, starting from the specified index and up to the specified length.']","['\nusing System;\n\nnamespace StringApplication {\n\n   class Program {\n   \n      static void Main(string[] args) {\n         //from string literal and string concatenation\n         string fname, lname;\n         fname = ""Rowan"";\n         lname = ""Atkinson"";\n\t\t\t\n         char []letters= { \'H\', \'e\', \'l\', \'l\',\'o\' };\n         string [] sarray={ ""Hello"", ""From"", ""Tutorials"", ""Point"" };\n         \n         string fullname = fname + lname;\n         Console.WriteLine(""Full Name: {0}"", fullname);\n         \n         //by using string constructor { \'H\', \'e\', \'l\', \'l\',\'o\' };\n         string greetings = new string(letters);\n         Console.WriteLine(""Greetings: {0}"", greetings);\n         \n         //methods returning string { ""Hello"", ""From"", ""Tutorials"", ""Point"" };\n         string message = String.Join("" "", sarray);\n         Console.WriteLine(""Message: {0}"", message);\n         \n         //formatting method to convert a value\n         DateTime waiting = new DateTime(2012, 10, 10, 17, 58, 1);\n         string chat = String.Format(""Message sent at {0:t} on {0:D}"", waiting);\n         Console.WriteLine(""Message: {0}"", chat);\n      }\n   }\n}\n', '\nFull Name: RowanAtkinson\nGreetings: Hello\nMessage: Hello From Tutorials Point\nMessage: Message sent at 5:58 PM on Wednesday, October 10, 2012\n', '\nusing System;\n\nnamespace StringApplication {\n\n   class StringProg {\n   \n      static void Main(string[] args) {\n         string str1 = ""This is test"";\n         string str2 = ""This is text"";\n\n         if (String.Compare(str1, str2) == 0) {\n            Console.WriteLine(str1 + "" and "" + str2 +  "" are equal."");\n         } else {\n            Console.WriteLine(str1 + "" and "" + str2 + "" are not equal."");\n         }\n         Console.ReadKey() ;\n      }\n   }\n}\n', '\nThis is test and This is text are not equal.\n', '\nusing System;\n\nnamespace StringApplication {\n\n   class StringProg {\n   \n      static void Main(string[] args) {\n         string str = ""This is test"";\n         \n         if (str.Contains(""test"")) {\n            Console.WriteLine(""The sequence \'test\' was found."");\n         }\n         Console.ReadKey() ;\n      }\n   }\n}\n', ""\nThe sequence 'test' was found.\n"", '\nusing System;\n\nnamespace StringApplication {\n\n   class StringProg {\n   \n      static void Main(string[] args) {\n         string str = ""Last night I dreamt of San Pedro"";\n         Console.WriteLine(str);\n         string substr = str.Substring(23);\n         Console.WriteLine(substr);\n      }\n   }\n}\n', '\nSan Pedro\n', '\nusing System;\n\nnamespace StringApplication {\n\n   class StringProg {\n   \n      static void Main(string[] args) {\n         string[] starray = new string[]{""Down the way nights are dark"",\n            ""And the sun shines daily on the mountain top"",\n            ""I took a trip on a sailing ship"",\n            ""And when I reached Jamaica"",\n            ""I made a stop""};\n\n         string str = String.Join(""\\n"", starray);\n         Console.WriteLine(str);\n      }\n   }\n}\n', '\nDown the way nights are dark\nAnd the sun shines daily on the mountain top\nI took a trip on a sailing ship\nAnd when I reached Jamaica\nI made a stop\n']","['\nFull Name: RowanAtkinson\nGreetings: Hello\nMessage: Hello From Tutorials Point\nMessage: Message sent at 5:58 PM on Wednesday, October 10, 2012\n', '\nThis is test and This is text are not equal.\n', ""\nThe sequence 'test' was found.\n"", '\nSan Pedro\n', '\nDown the way nights are dark\nAnd the sun shines daily on the mountain top\nI took a trip on a sailing ship\nAnd when I reached Jamaica\nI made a stop\n']","['Sr.No.|||Property & Description&&&1|||Chars|||Gets the Char object at a specified position in the current String object.&&&2|||Length|||Gets the number of characters in the current String object.', 'Sr.No.|||Methods & Description&&&1|||public static int Compare(string strA, string strB)|||Compares two specified string objects and returns an integer that indicates their relative position in the sort order.&&&2|||public static int Compare(string strA, string strB, bool ignoreCase )|||Compares two specified string objects and returns an integer that indicates their relative position in the sort order. However, it ignores case if the Boolean parameter is true.|||&&&3|||public static string Concat(string str0, string str1)|||Concatenates two string objects.|||&&&4|||public static string Concat(string str0, string str1, string str2)|||Concatenates three string objects.|||&&&5|||public static string Concat(string str0, string str1, string str2, string str3)|||Concatenates four string objects.|||&&&6|||public bool Contains(string value)|||Returns a value indicating whether the specified String object occurs within this string.&&&7|||public static string Copy(string str)|||Creates a new String object with the same value as the specified string.|||&&&8|||public void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count)|||Copies a specified number of characters from a specified position of the String object to a specified position in an array of Unicode characters.&&&9|||public bool EndsWith(string value)|||Determines whether the end of the string object matches the specified string.|||&&&10|||public bool Equals(string value)|||Determines whether the current String object and the specified String object have the same value.|||&&&11|||public static bool Equals(string a, string b)|||Determines whether two specified String objects have the same value.|||&&&12|||public static string Format(string format, Object arg0)|||Replaces one or more format items in a specified string with the string representation of a specified object.|||&&&13|||public int IndexOf(char value)|||Returns the zero-based index of the first occurrence of the specified Unicode character in the current string.|||&&&14|||public int IndexOf(string value)|||Returns the zero-based index of the first occurrence of the specified string in this instance.|||&&&15|||public int IndexOf(char value, int startIndex)|||Returns the zero-based index of the first occurrence of the specified Unicode character in this string, starting search at the specified character position.|||&&&16|||public int IndexOf(string value, int startIndex)|||Returns the zero-based index of the first occurrence of the specified string in this instance, starting search at the specified character position.|||&&&17|||public int IndexOfAny(char[] anyOf)|||Returns the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.|||&&&18|||public int IndexOfAny(char[] anyOf, int startIndex)|||Returns the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters, starting search at the specified character position.|||&&&19|||public string Insert(int startIndex, string value)|||Returns a new string in which a specified string is inserted at a specified index position in the current string object.|||&&&20|||public static bool IsNullOrEmpty(string value)|||Indicates whether the specified string is null or an Empty string.|||&&&21|||public static string Join(string separator, params string[] value)|||Concatenates all the elements of a string array, using the specified separator between each element.&&&22|||public static string Join(string separator, string[] value, int startIndex, int count)|||Concatenates the specified elements of a string array, using the specified separator between each element.|||&&&23|||public int LastIndexOf(char value)|||Returns the zero-based index position of the last occurrence of the specified Unicode character within the current string object.|||&&&24|||public int LastIndexOf(string value)|||Returns the zero-based index position of the last occurrence of a specified string within the current string object.|||&&&25|||public string Remove(int startIndex)|||Removes all the characters in the current instance, beginning at a specified position and continuing through the last position, and returns the string.|||&&&26|||public string Remove(int startIndex, int count)|||Removes the specified number of characters in the current string beginning at a specified position and returns the string.|||&&&27|||public string Replace(char oldChar, char newChar)|||Replaces all occurrences of a specified Unicode character in the current string object with the specified Unicode character and returns the new string.|||&&&28|||public string Replace(string oldValue, string newValue)|||Replaces all occurrences of a specified string in the current string object with the specified string and returns the new string.|||&&&29|||public string[] Split(params char[] separator)|||Returns a string array that contains the substrings in the current string object, delimited by elements of a specified Unicode character array.|||&&&30|||public string[] Split(char[] separator, int count)|||Returns a string array that contains the substrings in the current string object, delimited by elements of a specified Unicode character array. The int parameter specifies the maximum number of substrings to return.|||&&&31|||public bool StartsWith(string value)|||Determines whether the beginning of this string instance matches the specified string.&&&32|||public char[] ToCharArray()|||Returns a Unicode character array with all the characters in the current string object.|||&&&33|||public char[] ToCharArray(int startIndex, int length)|||Returns a Unicode character array with all the characters in the current string object, starting from the specified index and up to the specified length.|||&&&34|||public string ToLower()|||Returns a copy of this string converted to lowercase.|||&&&35|||public string ToUpper()|||Returns a copy of this string converted to uppercase.|||&&&36|||public string Trim()|||Removes all leading and trailing white-space characters from the current String object.|||']",['By assigning a string literal to a String variable|||By using a String class constructor|||By using the string concatenation operator (+)|||By retrieving a property or calling a method that returns a string|||By calling a formatting method to convert a value or an object to its string representation|||']
17,['C# - Structures'],"['Defining a Structure', 'Features of C# Structures', 'Class versus Structure', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_strings.htm', 'https://www.tutorialspoint.com/csharp/csharp_enums.htm', 'http://tpcg.io/PCFGlU', 'http://tpcg.io/VJUEs4', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_strings.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_enums.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['For example, here is the way you can declare the Book structure −', 'The following program shows the use of the structure −', 'Unlike classes, structures cannot inherit other structures or classes.', 'Structures cannot be used as a base for other structures or classes.', 'A structure can implement one or more interfaces.', 'Structure members cannot be specified as abstract, virtual, or protected.', 'Classes and Structures have the following basic differences −', 'In the light of the above discussions, let us rewrite the previous example −']","['When the above code is compiled and executed, it produces the following result −', 'Structures can have methods, fields, indexers, properties, operator methods, and events.', 'When the above code is compiled and executed, it produces the following result −']","['In C#, a structure is a value type data type. It helps you to make a single variable hold related data of various data types. The struct keyword is used for creating a structure.', 'Structures are used to represent a record. Suppose you want to keep track of your books in a library. You might want to track the following attributes about each book −', 'To define a structure, you must use the struct statement. The struct statement defines a new data type, with more than one member for your program.', 'You have already used a simple structure named Books. Structures in C# are quite different from that in traditional C or C++. The C# structures have the following features −', 'Structures can have defined constructors, but not destructors. However, you cannot define a default constructor for a structure. The default constructor is automatically defined and cannot be changed.', 'When you create a struct object using the New operator, it gets created and the appropriate constructor is called. Unlike classes, structs can be instantiated without using the New operator.', 'If the New operator is not used, the fields remain unassigned and the object cannot be used until all the fields are initialized.']","['\nstruct Books {\n   public string title;\n   public string author;\n   public string subject;\n   public int book_id;\n};  \n', '\nusing System;\n\nstruct Books {\n   public string title;\n   public string author;\n   public string subject;\n   public int book_id;\n};  \n\npublic class testStructure {\n   public static void Main(string[] args) {\n      Books Book1;   /* Declare Book1 of type Book */\n      Books Book2;   /* Declare Book2 of type Book */\n\n      /* book 1 specification */\n      Book1.title = ""C Programming"";\n      Book1.author = ""Nuha Ali""; \n      Book1.subject = ""C Programming Tutorial"";\n      Book1.book_id = 6495407;\n\n      /* book 2 specification */\n      Book2.title = ""Telecom Billing"";\n      Book2.author = ""Zara Ali"";\n      Book2.subject =  ""Telecom Billing Tutorial"";\n      Book2.book_id = 6495700;\n\n      /* print Book1 info */\n      Console.WriteLine( ""Book 1 title : {0}"", Book1.title);\n      Console.WriteLine(""Book 1 author : {0}"", Book1.author);\n      Console.WriteLine(""Book 1 subject : {0}"", Book1.subject);\n      Console.WriteLine(""Book 1 book_id :{0}"", Book1.book_id);\n\n      /* print Book2 info */\n      Console.WriteLine(""Book 2 title : {0}"", Book2.title);\n      Console.WriteLine(""Book 2 author : {0}"", Book2.author);\n      Console.WriteLine(""Book 2 subject : {0}"", Book2.subject);\n      Console.WriteLine(""Book 2 book_id : {0}"", Book2.book_id);       \n\n      Console.ReadKey();\n   }\n}\n', '\nBook 1 title : C Programming\nBook 1 author : Nuha Ali\nBook 1 subject : C Programming Tutorial\nBook 1 book_id : 6495407\nBook 2 title : Telecom Billing\nBook 2 author : Zara Ali\nBook 2 subject : Telecom Billing Tutorial\nBook 2 book_id : 6495700\n', '\nusing System;\n\nstruct Books {\n   private string title;\n   private string author;\n   private string subject;\n   private int book_id;\n   \n   public void getValues(string t, string a, string s, int id) {\n      title = t;\n      author = a;\n      subject = s;\n      book_id = id;\n   }\n   \n   public void display() {\n      Console.WriteLine(""Title : {0}"", title);\n      Console.WriteLine(""Author : {0}"", author);\n      Console.WriteLine(""Subject : {0}"", subject);\n      Console.WriteLine(""Book_id :{0}"", book_id);\n   }\n};  \n\npublic class testStructure {\n\n   public static void Main(string[] args) {\n      Books Book1 = new Books();   /* Declare Book1 of type Book */\n      Books Book2 = new Books();   /* Declare Book2 of type Book */\n\n      /* book 1 specification */\n      Book1.getValues(""C Programming"",\n      ""Nuha Ali"", ""C Programming Tutorial"",6495407);\n\n      /* book 2 specification */\n      Book2.getValues(""Telecom Billing"",\n      ""Zara Ali"", ""Telecom Billing Tutorial"", 6495700);\n\n      /* print Book1 info */\n      Book1.display();\n\n      /* print Book2 info */\n      Book2.display(); \n\n      Console.ReadKey();\n   }\n}\n', '\nTitle : C Programming\nAuthor : Nuha Ali\nSubject : C Programming Tutorial\nBook_id : 6495407\nTitle : Telecom Billing\nAuthor : Zara Ali\nSubject : Telecom Billing Tutorial\nBook_id : 6495700\n']","['\nBook 1 title : C Programming\nBook 1 author : Nuha Ali\nBook 1 subject : C Programming Tutorial\nBook 1 book_id : 6495407\nBook 2 title : Telecom Billing\nBook 2 author : Zara Ali\nBook 2 subject : Telecom Billing Tutorial\nBook 2 book_id : 6495700\n', '\nTitle : C Programming\nAuthor : Nuha Ali\nSubject : C Programming Tutorial\nBook_id : 6495407\nTitle : Telecom Billing\nAuthor : Zara Ali\nSubject : Telecom Billing Tutorial\nBook_id : 6495700\n']",[],"['Title|||Author|||Subject|||Book ID|||Structures can have methods, fields, indexers, properties, operator methods, and events.|||Structures can have defined constructors, but not destructors. However, you cannot define a default constructor for a structure. The default constructor is automatically defined and cannot be changed.|||Unlike classes, structures cannot inherit other structures or classes.|||Structures cannot be used as a base for other structures or classes.|||A structure can implement one or more interfaces.|||Structure members cannot be specified as abstract, virtual, or protected.|||When you create a struct object using the New operator, it gets created and the appropriate constructor is called. Unlike classes, structs can be instantiated without using the New operator.|||If the New operator is not used, the fields remain unassigned and the object cannot be used until all the fields are initialized.|||classes are reference types and structs are value types|||structures do not support inheritance|||structures cannot have default constructor|||']"
18,['C# - Enums'],"['Declaring enum Variable', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_struct.htm', 'https://www.tutorialspoint.com/csharp/csharp_classes.htm', 'http://tpcg.io/JkqN9p', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_struct.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_classes.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The general syntax for declaring an enumeration is −', 'The enum_name specifies the enumeration type name.', 'The enumeration list is a comma-separated list of identifiers.', 'The following example demonstrates use of enum variable −']","['An enumeration is a set of named integer constants. An enumerated type is declared using the enum keyword.', 'When the above code is compiled and executed, it produces the following result −']","['C# enumerations are value data type. In other words, enumeration contains its own values and cannot inherit or cannot pass inheritance.', 'Each of the symbols in the enumeration list stands for an integer value, one greater than the symbol that precedes it. By default, the value of the first enumeration symbol is 0. For example −']","['\nenum <enum_name> {\n   enumeration list \n};\n', '\nenum Days { Sun, Mon, tue, Wed, thu, Fri, Sat };\n', '\nusing System;\n\nnamespace EnumApplication {\n   class EnumProgram {\n      enum Days { Sun, Mon, tue, Wed, thu, Fri, Sat };\n\n      static void Main(string[] args) {\n         int WeekdayStart = (int)Days.Mon;\n         int WeekdayEnd = (int)Days.Fri;\n         \n         Console.WriteLine(""Monday: {0}"", WeekdayStart);\n         Console.WriteLine(""Friday: {0}"", WeekdayEnd);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nMonday: 1\nFriday: 5\n']","['\nenum <enum_name> {\n   enumeration list \n};\n', '\nenum Days { Sun, Mon, tue, Wed, thu, Fri, Sat };\n', '\nMonday: 1\nFriday: 5\n']",[],['The enum_name specifies the enumeration type name.|||The enumeration list is a comma-separated list of identifiers.|||']
19,['C# - Classes'],"['Defining a Class', 'Member Functions and Encapsulation', 'C# Constructors', 'C# Destructors', 'Static Members of a C# Class', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_enums.htm', 'https://www.tutorialspoint.com/csharp/csharp_inheritance.htm', 'http://tpcg.io/bFVHMP', 'http://tpcg.io/ob75lE', 'http://tpcg.io/YdmVGw', 'http://tpcg.io/BU1wgt', 'http://tpcg.io/ACZcV1', 'http://tpcg.io/B8J0mT', 'http://tpcg.io/5jtmC2', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_enums.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_inheritance.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['To access the class members, you use the dot (.) operator.', 'The dot operator links the name of an object with the name of a member.', 'The following example illustrates the concepts discussed so far −', 'Following example explains the concept of destructor −', 'The following example demonstrates the use of static variables −']","['When the above code is compiled and executed, it produces the following result −', 'Let us put above concepts to set and get the value of different class members in a class −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['When you define a class, you define a blueprint for a data type. This does not actually define any data, but it does define what the class name means. That is, what an object of the class consists of and what operations can be performed on that object. Objects are instances of a class. The methods and variables that constitute a class are called members of the class.', 'A class definition starts with the keyword class followed by the class name; and the class body enclosed by a pair of curly braces. Following is the general form of a class definition −', 'Access specifiers specify the access rules for the members as well as the class itself. If not mentioned, then the default access specifier for a class type is internal. Default access for the members is private.', 'Data type specifies the type of variable, and return type specifies the data type of the data the method returns, if any.', 'A member function of a class is a function that has its definition or its prototype within the class definition similar to any other variable. It operates on any object of the class of which it is a member, and has access to all the members of a class for that object.', 'Member variables are the attributes of an object (from design perspective) and they are kept private to implement encapsulation. These variables can only be accessed using the public member functions.', 'A class constructor is a special member function of a class that is executed whenever we create new objects of that class.', 'A constructor has exactly the same name as that of class and it does not have any return type. Following example explains the concept of constructor −', 'A default constructor does not have any parameter but if you need, a constructor can have parameters. Such constructors are called parameterized constructors. This technique helps you to assign initial value to an object at the time of its creation as shown in the following example −', 'A destructor is a special member function of a class that is executed whenever an object of its class goes out of scope. A destructor has exactly the same name as that of the class with a prefixed tilde (~) and it can neither return a value nor can it take any parameters.', 'Destructor can be very useful for releasing memory resources before exiting the program. Destructors cannot be inherited or overloaded.', 'We can define class members as static using the static keyword. When we declare a member of a class as static, it means no matter how many objects of the class are created, there is only one copy of the static member.', 'The keyword static implies that only one instance of the member exists for a class. Static variables are used for defining constants because their values can be retrieved by invoking the class without creating an instance of it. Static variables can be initialized outside the member function or class definition. You can also initialize static variables inside the class definition.', 'You can also declare a member function as static. Such functions can access only static variables. The static functions exist even before the object is created. The following example demonstrates the use of static functions −']","['\n<access specifier> class  class_name {\n   // member variables\n   <access specifier> <data type> variable1;\n   <access specifier> <data type> variable2;\n   ...\n   <access specifier> <data type> variableN;\n   // member methods\n   <access specifier> <return type> method1(parameter_list) {\n      // method body\n   }\n   <access specifier> <return type> method2(parameter_list) {\n      // method body\n   }\n   ...\n   <access specifier> <return type> methodN(parameter_list) {\n      // method body\n   }\n}\n', '\nusing System;\n\nnamespace BoxApplication {\n   class Box {\n      public double length;   // Length of a box\n      public double breadth;  // Breadth of a box\n      public double height;   // Height of a box\n   }\n   class Boxtester {\n      static void Main(string[] args) {\n         Box Box1 = new Box();   // Declare Box1 of type Box\n         Box Box2 = new Box();   // Declare Box2 of type Box\n         double volume = 0.0;    // Store the volume of a box here\n\n         // box 1 specification\n         Box1.height = 5.0;\n         Box1.length = 6.0;\n         Box1.breadth = 7.0;\n\n         // box 2 specification\n         Box2.height = 10.0;\n         Box2.length = 12.0;\n         Box2.breadth = 13.0;\n           \n         // volume of box 1\n         volume = Box1.height * Box1.length * Box1.breadth;\n         Console.WriteLine(""Volume of Box1 : {0}"",  volume);\n\n         // volume of box 2\n         volume = Box2.height * Box2.length * Box2.breadth;\n         Console.WriteLine(""Volume of Box2 : {0}"", volume);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nVolume of Box1 : 210\nVolume of Box2 : 1560\n', '\nusing System;\n\nnamespace BoxApplication {\n   class Box {\n      private double length;   // Length of a box\n      private double breadth;  // Breadth of a box\n      private double height;   // Height of a box\n      \n      public void setLength( double len ) {\n         length = len;\n      }\n      public void setBreadth( double bre ) {\n         breadth = bre;\n      }\n      public void setHeight( double hei ) {\n         height = hei;\n      }\n      public double getVolume() {\n         return length * breadth * height;\n      }\n   }\n   class Boxtester {\n      static void Main(string[] args) {\n         Box Box1 = new Box();   // Declare Box1 of type Box\n         Box Box2 = new Box();\n         double volume;\n         \n         // Declare Box2 of type Box\n         // box 1 specification\n         Box1.setLength(6.0);\n         Box1.setBreadth(7.0);\n         Box1.setHeight(5.0);\n         \n         // box 2 specification\n         Box2.setLength(12.0);\n         Box2.setBreadth(13.0);\n         Box2.setHeight(10.0);\n         \n         // volume of box 1\n         volume = Box1.getVolume();\n         Console.WriteLine(""Volume of Box1 : {0}"" ,volume);\n         \n         // volume of box 2\n         volume = Box2.getVolume();\n         Console.WriteLine(""Volume of Box2 : {0}"", volume);\n         \n         Console.ReadKey();\n      }\n   }\n}\n', '\nVolume of Box1 : 210\nVolume of Box2 : 1560\n', '\nusing System;\n\nnamespace LineApplication {\n   class Line {\n      private double length;   // Length of a line\n      \n      public Line() {\n         Console.WriteLine(""Object is being created"");\n      }\n      public void setLength( double len ) {\n         length = len;\n      }\n      public double getLength() {\n         return length;\n      }\n\n      static void Main(string[] args) {\n         Line line = new Line();    \n         \n         // set line length\n         line.setLength(6.0);\n         Console.WriteLine(""Length of line : {0}"", line.getLength());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nObject is being created\nLength of line : 6\n', '\nusing System;\n\nnamespace LineApplication {\n   class Line {\n      private double length;   // Length of a line\n      \n      public Line(double len) {  //Parameterized constructor\n         Console.WriteLine(""Object is being created, length = {0}"", len);\n         length = len;\n      }\n      public void setLength( double len ) {\n         length = len;\n      }\n      public double getLength() {\n         return length;\n      }\n      static void Main(string[] args) {\n         Line line = new Line(10.0);\n         Console.WriteLine(""Length of line : {0}"", line.getLength()); \n         \n         // set line length\n         line.setLength(6.0);\n         Console.WriteLine(""Length of line : {0}"", line.getLength()); \n         Console.ReadKey();\n      }\n   }\n}\n', '\nObject is being created, length = 10\nLength of line : 10\nLength of line : 6\n', '\nusing System;\n\nnamespace LineApplication {\n   class Line {\n      private double length;   // Length of a line\n      \n      public Line() {   // constructor\n         Console.WriteLine(""Object is being created"");\n      }\n      ~Line() {   //destructor\n         Console.WriteLine(""Object is being deleted"");\n      }\n      public void setLength( double len ) {\n         length = len;\n      }\n      public double getLength() {\n         return length;\n      }\n      static void Main(string[] args) {\n         Line line = new Line();\n\n         // set line length\n         line.setLength(6.0);\n         Console.WriteLine(""Length of line : {0}"", line.getLength());           \n      }\n   }\n}\n', '\nObject is being created\nLength of line : 6\nObject is being deleted\n', '\nusing System;\n\nnamespace StaticVarApplication {\n   class StaticVar {\n      public static int num;\n      \n      public void count() {\n         num++;\n      }\n      public int getNum() {\n         return num;\n      }\n   }\n   class StaticTester {\n      static void Main(string[] args) {\n         StaticVar s1 = new StaticVar();\n         StaticVar s2 = new StaticVar();\n         \n         s1.count();\n         s1.count();\n         s1.count();\n         \n         s2.count();\n         s2.count();\n         s2.count();\n         \n         Console.WriteLine(""Variable num for s1: {0}"", s1.getNum());\n         Console.WriteLine(""Variable num for s2: {0}"", s2.getNum());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nVariable num for s1: 6\nVariable num for s2: 6\n', '\nusing System;\n\nnamespace StaticVarApplication {\n   class StaticVar {\n      public static int num;\n      \n      public void count() {\n         num++;\n      }\n      public static int getNum() {\n         return num;\n      }\n   }\n   class StaticTester {\n      static void Main(string[] args) {\n         StaticVar s = new StaticVar();\n         \n         s.count();\n         s.count();\n         s.count();\n         \n         Console.WriteLine(""Variable num: {0}"", StaticVar.getNum());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nVariable num: 3\n']","['\n<access specifier> class  class_name {\n   // member variables\n   <access specifier> <data type> variable1;\n   <access specifier> <data type> variable2;\n   ...\n   <access specifier> <data type> variableN;\n   // member methods\n   <access specifier> <return type> method1(parameter_list) {\n      // method body\n   }\n   <access specifier> <return type> method2(parameter_list) {\n      // method body\n   }\n   ...\n   <access specifier> <return type> methodN(parameter_list) {\n      // method body\n   }\n}\n', '\nVolume of Box1 : 210\nVolume of Box2 : 1560\n', '\nVolume of Box1 : 210\nVolume of Box2 : 1560\n', '\nObject is being created\nLength of line : 6\n', '\nObject is being created, length = 10\nLength of line : 10\nLength of line : 6\n', '\nObject is being created\nLength of line : 6\nObject is being deleted\n', '\nVariable num for s1: 6\nVariable num for s2: 6\n', '\nVariable num: 3\n']",[],"['Access specifiers specify the access rules for the members as well as the class itself. If not mentioned, then the default access specifier for a class type is internal. Default access for the members is private.|||Data type specifies the type of variable, and return type specifies the data type of the data the method returns, if any.|||To access the class members, you use the dot (.) operator.|||The dot operator links the name of an object with the name of a member.|||']"
20,['C# - Inheritance'],"['Base and Derived Classes', 'Initializing Base Class', 'Multiple Inheritance in C#', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_classes.htm', 'https://www.tutorialspoint.com/csharp/csharp_polymorphism.htm', 'http://tpcg.io/fqplTx', 'http://tpcg.io/biEyZd', 'http://tpcg.io/0jSkFW', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_classes.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_polymorphism.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The syntax used in C# for creating derived classes is as follows −', 'Consider a base class Shape and its derived class Rectangle −', 'The following program demonstrates this −']","['When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['One of the most important concepts in object-oriented programming is inheritance. Inheritance allows us to define a class in terms of another class, which makes it easier to create and maintain an application. This also provides an opportunity to reuse the code functionality and speeds up implementation time.', 'When creating a class, instead of writing completely new data members and member functions, the programmer can designate that the new class should inherit the members of an existing class. This existing class is called the base class, and the new class is referred to as the derived class.', 'The idea of inheritance implements the IS-A relationship. For example, mammal IS A animal, dog IS-A mammal hence dog IS-A animal as well, and so on.', 'A class can be derived from more than one class or interface, which means that it can inherit data and functions from multiple base classes or interfaces.', 'The derived class inherits the base class member variables and member methods. Therefore the super class object should be created before the subclass is created. You can give instructions for superclass initialization in the member initialization list.', 'C# does not support multiple inheritance. However, you can use interfaces to implement multiple inheritance. The following program demonstrates this −']","['\n<acess-specifier> class <base_class> {\n   ...\n}\n\nclass <derived_class> : <base_class> {\n   ...\n}\n', '\nusing System;\n\nnamespace InheritanceApplication {\n   class Shape {\n      public void setWidth(int w) {\n         width = w;\n      }\n      public void setHeight(int h) {\n         height = h;\n      }\n      protected int width;\n      protected int height;\n   }\n\n   // Derived class\n   class Rectangle: Shape {\n      public int getArea() { \n         return (width * height); \n      }\n   }\n   class RectangleTester {\n      static void Main(string[] args) {\n         Rectangle Rect = new Rectangle();\n\n         Rect.setWidth(5);\n         Rect.setHeight(7);\n\n         // Print the area of the object.\n         Console.WriteLine(""Total area: {0}"",  Rect.getArea());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nTotal area: 35\n', '\nusing System;\n\nnamespace RectangleApplication {\n   class Rectangle {\n      \n      //member variables\n      protected double length;\n      protected double width;\n      \n      public Rectangle(double l, double w) {\n         length = l;\n         width = w;\n      }\n      public double GetArea() {\n         return length * width;\n      }\n      public void Display() {\n         Console.WriteLine(""Length: {0}"", length);\n         Console.WriteLine(""Width: {0}"", width);\n         Console.WriteLine(""Area: {0}"", GetArea());\n      }\n   }//end class Rectangle  \n   class Tabletop : Rectangle {\n      private double cost;\n      public Tabletop(double l, double w) : base(l, w) { }\n      \n      public double GetCost() {\n         double cost;\n         cost = GetArea() * 70;\n         return cost;\n      }\n      public void Display() {\n         base.Display();\n         Console.WriteLine(""Cost: {0}"", GetCost());\n      }\n   }\n   class ExecuteRectangle {\n      static void Main(string[] args) {\n         Tabletop t = new Tabletop(4.5, 7.5);\n         t.Display();\n         Console.ReadLine();\n      }\n   }\n}\n', '\nLength: 4.5\nWidth: 7.5\nArea: 33.75\nCost: 2362.5\n', '\nusing System;\n\nnamespace InheritanceApplication {\n   class Shape {\n      public void setWidth(int w) {\n         width = w;\n      }\n      public void setHeight(int h) {\n         height = h;\n      }\n      protected int width;\n      protected int height;\n   }\n\n   // Base class PaintCost\n   public interface PaintCost {\n      int getCost(int area);\n   }\n   \n   // Derived class\n   class Rectangle : Shape, PaintCost {\n      public int getArea() {\n         return (width * height);\n      }\n      public int getCost(int area) {\n         return area * 70;\n      }\n   }\n   class RectangleTester {\n      static void Main(string[] args) {\n         Rectangle Rect = new Rectangle();\n         int area;\n         \n         Rect.setWidth(5);\n         Rect.setHeight(7);\n         area = Rect.getArea();\n         \n         // Print the area of the object.\n         Console.WriteLine(""Total area: {0}"",  Rect.getArea());\n         Console.WriteLine(""Total paint cost: ${0}"" , Rect.getCost(area));\n         Console.ReadKey();\n      }\n   }\n}\n', '\nTotal area: 35\nTotal paint cost: $2450\n']","['\n<acess-specifier> class <base_class> {\n   ...\n}\n\nclass <derived_class> : <base_class> {\n   ...\n}\n', '\nTotal area: 35\n', '\nLength: 4.5\nWidth: 7.5\nArea: 33.75\nCost: 2362.5\n', '\nTotal area: 35\nTotal paint cost: $2450\n']",[],[]
21,['C# - Polymorphism'],"['Static Polymorphism', 'Function Overloading', 'Dynamic Polymorphism', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_inheritance.htm', 'https://www.tutorialspoint.com/csharp/csharp_operator_overloading.htm', 'http://tpcg.io/rUApo0', 'http://tpcg.io/oFyFed', 'http://tpcg.io/3KXVP8', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_inheritance.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_operator_overloading.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['We discuss operator overloading in next chapter.', 'Here are the rules about abstract classes −', 'You cannot create an instance of an abstract class', 'You cannot declare an abstract method outside an abstract class', 'The following program demonstrates an abstract class −', 'Dynamic polymorphism is implemented by abstract classes and virtual functions.', 'The following program demonstrates this −']","['The following example shows using function print() to print different data types −', 'When the above code is compiled and executed, it produces the following result −', 'When a class is declared sealed, it cannot be inherited, abstract classes cannot be declared sealed.', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","[""The word polymorphism means having many forms. In object-oriented programming paradigm, polymorphism is often expressed as 'one interface, multiple functions'."", 'Polymorphism can be static or dynamic. In static polymorphism, the response to a function is determined at the compile time. In dynamic polymorphism, it is decided at run-time.', 'The mechanism of linking a function with an object during compile time is called early binding. It is also called static binding. C# provides two techniques to implement static polymorphism. They are −', 'You can have multiple definitions for the same function name in the same scope. The definition of the function must differ from each other by the types and/or the number of arguments in the argument list. You cannot overload function declarations that differ only by return type.', 'C# allows you to create abstract classes that are used to provide partial class implementation of an interface. Implementation is completed when a derived class inherits from it. Abstract classes contain abstract methods, which are implemented by the derived class. The derived classes have more specialized functionality.', 'When you have a function defined in a class that you want to be implemented in an inherited class(es), you use virtual functions. The virtual functions could be implemented differently in different inherited class and the call to these functions will be decided at runtime.']","['\nusing System;\n\nnamespace PolymorphismApplication {\n   class Printdata {\n      void print(int i) {\n         Console.WriteLine(""Printing int: {0}"", i );\n      }\n      void print(double f) {\n         Console.WriteLine(""Printing float: {0}"" , f);\n      }\n      void print(string s) {\n         Console.WriteLine(""Printing string: {0}"", s);\n      }\n      static void Main(string[] args) {\n         Printdata p = new Printdata();\n         \n         // Call print to print integer\n         p.print(5);\n         \n         // Call print to print float\n         p.print(500.263);\n         \n         // Call print to print string\n         p.print(""Hello C++"");\n         Console.ReadKey();\n      }\n   }\n}\n', '\nPrinting int: 5\nPrinting float: 500.263\nPrinting string: Hello C++\n', '\nusing System;\n\nnamespace PolymorphismApplication {\n   abstract class Shape {\n      public abstract int area();\n   }\n   \n   class Rectangle:  Shape {\n      private int length;\n      private int width;\n      \n      public Rectangle( int a = 0, int b = 0) {\n         length = a;\n         width = b;\n      }\n      public override int area () { \n         Console.WriteLine(""Rectangle class area :"");\n         return (width * length); \n      }\n   }\n   class RectangleTester {\n      static void Main(string[] args) {\n         Rectangle r = new Rectangle(10, 7);\n         double a = r.area();\n         Console.WriteLine(""Area: {0}"",a);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nRectangle class area :\nArea: 70\n', '\nusing System;\n\nnamespace PolymorphismApplication {\n   class Shape {\n      protected int width, height;\n      \n      public Shape( int a = 0, int b = 0) {\n         width = a;\n         height = b;\n      }\n      public virtual int area() {\n         Console.WriteLine(""Parent class area :"");\n         return 0;\n      }\n   }\n   class Rectangle: Shape {\n      public Rectangle( int a = 0, int b = 0): base(a, b) {\n\n      }\n      public override int area () {\n         Console.WriteLine(""Rectangle class area :"");\n         return (width * height); \n      }\n   }\n   class Triangle: Shape {\n      public Triangle(int a = 0, int b = 0): base(a, b) {\n      }\n      public override int area() {\n         Console.WriteLine(""Triangle class area :"");\n         return (width * height / 2); \n      }\n   }\n   class Caller {\n      public void CallArea(Shape sh) {\n         int a;\n         a = sh.area();\n         Console.WriteLine(""Area: {0}"", a);\n      }\n   }  \n   class Tester {\n      static void Main(string[] args) {\n         Caller c = new Caller();\n         Rectangle r = new Rectangle(10, 7);\n         Triangle t = new Triangle(10, 5);\n         \n         c.CallArea(r);\n         c.CallArea(t);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nRectangle class area:\nArea: 70\nTriangle class area:\nArea: 25\n']","['\nPrinting int: 5\nPrinting float: 500.263\nPrinting string: Hello C++\n', '\nRectangle class area :\nArea: 70\n', '\nRectangle class area:\nArea: 70\nTriangle class area:\nArea: 25\n']",[],"['Function overloading|||Operator overloading|||You cannot create an instance of an abstract class|||You cannot declare an abstract method outside an abstract class|||When a class is declared sealed, it cannot be inherited, abstract classes cannot be declared sealed.|||']"
22,['C# - Operator Overloading'],"['Implementing the Operator Overloading', 'Overloadable and Non-Overloadable Operators', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_polymorphism.htm', 'https://www.tutorialspoint.com/csharp/csharp_interfaces.htm', 'http://tpcg.io/rv16gU', 'http://tpcg.io/IwiEcC', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_polymorphism.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_interfaces.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['For example, go through the following function −', 'The following program shows the complete implementation −', 'The following table describes the overload ability of the operators in C# −', 'These unary operators take one operand and can be overloaded.', 'These binary operators take one operand and can be overloaded.', 'The comparison operators can be overloaded.', 'The conditional logical operators cannot be overloaded directly.', 'The assignment operators cannot be overloaded.', '=, ., ?:, ->, new, is, sizeof, typeof', 'These operators cannot be overloaded.']","['When the above code is compiled and executed, it produces the following result −', 'In the light of the above discussions, let us extend the preceding example, and overload few more operators −', 'When the above code is compiled and executed, it produces the following result −']","['You can redefine or overload most of the built-in operators available in C#. Thus a programmer can use operators with user-defined types as well. Overloaded operators are functions with special names the keyword operator followed by the symbol for the operator being defined. similar to any other function, an overloaded operator has a return type and a parameter list.', 'The above function implements the addition operator (+) for a user-defined class Box. It adds the attributes of two Box objects and returns the resultant Box object.']","['\npublic static Box operator+ (Box b, Box c) {\n   Box box = new Box();\n   box.length = b.length + c.length;\n   box.breadth = b.breadth + c.breadth;\n   box.height = b.height + c.height;\n   return box;\n}\n', '\nusing System;\n\nnamespace OperatorOvlApplication {\n   class Box {\n      private double length;   // Length of a box\n      private double breadth;  // Breadth of a box\n      private double height;   // Height of a box\n\n      public double getVolume() {\n         return length * breadth * height;\n      }\n      public void setLength( double len ) {\n         length = len;\n      }\n      public void setBreadth( double bre ) {\n         breadth = bre;\n      }\n      public void setHeight( double hei ) {\n         height = hei;\n      }\n      \n      // Overload + operator to add two Box objects.\n      public static Box operator+ (Box b, Box c) {\n         Box box = new Box();\n         box.length = b.length + c.length;\n         box.breadth = b.breadth + c.breadth;\n         box.height = b.height + c.height;\n         return box;\n      }\n   }\n   class Tester {\n      static void Main(string[] args) {\n         Box Box1 = new Box();   // Declare Box1 of type Box\n         Box Box2 = new Box();   // Declare Box2 of type Box\n         Box Box3 = new Box();   // Declare Box3 of type Box\n         double volume = 0.0;    // Store the volume of a box here\n\n         // box 1 specification\n         Box1.setLength(6.0);\n         Box1.setBreadth(7.0);\n         Box1.setHeight(5.0);\n\n         // box 2 specification\n         Box2.setLength(12.0);\n         Box2.setBreadth(13.0);\n         Box2.setHeight(10.0);\n\n         // volume of box 1\n         volume = Box1.getVolume();\n         Console.WriteLine(""Volume of Box1 : {0}"", volume);\n\n         // volume of box 2\n         volume = Box2.getVolume();\n         Console.WriteLine(""Volume of Box2 : {0}"", volume);\n\n         // Add two object as follows:\n         Box3 = Box1 + Box2;\n\n         // volume of box 3\n         volume = Box3.getVolume();\n         Console.WriteLine(""Volume of Box3 : {0}"", volume);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nVolume of Box1 : 210\nVolume of Box2 : 1560\nVolume of Box3 : 5400\n', '\nusing System;\n\nnamespace OperatorOvlApplication {\n   class Box {\n      private double length;    // Length of a box\n      private double breadth;   // Breadth of a box\n      private double height;    // Height of a box\n      \n      public double getVolume() {\n         return length * breadth * height;\n      }\n      public void setLength( double len ) {\n         length = len;\n      }\n      public void setBreadth( double bre ) {\n         breadth = bre;\n      }\n      public void setHeight( double hei ) {\n         height = hei;\n      }\n      \n      // Overload + operator to add two Box objects.\n      public static Box operator+ (Box b, Box c) {\n         Box box = new Box();\n         box.length = b.length + c.length;\n         box.breadth = b.breadth + c.breadth;\n         box.height = b.height + c.height;\n         return box;\n      }\n      public static bool operator == (Box lhs, Box rhs) {\n         bool status = false;\n         if (lhs.length == rhs.length && lhs.height == rhs.height \n            && lhs.breadth == rhs.breadth) {\n            \n            status = true;\n         }\n         return status;\n      }\n      public static bool operator !=(Box lhs, Box rhs) {\n         bool status = false;\n         \n         if (lhs.length != rhs.length || lhs.height != rhs.height || \n            lhs.breadth != rhs.breadth) {\n            \n            status = true;\n         }\n         return status;\n      }\n      public static bool operator <(Box lhs, Box rhs) {\n         bool status = false;\n         \n         if (lhs.length < rhs.length && lhs.height < rhs.height \n            && lhs.breadth < rhs.breadth) {\n            \n            status = true;\n         }\n         return status;\n      }\n      public static bool operator >(Box lhs, Box rhs) {\n         bool status = false;\n         \n         if (lhs.length > rhs.length && lhs.height > \n            rhs.height && lhs.breadth > rhs.breadth) {\n            \n            status = true;\n         }\n         return status;\n      }\n      public static bool operator <=(Box lhs, Box rhs) {\n         bool status = false;\n         \n         if (lhs.length <= rhs.length && lhs.height \n            <= rhs.height && lhs.breadth <= rhs.breadth) {\n            \n            status = true;\n         }\n         return status;\n      }\n      public static bool operator >=(Box lhs, Box rhs) {\n         bool status = false;\n         \n         if (lhs.length >= rhs.length && lhs.height \n            >= rhs.height && lhs.breadth >= rhs.breadth) {\n            \n            status = true;\n         }\n         return status;\n      }\n      public override string ToString() {\n         return String.Format(""({0}, {1}, {2})"", length, breadth, height);\n      }\n   }\n   class Tester {\n      static void Main(string[] args) {\n         Box Box1 = new Box();   // Declare Box1 of type Box\n         Box Box2 = new Box();   // Declare Box2 of type Box\n         Box Box3 = new Box();   // Declare Box3 of type Box\n         Box Box4 = new Box();\n         double volume = 0.0;    // Store the volume of a box here\n         \n         // box 1 specification\n         Box1.setLength(6.0);\n         Box1.setBreadth(7.0);\n         Box1.setHeight(5.0);\n         \n         // box 2 specification\n         Box2.setLength(12.0);\n         Box2.setBreadth(13.0);\n         Box2.setHeight(10.0);\n         \n         //displaying the Boxes using the overloaded ToString():\n         Console.WriteLine(""Box 1: {0}"", Box1.ToString());\n         Console.WriteLine(""Box 2: {0}"", Box2.ToString());\n         \n         // volume of box 1\n         volume = Box1.getVolume();\n         Console.WriteLine(""Volume of Box1 : {0}"", volume);\n         \n         // volume of box 2\n         volume = Box2.getVolume();\n         Console.WriteLine(""Volume of Box2 : {0}"", volume);\n         \n         // Add two object as follows:\n         Box3 = Box1 + Box2;\n         Console.WriteLine(""Box 3: {0}"", Box3.ToString());\n         \n         // volume of box 3\n         volume = Box3.getVolume();\n         Console.WriteLine(""Volume of Box3 : {0}"", volume);\n         \n         //comparing the boxes\n         if (Box1 > Box2)\n            Console.WriteLine(""Box1 is greater than Box2"");\n         else\n            Console.WriteLine(""Box1 is not greater than Box2"");\n         \n         if (Box1 < Box2)\n            Console.WriteLine(""Box1 is less than Box2"");\n         else\n            Console.WriteLine(""Box1 is not less than Box2"");\n         \n         if (Box1 >= Box2)\n            Console.WriteLine(""Box1 is greater or equal to Box2"");\n         else\n            Console.WriteLine(""Box1 is not greater or equal to Box2"");\n         \n         if (Box1 <= Box2)\n            Console.WriteLine(""Box1 is less or equal to Box2"");\n         else\n            Console.WriteLine(""Box1 is not less or equal to Box2"");\n         \n         if (Box1 != Box2)\n            Console.WriteLine(""Box1 is not equal to Box2"");\n         else\n            Console.WriteLine(""Box1 is not greater or equal to Box2"");\n         Box4 = Box3;\n         \n         if (Box3 == Box4)\n            Console.WriteLine(""Box3 is equal to Box4"");\n         else\n            Console.WriteLine(""Box3 is not equal to Box4"");\n\n         Console.ReadKey();\n      }\n   }\n}\n', '\nBox 1: (6, 7, 5)\nBox 2: (12, 13, 10)\nVolume of Box1 : 210\nVolume of Box2 : 1560\nBox 3: (18, 20, 15)\nVolume of Box3 : 5400\nBox1 is not greater than Box2\nBox1 is less than Box2\nBox1 is not greater or equal to Box2\nBox1 is less or equal to Box2\nBox1 is not equal to Box2\nBox3 is equal to Box4\n']","['\nVolume of Box1 : 210\nVolume of Box2 : 1560\nVolume of Box3 : 5400\n', '\nBox 1: (6, 7, 5)\nBox 2: (12, 13, 10)\nVolume of Box1 : 210\nVolume of Box2 : 1560\nBox 3: (18, 20, 15)\nVolume of Box3 : 5400\nBox1 is not greater than Box2\nBox1 is less than Box2\nBox1 is not greater or equal to Box2\nBox1 is less or equal to Box2\nBox1 is not equal to Box2\nBox3 is equal to Box4\n']","['Sr.No.|||Operators & Description&&&1|||+, -, !, ~, ++, --|||These unary operators take one operand and can be overloaded.&&&2|||+, -, *, /, %|||These binary operators take one operand and can be overloaded.&&&3|||==, !=, <, >, <=, >=|||The comparison operators can be overloaded.&&&4|||&&, |||||The conditional logical operators cannot be overloaded directly.&&&5|||+=, -=, *=, /=, %=|||The assignment operators cannot be overloaded.&&&6|||=, ., ?:, ->, new, is, sizeof, typeof|||These operators cannot be overloaded.']",[]
23,['C# - Interfaces'],"['Declaring Interfaces', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_operator_overloading.htm', 'https://www.tutorialspoint.com/csharp/csharp_namespaces.htm', 'http://tpcg.io/InC4N0', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_operator_overloading.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_namespaces.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['The following example demonstrates implementation of the above interface −'],"['When the above code is compiled and executed, it produces the following result −']","[""An interface is defined as a syntactical contract that all the classes inheriting the interface should follow. The interface defines the 'what' part of the syntactical contract and the deriving classes define the 'how' part of the syntactical contract."", 'Interfaces define properties, methods, and events, which are the members of the interface. Interfaces contain only the declaration of the members. It is the responsibility of the deriving class to define the members. It often helps in providing a standard structure that the deriving classes would follow.', 'Abstract classes to some extent serve the same purpose, however, they are mostly used when only few methods are to be declared by the base class and the deriving class implements the functionalities.', 'Interfaces are declared using the interface keyword. It is similar to class declaration. Interface statements are public by default. Following is an example of an interface declaration −']","['\npublic interface ITransactions {\n   // interface members\n   void showTransaction();\n   double getAmount();\n}\n', '\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System;\n\nnamespace InterfaceApplication {\n   \n   public interface ITransactions {\n      // interface members\n      void showTransaction();\n      double getAmount();\n   }\n   public class Transaction : ITransactions {\n      private string tCode;\n      private string date;\n      private double amount;\n      \n      public Transaction() {\n         tCode = "" "";\n         date = "" "";\n         amount = 0.0;\n      }\n      public Transaction(string c, string d, double a) {\n         tCode = c;\n         date = d;\n         amount = a;\n      }\n      public double getAmount() {\n         return amount;\n      }\n      public void showTransaction() {\n         Console.WriteLine(""Transaction: {0}"", tCode);\n         Console.WriteLine(""Date: {0}"", date);\n         Console.WriteLine(""Amount: {0}"", getAmount());\n      }\n   }\n   class Tester {\n     \n      static void Main(string[] args) {\n         Transaction t1 = new Transaction(""001"", ""8/10/2012"", 78900.00);\n         Transaction t2 = new Transaction(""002"", ""9/10/2012"", 451900.00);\n         \n         t1.showTransaction();\n         t2.showTransaction();\n         Console.ReadKey();\n      }\n   }\n}\n', '\nTransaction: 001\nDate: 8/10/2012\nAmount: 78900\nTransaction: 002\nDate: 9/10/2012\nAmount: 451900\n']",['\nTransaction: 001\nDate: 8/10/2012\nAmount: 78900\nTransaction: 002\nDate: 9/10/2012\nAmount: 451900\n'],[],[]
24,['C# - Namespaces'],"['Defining a Namespace', 'The using Keyword', 'Nested Namespaces', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_interfaces.htm', 'https://www.tutorialspoint.com/csharp/csharp_preprocessor_directives.htm', 'http://tpcg.io/SCXDku', 'http://tpcg.io/5TZope', 'http://tpcg.io/jW9nSY', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_interfaces.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_preprocessor_directives.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The following program demonstrates use of namespaces −', 'We could have written the fully qualified name as −', 'Let us rewrite our preceding example, with using directive −', 'You can define one namespace inside another namespace as follows −']","['A namespace definition begins with the keyword namespace followed by the namespace name as follows −', 'To call the namespace-enabled version of either function or variable, prepend the namespace name as follows −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'You can access members of nested namespace by using the dot (.) operator as follows −', 'When the above code is compiled and executed, it produces the following result −']","['A namespace is designed for providing a way to keep one set of names separate from another. The class names declared in one namespace does not conflict with the same class names declared in another.', 'The using keyword states that the program is using the names in the given namespace. For example, we are using the System namespace in our programs. The class Console is defined there. We just write −', 'You can also avoid prepending of namespaces with the using namespace directive. This directive tells the compiler that the subsequent code is making use of names in the specified namespace. The namespace is thus implied for the following code −']","['\nnamespace namespace_name {\n   // code declarations\n}\n', '\nnamespace_name.item_name;\n', '\nusing System;\n\nnamespace first_space {\n   class namespace_cl {\n      public void func() {\n         Console.WriteLine(""Inside first_space"");\n      }\n   }\n}\nnamespace second_space {\n   class namespace_cl {\n      public void func() {\n         Console.WriteLine(""Inside second_space"");\n      }\n   }\n}\nclass TestClass {\n   static void Main(string[] args) {\n      first_space.namespace_cl fc = new first_space.namespace_cl();\n      second_space.namespace_cl sc = new second_space.namespace_cl();\n      fc.func();\n      sc.func();\n      Console.ReadKey();\n   }\n}\n', '\nInside first_space\nInside second_space\n', '\nConsole.WriteLine (""Hello there"");\n', '\nSystem.Console.WriteLine(""Hello there"");\n', '\nusing System;\nusing first_space;\nusing second_space;\n\nnamespace first_space {\n   class abc {\n      public void func() {\n         Console.WriteLine(""Inside first_space"");\n      }\n   }\n}\nnamespace second_space {\n   class efg {\n      public void func() {\n         Console.WriteLine(""Inside second_space"");\n      }\n   }\n}   \nclass TestClass {\n   static void Main(string[] args) {\n      abc fc = new abc();\n      efg sc = new efg();\n      fc.func();\n      sc.func();\n      Console.ReadKey();\n   }\n}\n', '\nInside first_space\nInside second_space\n', '\nnamespace namespace_name1 {\n   \n   // code declarations\n   namespace namespace_name2 {\n      // code declarations\n   }\n}\n', '\nusing System;\nusing first_space;\nusing first_space.second_space;\n\nnamespace first_space {\n   class abc {\n      public void func() {\n         Console.WriteLine(""Inside first_space"");\n      }\n   }\n   namespace second_space {\n      class efg {\n         public void func() {\n            Console.WriteLine(""Inside second_space"");\n         }\n      }\n   }   \n}\nclass TestClass {\n   static void Main(string[] args) {\n      abc fc = new abc();\n      efg sc = new efg();\n      fc.func();\n      sc.func();\n      Console.ReadKey();\n   }\n}\n', '\nInside first_space\nInside second_space\n']","['\nnamespace namespace_name {\n   // code declarations\n}\n', '\nnamespace_name.item_name;\n', '\nInside first_space\nInside second_space\n', '\nConsole.WriteLine (""Hello there"");\n', '\nSystem.Console.WriteLine(""Hello there"");\n', '\nInside first_space\nInside second_space\n', '\nInside first_space\nInside second_space\n']",[],[]
25,['C# - Preprocessor Directives'],"['Preprocessor Directives in C#', 'The #define Preprocessor', 'Conditional Directives', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_namespaces.htm', 'https://www.tutorialspoint.com/csharp/csharp_regular_expressions.htm', 'http://tpcg.io/pw69s9', 'http://tpcg.io/frYL1o', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_namespaces.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_regular_expressions.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The following table lists the preprocessor directives available in C# −', 'It defines a sequence of characters, called symbol.', 'It allows testing a symbol or symbols to see if they evaluate to true.', 'It allows to create a compound conditional directive, along with #if.', 'It allows creating a compound conditional directive.', 'Specifies the end of a conditional directive.', 'It allows generating an error from a specific location in your code.', 'It allows generating a level one warning from a specific location in your code.', 'It marks the end of a #region block.', 'The #define preprocessor directive creates symbolic constants.', 'The following program illustrates this −', 'Syntax for conditional directive is −', 'The following program demonstrates use of conditional directives −']","[""It lets you modify the compiler's line number and (optionally) the file name output for errors and warnings."", 'When the above code is compiled and executed, it produces the following result −', 'The operator symbol is the operator used for evaluating the symbol. Operators could be either of the following −', 'When the above code is compiled and executed, it produces the following result −']","['The preprocessor directives give instruction to the compiler to preprocess the information before actual compilation starts.', 'All preprocessor directives begin with #, and only white-space characters may appear before a preprocessor directive on a line. Preprocessor directives are not statements, so they do not end with a semicolon (;).', 'C# compiler does not have a separate preprocessor; however, the directives are processed as if there was one. In C# the preprocessor directives are used to help in conditional compilation. Unlike C and C++ directives, they are not used to create macros. A preprocessor directive must be the only instruction on a line.', 'It lets you specify a block of code that you can expand or collapse when using the outlining feature of the Visual Studio Code Editor.', '#define lets you define a symbol such that, by using the symbol as the expression passed to the #if directive, the expression evaluates to true. Its syntax is as follows −', 'You can use the #if directive to create a conditional directive. Conditional directives are useful for testing a symbol or symbols to check if they evaluate to true. If they do evaluate to true, the compiler evaluates all the code between the #if and the next directive.', 'Where, symbol is the name of the symbol you want to test. You can also use true and false or prepend the symbol with the negation operator.', 'You can also group symbols and operators with parentheses. Conditional directives are used for compiling code for a debug build or when compiling for a specific configuration. A conditional directive beginning with a #if directive must explicitly be terminated with a #endif directive.']","['\n#define symbol\n', '\n#define PI \nusing System;\n\nnamespace PreprocessorDAppl {\n   class Program {\n      static void Main(string[] args) {\n         #if (PI)\n            Console.WriteLine(""PI is defined"");\n         #else\n            Console.WriteLine(""PI is not defined"");\n         #endif\n         Console.ReadKey();\n      }\n   }\n}\n', '\nPI is defined\n', '\n#if symbol [operator symbol]...\n', '\n#define DEBUG\n#define VC_V10\nusing System;\n\npublic class TestClass {\n   public static void Main() {\n      #if (DEBUG && !VC_V10)\n         Console.WriteLine(""DEBUG is defined"");\n      #elif (!DEBUG && VC_V10)\n         Console.WriteLine(""VC_V10 is defined"");\n      #elif (DEBUG && VC_V10)\n         Console.WriteLine(""DEBUG and VC_V10 are defined"");\n      #else\n         Console.WriteLine(""DEBUG and VC_V10 are not defined"");\n      #endif\n      Console.ReadKey();\n   }\n}\n', '\nDEBUG and VC_V10 are defined\n']","['\n#define symbol\n', '\nPI is defined\n', '\n#if symbol [operator symbol]...\n', '\nDEBUG and VC_V10 are defined\n']","[""Sr.No.|||Preprocessor Directive & Description&&&1|||#define|||It defines a sequence of characters, called symbol.&&&2|||#undef|||It allows you to undefine a symbol.&&&3|||#if|||It allows testing a symbol or symbols to see if they evaluate to true.&&&4|||#else|||It allows to create a compound conditional directive, along with #if.&&&5|||#elif|||It allows creating a compound conditional directive.&&&6|||#endif|||Specifies the end of a conditional directive.&&&7|||#line|||It lets you modify the compiler's line number and (optionally) the file name output for errors and warnings.&&&8|||#error|||It allows generating an error from a specific location in your code.&&&9|||#warning|||It allows generating a level one warning from a specific location in your code.&&&10|||#region|||It lets you specify a block of code that you can expand or collapse when using the outlining feature of the Visual Studio Code Editor.&&&11|||#endregion|||It marks the end of a #region block.""]",['== (equality)|||!= (inequality)|||&& (and)||||| (or)|||']
26,['C# - Regular Expressions'],"['Constructs for Defining Regular Expressions', 'The Regex Class', 'Example 1', 'Example 2', 'Example 3', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_preprocessor_directives.htm', 'https://www.tutorialspoint.com/csharp/csharp_exception_handling.htm', 'https://www.tutorialspoint.com/csharp/csharp_character_escapes.htm', 'https://www.tutorialspoint.com/csharp/csharp_character_classes.htm', 'https://www.tutorialspoint.com/csharp/csharp_anchors.htm', 'https://www.tutorialspoint.com/csharp/csharp_grouping_constructs.htm', 'https://www.tutorialspoint.com/csharp/csharp_quantifiers.htm', 'https://www.tutorialspoint.com/csharp/csharp_backreference_constructs.htm', 'https://www.tutorialspoint.com/csharp/csharp_alternation_constructs.htm', 'https://www.tutorialspoint.com/csharp/csharp_substitutions.htm', 'https://www.tutorialspoint.com/csharp/csharp_miscellaneous_constructs.htm', 'http://tpcg.io/mZyewS', 'http://tpcg.io/fq2Hkf', 'http://tpcg.io/uyH2o4', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_preprocessor_directives.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_exception_handling.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['public bool IsMatch(string input, int startat)', 'public static bool IsMatch(string input, string pattern)', 'public MatchCollection Matches(string input)', 'public string Replace(string input, string replacement)', ""The following example matches words that start with 'S' −"", ""The following example matches words that start with 'm' and ends with 'e' −"", 'This example replaces extra white space −']","['The Regex class is used for representing a regular expression. It has the following commonly used methods −', 'Indicates whether the regular expression specified in the Regex constructor finds a match in a specified input string.', 'Indicates whether the specified regular expression finds a match in the specified input string.', 'Searches the specified input string for all occurrences of a regular expression.', 'For the complete list of methods and properties, please read the Microsoft documentation on C#.', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['A regular expression is a pattern that could be matched against an input text. The .Net framework provides a regular expression engine that allows such matching. A pattern consists of one or more character literals, operators, or constructs.', 'There are various categories of characters, operators, and constructs that lets you to define regular expressions. Click the following links to find these constructs.', 'Indicates whether the regular expression specified in the Regex constructor finds a match in the specified input string, beginning at the specified starting position in the string.', 'In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.', 'Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the Regex constructor.']","['\nusing System;\nusing System.Text.RegularExpressions;\n\nnamespace RegExApplication {\n   class Program {\n      private static void showMatch(string text, string expr) {\n         Console.WriteLine(""The Expression: "" + expr);\n         MatchCollection mc = Regex.Matches(text, expr);\n         \n         foreach (Match m in mc) {\n            Console.WriteLine(m);\n         }\n      }\n      static void Main(string[] args) {\n         string str = ""A Thousand Splendid Suns"";\n         \n         Console.WriteLine(""Matching words that start with \'S\': "");\n         showMatch(str, @""\\bS\\S*"");\n         Console.ReadKey();\n      }\n   }\n}\n', ""\nMatching words that start with 'S':\nThe Expression: \\bS\\S*\nSplendid\nSuns\n"", '\nusing System;\nusing System.Text.RegularExpressions;\n\nnamespace RegExApplication {\n   class Program {\n      private static void showMatch(string text, string expr) {\n         Console.WriteLine(""The Expression: "" + expr);\n         MatchCollection mc = Regex.Matches(text, expr);\n         \n         foreach (Match m in mc) {\n            Console.WriteLine(m);\n         }\n      }\n      static void Main(string[] args) {\n         string str = ""make maze and manage to measure it"";\n\n         Console.WriteLine(""Matching words start with \'m\' and ends with \'e\':"");\n         showMatch(str, @""\\bm\\S*e\\b"");\n         Console.ReadKey();\n      }\n   }\n}\n', ""\nMatching words start with 'm' and ends with 'e':\nThe Expression: \\bm\\S*e\\b\nmake\nmaze\nmanage\nmeasure\n"", '\nusing System;\nusing System.Text.RegularExpressions;\n\nnamespace RegExApplication {\n   class Program {\n      static void Main(string[] args) {\n         string input = ""Hello   World   "";\n         string pattern = ""\\\\s+"";\n         string replacement = "" "";\n         \n         Regex rgx = new Regex(pattern);\n         string result = rgx.Replace(input, replacement);\n\n         Console.WriteLine(""Original String: {0}"", input);\n         Console.WriteLine(""Replacement String: {0}"", result);    \n         Console.ReadKey();\n      }\n   }\n}\n', '\nOriginal String: Hello World   \nReplacement String: Hello World   \n']","[""\nMatching words that start with 'S':\nThe Expression: \\bS\\S*\nSplendid\nSuns\n"", ""\nMatching words start with 'm' and ends with 'e':\nThe Expression: \\bm\\S*e\\b\nmake\nmaze\nmanage\nmeasure\n"", '\nOriginal String: Hello World   \nReplacement String: Hello World   \n']","['Sr.No.|||Methods & Description&&&1|||public bool IsMatch(string input)|||Indicates whether the regular expression specified in the Regex constructor finds a match in a specified input string.&&&2|||public bool IsMatch(string input, int startat)|||Indicates whether the regular expression specified in the Regex constructor finds a match in the specified input string, beginning at the specified starting position in the string.|||&&&3|||public static bool IsMatch(string input, string pattern)|||Indicates whether the specified regular expression finds a match in the specified input string.|||&&&4|||public MatchCollection Matches(string input)|||Searches the specified input string for all occurrences of a regular expression.&&&5|||public string Replace(string input, string replacement)|||In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.|||&&&6|||public string[] Split(string input)|||Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the Regex constructor.']",['Character escapes|||Character classes|||Anchors|||Grouping constructs|||Quantifiers|||Backreference constructs|||Alternation constructs|||Substitutions|||Miscellaneous constructs|||']
27,['C# - Exception Handling'],"['Syntax', 'Exception Classes in C#', 'Handling Exceptions', 'Creating User-Defined Exceptions', 'Throwing Objects', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_regular_expressions.htm', 'https://www.tutorialspoint.com/csharp/csharp_file_io.htm', 'http://tpcg.io/fp4I6h', 'http://tpcg.io/OM5Y06', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_regular_expressions.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_file_io.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Handles errors generated when a method refers to an array index out of range.', 'Handles errors generated when type is mismatched with the array type.', 'Handles errors generated from referencing a null object.', 'Handles errors generated from dividing a dividend with zero.', 'Handles errors generated during typecasting.', 'Handles errors generated from insufficient free memory.', 'Handles errors generated from stack overflow.']","['throw − A program throws an exception when a problem shows up. This is done using a throw keyword.', 'The System.SystemException class is the base class for all predefined system exception.', 'The following table provides some of the predefined exception classes derived from the Sytem.SystemException class −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['An exception is a problem that arises during the execution of a program. A C# exception is a response to an exceptional circumstance that arises while a program is running, such as an attempt to divide by zero.', 'Exceptions provide a way to transfer control from one part of a program to another. C# exception handling is built upon four keywords: try, catch, finally, and throw.', 'try − A try block identifies a block of code for which particular exceptions is activated. It is followed by one or more catch blocks.', 'catch − A program catches an exception with an exception handler at the place in a program where you want to handle the problem. The catch keyword indicates the catching of an exception.', 'finally − The finally block is used to execute a given set of statements, whether an exception is thrown or not thrown. For example, if you open a file, it must be closed whether an exception is raised or not.', 'Assuming a block raises an exception, a method catches an exception using a combination of the try and catch keywords. A try/catch block is placed around the code that might generate an exception. Code within a try/catch block is referred to as protected code, and the syntax for using try/catch looks like the following −', 'You can list down multiple catch statements to catch different type of exceptions in case your try block raises more than one exception in different situations.', 'C# exceptions are represented by classes. The exception classes in C# are mainly directly or indirectly derived from the System.Exception class. Some of the exception classes derived from the System.Exception class are the System.ApplicationException and   System.SystemException classes.', 'The System.ApplicationException class supports exceptions generated by application programs. Hence the exceptions defined by the programmers should derive from this class.', 'C# provides a structured solution to the exception handling in the form of try and catch blocks. Using these blocks the core program statements are separated from the error-handling statements.', 'These error handling blocks are implemented using the try, catch, and finally keywords. Following is an example of throwing an exception when dividing by zero condition occurs −', 'You can also define your own exception. User-defined exception classes are derived from the Exception class. The following example demonstrates this −', 'You can throw an object if it is either directly or indirectly derived from the System.Exception class. You can use a throw statement in the catch block to throw the present object as −']","['\ntry {\n   // statements causing exception\n} catch( ExceptionName e1 ) {\n   // error handling code\n} catch( ExceptionName e2 ) {\n   // error handling code\n} catch( ExceptionName eN ) {\n   // error handling code\n} finally {\n   // statements to be executed\n}\n', '\nusing System;\n\nnamespace ErrorHandlingApplication {\n   class DivNumbers {\n      int result;\n      \n      DivNumbers() {\n         result = 0;\n      }\n      public void division(int num1, int num2) {\n         try {\n            result = num1 / num2;\n         } catch (DivideByZeroException e) {\n            Console.WriteLine(""Exception caught: {0}"", e);\n         } finally {\n            Console.WriteLine(""Result: {0}"", result);\n         }\n      }\n      static void Main(string[] args) {\n         DivNumbers d = new DivNumbers();\n         d.division(25, 0);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nException caught: System.DivideByZeroException: Attempted to divide by zero. \nat ...\nResult: 0\n', '\nusing System;\n\nnamespace UserDefinedException {\n   class TestTemperature {\n      static void Main(string[] args) {\n         Temperature temp = new Temperature();\n         try {\n            temp.showTemp();\n         } catch(TempIsZeroException e) {\n            Console.WriteLine(""TempIsZeroException: {0}"", e.Message);\n         }\n         Console.ReadKey();\n      }\n   }\n}\npublic class TempIsZeroException: Exception {\n   public TempIsZeroException(string message): base(message) {\n   }\n}\npublic class Temperature {\n   int temperature = 0;\n   \n   public void showTemp() {\n      \n      if(temperature == 0) {\n         throw (new TempIsZeroException(""Zero Temperature found""));\n      } else {\n         Console.WriteLine(""Temperature: {0}"", temperature);\n      }\n   }\n}\n', '\nTempIsZeroException: Zero Temperature found\n', '\nCatch(Exception e) {\n   ...\n   Throw e\n}\n']","['\ntry {\n   // statements causing exception\n} catch( ExceptionName e1 ) {\n   // error handling code\n} catch( ExceptionName e2 ) {\n   // error handling code\n} catch( ExceptionName eN ) {\n   // error handling code\n} finally {\n   // statements to be executed\n}\n', '\nException caught: System.DivideByZeroException: Attempted to divide by zero. \nat ...\nResult: 0\n', '\nTempIsZeroException: Zero Temperature found\n', '\nCatch(Exception e) {\n   ...\n   Throw e\n}\n']",['Sr.No.|||Exception Class & Description&&&1|||System.IO.IOException|||Handles I/O errors.&&&2|||System.IndexOutOfRangeException|||Handles errors generated when a method refers to an array index out of range.&&&3|||System.ArrayTypeMismatchException|||Handles errors generated when type is mismatched with the array type.&&&4|||System.NullReferenceException|||Handles errors generated from referencing a null object.&&&5|||System.DivideByZeroException|||Handles errors generated from dividing a dividend with zero.&&&6|||System.InvalidCastException|||Handles errors generated during typecasting.&&&7|||System.OutOfMemoryException|||Handles errors generated from insufficient free memory.&&&8|||System.StackOverflowException|||Handles errors generated from stack overflow.'],"['try − A try block identifies a block of code for which particular exceptions is activated. It is followed by one or more catch blocks.|||catch − A program catches an exception with an exception handler at the place in a program where you want to handle the problem. The catch keyword indicates the catching of an exception.|||finally − The finally block is used to execute a given set of statements, whether an exception is thrown or not thrown. For example, if you open a file, it must be closed whether an exception is raised or not.|||throw − A program throws an exception when a problem shows up. This is done using a throw keyword.|||']"
28,['C# - File I/O'],"['C# I/O Classes', 'The FileStream Class', 'Example', 'Advanced File Operations in C#', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_exception_handling.htm', 'https://www.tutorialspoint.com/csharp/csharp_attributes.htm', 'http://tpcg.io/hnFN0I', 'https://www.tutorialspoint.com/csharp/csharp_text_files.htm', 'https://www.tutorialspoint.com/csharp/csharp_binary_files.htm', 'https://www.tutorialspoint.com/csharp/csharp_windows_file_system.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_exception_handling.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_attributes.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Reads primitive data from a binary stream.', 'Writes primitive data in binary format.', 'A temporary storage for a stream of bytes.', 'Helps in manipulating a directory structure.', 'Used for performing operations on directories.', 'Provides information for the drives.', 'Used for performing operations on files.', 'Used to read from and write to any location in a file.', 'Used for random access to streamed data stored in memory.', 'Performs operations on path information.', 'Used for reading characters from a byte stream.', 'Is used for writing characters to a stream.', 'Is used for reading from a string buffer.', 'Is used for writing into a string buffer.', 'Truncate − It opens an existing file and truncates its size to zero bytes.', 'FileAccess enumerators have members: Read, ReadWrite and Write.', 'FileShare enumerators have the following members −', 'None − It declines sharing of the current file', 'Read − It allows opening the file for readin.', 'ReadWrite − It allows opening the file for reading and writing', 'Write − It allows opening the file for writing', 'The following program demonstrates use of the FileStream class −']","['The following table shows some commonly used non-abstract classes in the System.IO namespace −', 'For example, we create a FileStream object F for reading a file named sample.txt as shown −', 'The FileMode enumerator defines various methods for opening files. The members of the FileMode enumerator are −', 'Append − It opens an existing file and puts cursor at the end of file, or creates the file, if the file does not exist.', 'CreateNew − It specifies to the operating system, that it should create a new file.', 'Inheritable − It allows a file handle to pass inheritance to the child processes', 'When the above code is compiled and executed, it produces the following result −', 'It involves reading from and writing into text files. The StreamReader and StreamWriter class helps to accomplish it.', 'It gives a C# programamer the ability to browse and locate Windows files and directories.']","['A file is a collection of data stored in a disk with a specific name and a directory path. When a file is opened for reading or writing, it becomes a stream.', 'The stream is basically the sequence of bytes passing through the communication path. There are two main streams: the input stream and the output stream. The input stream is used for reading data from file (read operation) and the output stream is used for writing into the file (write operation).', 'The System.IO namespace has various classes that are used for performing numerous operations with files, such as creating and deleting files, reading from or writing to a file, closing a file etc.', 'The FileStream class in the System.IO namespace helps in reading from, writing to and closing files. This class derives from the abstract class Stream.', 'You need to create a FileStream object to create a new file or open an existing file. The syntax for creating a FileStream object is as follows −', 'OpenOrCreate − It specifies to the operating system that it should open a file if it exists, otherwise it should create a new file.', 'The preceding example provides simple file operations in C#. However, to utilize the immense powers of C# System.IO classes, you need to know the commonly used properties and methods of these classes.', 'It involves reading from and writing into binary files. The BinaryReader and BinaryWriter class helps to accomplish this.']","['\nFileStream <object_name> = new FileStream( <file_name>, <FileMode Enumerator>,\n   <FileAccess Enumerator>, <FileShare Enumerator>);\n', '\nFileStream F = new FileStream(""sample.txt"", FileMode.Open, FileAccess.Read,\n   FileShare.Read);\n', '\nusing System;\nusing System.IO;\n\nnamespace FileIOApplication {\n   class Program {\n      static void Main(string[] args) {\n         FileStream F = new FileStream(""test.dat"", FileMode.OpenOrCreate, \n            FileAccess.ReadWrite);\n         \n         for (int i = 1; i <= 20; i++) {\n            F.WriteByte((byte)i);\n         }\n         F.Position = 0;\n         for (int i = 0; i <= 20; i++) {\n            Console.Write(F.ReadByte() + "" "");\n         }\n         F.Close();\n         Console.ReadKey();\n      }\n   }\n}\n', '\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 -1\n']","['\nFileStream <object_name> = new FileStream( <file_name>, <FileMode Enumerator>,\n   <FileAccess Enumerator>, <FileShare Enumerator>);\n', '\nFileStream F = new FileStream(""sample.txt"", FileMode.Open, FileAccess.Read,\n   FileShare.Read);\n', '\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 -1\n']","['Sr.No.|||I/O Class & Description&&&1|||BinaryReader|||Reads primitive data from a binary stream.&&&2|||BinaryWriter|||Writes primitive data in binary format.&&&3|||BufferedStream|||A temporary storage for a stream of bytes.&&&4|||Directory|||Helps in manipulating a directory structure.&&&5|||DirectoryInfo|||Used for performing operations on directories.&&&6|||DriveInfo|||Provides information for the drives.&&&7|||File|||Helps in manipulating files.&&&8|||FileInfo|||Used for performing operations on files.&&&9|||FileStream|||Used to read from and write to any location in a file.&&&10|||MemoryStream|||Used for random access to streamed data stored in memory.&&&11|||Path|||Performs operations on path information.&&&12|||StreamReader|||Used for reading characters from a byte stream.&&&13|||StreamWriter|||Is used for writing characters to a stream.&&&14|||StringReader|||Is used for reading from a string buffer.&&&15|||StringWriter|||Is used for writing into a string buffer.', 'Sr.No.|||Parameter & Description&&&1|||FileMode|||The FileMode enumerator defines various methods for opening files. The members of the FileMode enumerator are −||||||Append − It opens an existing file and puts cursor at the end of file, or creates the file, if the file does not exist.|||Create − It creates a new file.|||CreateNew − It specifies to the operating system, that it should create a new file.|||Open − It opens an existing file.|||OpenOrCreate − It specifies to the operating system that it should open a file if it exists, otherwise it should create a new file.|||Truncate − It opens an existing file and truncates its size to zero bytes.||||||&&&2|||FileAccess|||FileAccess enumerators have members: Read, ReadWrite and Write.|||&&&3|||FileShare|||FileShare enumerators have the following members −||||||Inheritable − It allows a file handle to pass inheritance to the child processes|||None − It declines sharing of the current file|||Read − It allows opening the file for readin.|||ReadWrite − It allows opening the file for reading and writing|||Write − It allows opening the file for writing||||||', 'Sr.No.|||Topic & Description&&&1|||Reading from and Writing into Text files|||It involves reading from and writing into text files. The StreamReader and StreamWriter class helps to accomplish it.&&&2|||Reading from and Writing into Binary files|||It involves reading from and writing into binary files. The BinaryReader and BinaryWriter class helps to accomplish this.&&&3|||Manipulating the Windows file system|||It gives a C# programamer the ability to browse and locate Windows files and directories.']","['Append − It opens an existing file and puts cursor at the end of file, or creates the file, if the file does not exist.|||Create − It creates a new file.|||CreateNew − It specifies to the operating system, that it should create a new file.|||Open − It opens an existing file.|||OpenOrCreate − It specifies to the operating system that it should open a file if it exists, otherwise it should create a new file.|||Truncate − It opens an existing file and truncates its size to zero bytes.|||Inheritable − It allows a file handle to pass inheritance to the child processes|||None − It declines sharing of the current file|||Read − It allows opening the file for readin.|||ReadWrite − It allows opening the file for reading and writing|||Write − It allows opening the file for writing|||']"
29,['C# - Attributes'],"['Specifying an Attribute', 'Predefined Attributes', 'AttributeUsage', 'Conditional', 'Obsolete', 'Creating Custom Attributes', 'Declaring a Custom Attribute', 'Constructing the Custom Attribute', 'Applying the Custom Attribute', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_file_io.htm', 'https://www.tutorialspoint.com/csharp/csharp_reflection.htm', 'http://tpcg.io/bmBDzv', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_file_io.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_reflection.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Syntax for specifying an attribute is as follows −', 'The .Net Framework provides three pre-defined attributes −', 'Syntax for specifying this attribute is as follows −', 'Syntax for specifying this attribute is as follows −', 'The following example demonstrates the attribute −', 'Syntax for specifying this attribute is as follows −', 'The following program demonstrates this −', 'Creating and using custom attributes involve four steps −', 'In the preceding code, we have declared a custom attribute named DeBugInfo.', 'The attribute is applied by placing it immediately before its target −']","['This predefined attribute marks a conditional method whose execution depends on a specified preprocessing identifier.', 'When the above code is compiled and executed, it produces the following result −', 'The parameter message, is a string describing the reason why the item is obsolete and what to use instead.', 'When you try to compile the program, the compiler gives an error message stating −', 'A new custom attribute should is derived from the System.Attribute class. For example,', 'In the next chapter, we retrieve attribute information using a Reflection class object.']","['An attribute is a declarative tag that is used to convey information to runtime about the behaviors of various elements like classes, methods, structures, enumerators, assemblies etc. in your program. You can add declarative information to a program by using an attribute. A declarative tag is depicted by square ([ ]) brackets placed above the element it is used for.', 'Attributes are used for adding metadata, such as compiler instruction and other information such as comments, description, methods and classes to a program. The .Net Framework provides two types of attributes: the pre-defined attributes and custom built attributes.', 'Name of the attribute and its values are specified within the square brackets, before the element to which the attribute is applied. Positional parameters specify the essential information and the name parameters specify the optional information.', 'The pre-defined attribute AttributeUsage describes how a custom attribute class can be used. It specifies the types of items to which the attribute can be applied.', 'The parameter validon specifies the language elements on which the attribute can be placed. It is a combination of the value of an enumerator AttributeTargets. The default value is  AttributeTargets.All.', 'The parameter allowmultiple (optional) provides value for the AllowMultiple property of this attribute, a Boolean value. If this is true, the attribute is multiuse. The default is false (single-use).', 'The parameter inherited (optional) provides value for the Inherited property of this attribute, a Boolean value. If it is true, the attribute is inherited by derived classes. The default value is false (not inherited).', 'It causes conditional compilation of method calls, depending on the specified value such as Debug or  Trace. For example, it displays the values of the variables while debugging a code.', 'This predefined attribute marks a program entity that should not be used. It enables you to inform the compiler to discard a particular target element. For example, when a new method is being used in a class and if you still want to retain the old method in the class, you may mark it as obsolete by displaying a message the new method should be used, instead of the old method.', 'The parameter iserror, is a Boolean value. If its value is true, the compiler should treat the use of the item as an error. Default value is false (compiler generates a warning).', 'The .Net Framework allows creation of custom attributes that can be used to store declarative information and can be retrieved at run-time. This information can be related to any target element depending upon the design criteria and application need.', 'The Last step involves writing a simple program to read through the metadata to find various notations. Metadata is data about data or information used for describing other data. This program should use reflections for accessing attributes at runtime. This we will discuss in the next chapter.', 'Let us construct a custom attribute named DeBugInfo, which stores the information obtained by debugging any program. Let it store the following information −', ""The DeBugInfo class has three private properties for storing the first three information and a public property for storing the message. Hence the bug number, developer's name, and date of review are the positional parameters of the DeBugInfo class and the message is an optional or named parameter."", 'Each attribute must have at least one constructor. The positional parameters should be passed through the constructor. The following code shows the DeBugInfo class −']","['\n[attribute(positional_parameters, name_parameter = value, ...)]\nelement\n', '\n[AttributeUsage (\n   validon,\n   AllowMultiple = allowmultiple,\n   Inherited = inherited\n)]\n', '\n[AttributeUsage(\n   AttributeTargets.Class |\n   AttributeTargets.Constructor |\n   AttributeTargets.Field |\n   AttributeTargets.Method |\n   AttributeTargets.Property, \n   AllowMultiple = true)]\n', '\n[Conditional(\n   conditionalSymbol\n)]\n', '\n[Conditional(""DEBUG"")]\n', '\n#define DEBUG\nusing System;\nusing System.Diagnostics;\n\npublic class Myclass {\n   [Conditional(""DEBUG"")]\n   \n   public static void Message(string msg) {\n      Console.WriteLine(msg);\n   }\n}\nclass Test {\n   static void function1() {\n      Myclass.Message(""In Function 1."");\n      function2();\n   }\n   static void function2() {\n      Myclass.Message(""In Function 2."");\n   }\n   public static void Main() {\n      Myclass.Message(""In Main function."");\n      function1();\n      Console.ReadKey();\n   }\n}\n', '\nIn Main function\nIn Function 1\nIn Function 2\n', '\n[Obsolete (\n   message\n)]\n\n[Obsolete (\n   message,\n   iserror\n)]\n', '\nusing System;\n\npublic class MyClass {\n   [Obsolete(""Don\'t use OldMethod, use NewMethod instead"", true)]\n   \n   static void OldMethod() {\n      Console.WriteLine(""It is the old method"");\n   }\n   static void NewMethod() {\n      Console.WriteLine(""It is the new method""); \n   }\n   public static void Main() {\n      OldMethod();\n   }\n}\n', ""\n Don't use OldMethod, use NewMethod instead\n"", '\n//a custom attribute BugFix to be assigned to a class and its members\n[AttributeUsage(\n   AttributeTargets.Class |\n   AttributeTargets.Constructor |\n   AttributeTargets.Field |\n   AttributeTargets.Method |\n   AttributeTargets.Property,\n   AllowMultiple = true)]\n\npublic class DeBugInfo : System.Attribute\n', '\n//a custom attribute BugFix to be assigned to a class and its members\n[AttributeUsage(\n   AttributeTargets.Class |\n   AttributeTargets.Constructor |\n   AttributeTargets.Field |\n   AttributeTargets.Method |\n   AttributeTargets.Property,\n   AllowMultiple = true)]\n\npublic class DeBugInfo : System.Attribute {\n   private int bugNo;\n   private string developer;\n   private string lastReview;\n   public string message;\n   \n   public DeBugInfo(int bg, string dev, string d) {\n      this.bugNo = bg;\n      this.developer = dev;\n      this.lastReview = d;\n   }\n   public int BugNo {\n      get {\n         return bugNo;\n      }\n   }\n   public string Developer {\n      get {\n         return developer;\n      }\n   }\n   public string LastReview {\n      get {\n         return lastReview;\n      }\n   }\n   public string Message {\n      get {\n         return message;\n      }\n      set {\n         message = value;\n      }\n   }\n}\n', '\n[DeBugInfo(45, ""Zara Ali"", ""12/8/2012"", Message = ""Return type mismatch"")]\n[DeBugInfo(49, ""Nuha Ali"", ""10/10/2012"", Message = ""Unused variable"")]\nclass Rectangle {\n   //member variables\n   protected double length;\n   protected double width;\n   public Rectangle(double l, double w) {\n      length = l;\n      width = w;\n   }\n   [DeBugInfo(55, ""Zara Ali"", ""19/10/2012"", Message = ""Return type mismatch"")]\n   \n   public double GetArea() {\n      return length * width;\n   }\n   [DeBugInfo(56, ""Zara Ali"", ""19/10/2012"")]\n   \n   public void Display() {\n      Console.WriteLine(""Length: {0}"", length);\n      Console.WriteLine(""Width: {0}"", width);\n      Console.WriteLine(""Area: {0}"", GetArea());\n   }\n}\n']","['\n[attribute(positional_parameters, name_parameter = value, ...)]\nelement\n', '\n[AttributeUsage (\n   validon,\n   AllowMultiple = allowmultiple,\n   Inherited = inherited\n)]\n', '\n[Conditional(\n   conditionalSymbol\n)]\n', '\n[Conditional(""DEBUG"")]\n', '\nIn Main function\nIn Function 1\nIn Function 2\n', '\n[Obsolete (\n   message\n)]\n\n[Obsolete (\n   message,\n   iserror\n)]\n', ""\n Don't use OldMethod, use NewMethod instead\n""]",[],"[""AttributeUsage|||Conditional|||Obsolete|||The parameter validon specifies the language elements on which the attribute can be placed. It is a combination of the value of an enumerator AttributeTargets. The default value is  AttributeTargets.All.|||The parameter allowmultiple (optional) provides value for the AllowMultiple property of this attribute, a Boolean value. If this is true, the attribute is multiuse. The default is false (single-use).|||The parameter inherited (optional) provides value for the Inherited property of this attribute, a Boolean value. If it is true, the attribute is inherited by derived classes. The default value is false (not inherited).|||The parameter message, is a string describing the reason why the item is obsolete and what to use instead.|||The parameter iserror, is a Boolean value. If its value is true, the compiler should treat the use of the item as an error. Default value is false (compiler generates a warning).|||Declaring a custom attribute|||Constructing the custom attribute|||Apply the custom attribute on a target program element|||Accessing Attributes Through Reflection|||The code number for the bug|||Name of the developer who identified the bug|||Date of last review of the code|||A string message for storing the developer's remarks|||""]"
30,['C# - Reflection'],"['Applications of Reflection', 'Viewing Metadata', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_attributes.htm', 'https://www.tutorialspoint.com/csharp/csharp_properties.htm', 'http://tpcg.io/h9BJka', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_attributes.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_properties.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Reflection has the following applications −', 'It allows view attribute information at runtime.', 'It allows examining various types in an assembly and instantiate these types.', 'It allows late binding to methods and properties', 'The following program demonstrates this −']","['It allows creating new types at runtime and then performs some tasks using those types.', 'We have mentioned in the preceding chapter that using reflection you can view the attribute information.', 'When it is compiled and run, it displays the name of the custom attributes attached to the class MyClass −', 'When the above code is compiled and executed, it produces the following result −']","['Reflection objects are used for obtaining type information at runtime. The classes that give access to the metadata of a running program are in the System.Reflection namespace.', 'The System.Reflection namespace contains classes that allow you to obtain information about the application and to dynamically add types, values, and objects to the application.', 'The MemberInfo object of the System.Reflection class needs to be initialized for discovering the attributes associated with a class. To do this, you define an object of the target class, as −', 'In this example, we use the DeBugInfo attribute created in the previous chapter and use reflection to read metadata in the Rectangle class.']","['\nSystem.Reflection.MemberInfo info = typeof(MyClass);\n', '\nusing System;\n\n[AttributeUsage(AttributeTargets.All)]\npublic class HelpAttribute : System.Attribute {\n   public readonly string Url;\n   \n   public string Topic   // Topic is a named parameter {\n      get {\n         return topic;\n      }\n      set {\n         topic = value;\n      }\n   }\n   public HelpAttribute(string url)   // url is a positional parameter {\n      this.Url = url;\n   }\n   private string topic;\n}\n\n[HelpAttribute(""Information on the class MyClass"")]\nclass MyClass {\n\n}\n\nnamespace AttributeAppl {\n   class Program {\n      static void Main(string[] args) {\n         System.Reflection.MemberInfo info = typeof(MyClass);\n         object[] attributes = info.GetCustomAttributes(true);\n         \n         for (int i = 0; i < attributes.Length; i++) {\n            System.Console.WriteLine(attributes[i]);\n         }\n         Console.ReadKey();\n      }\n   }\n}\n', '\nHelpAttribute\n', '\nusing System;\nusing System.Reflection;\n\nnamespace BugFixApplication {\n   //a custom attribute BugFix to be assigned to a class and its members\n   [AttributeUsage(\n      AttributeTargets.Class |\n      AttributeTargets.Constructor |\n      AttributeTargets.Field |\n      AttributeTargets.Method |\n      AttributeTargets.Property,\n      AllowMultiple = true)]\n\n   public class DeBugInfo : System.Attribute {\n      private int bugNo;\n      private string developer;\n      private string lastReview;\n      public string message;\n      \n      public DeBugInfo(int bg, string dev, string d) {\n         this.bugNo = bg;\n         this.developer = dev;\n         this.lastReview = d;\n      }\n      public int BugNo {\n         get {\n            return bugNo;\n         }\n      }\n      public string Developer {\n         get {\n            return developer;\n         }\n      }\n      public string LastReview {\n         get {\n            return lastReview;\n         }\n      }\n      public string Message {\n         get {\n            return message;\n         }\n         set {\n            message = value;\n         }\n      }\n   }\n   [DeBugInfo(45, ""Zara Ali"", ""12/8/2012"", Message = ""Return type mismatch"")]\n   [DeBugInfo(49, ""Nuha Ali"", ""10/10/2012"", Message = ""Unused variable"")]\n   \n   class Rectangle {\n      //member variables\n      protected double length;\n      protected double width;\n      \n      public Rectangle(double l, double w) {\n         length = l;\n         width = w;\n      }\n      [DeBugInfo(55, ""Zara Ali"", ""19/10/2012"", Message = ""Return type mismatch"")]\n      public double GetArea() {\n         return length * width;\n      }\n      [DeBugInfo(56, ""Zara Ali"", ""19/10/2012"")]\n      public void Display() {\n         Console.WriteLine(""Length: {0}"", length);\n         Console.WriteLine(""Width: {0}"", width);\n         Console.WriteLine(""Area: {0}"", GetArea());\n      }\n   }//end class Rectangle\n   \n   class ExecuteRectangle {\n      static void Main(string[] args) {\n         Rectangle r = new Rectangle(4.5, 7.5);\n         r.Display();\n         Type type = typeof(Rectangle);\n         \n         //iterating through the attribtues of the Rectangle class\n         foreach (Object attributes in type.GetCustomAttributes(false)) {\n            DeBugInfo dbi = (DeBugInfo)attributes;\n            \n            if (null != dbi) {\n               Console.WriteLine(""Bug no: {0}"", dbi.BugNo);\n               Console.WriteLine(""Developer: {0}"", dbi.Developer);\n               Console.WriteLine(""Last Reviewed: {0}"", dbi.LastReview);\n               Console.WriteLine(""Remarks: {0}"", dbi.Message);\n            }\n         }\n         \n         //iterating through the method attribtues\n         foreach (MethodInfo m in type.GetMethods()) {\n            \n            foreach (Attribute a in m.GetCustomAttributes(true)) {\n               DeBugInfo dbi = (DeBugInfo)a;\n               \n               if (null != dbi) {\n                  Console.WriteLine(""Bug no: {0}, for Method: {1}"", dbi.BugNo, m.Name);\n                  Console.WriteLine(""Developer: {0}"", dbi.Developer);\n                  Console.WriteLine(""Last Reviewed: {0}"", dbi.LastReview);\n                  Console.WriteLine(""Remarks: {0}"", dbi.Message);\n               }\n            }\n         }\n         Console.ReadLine();\n      }\n   }\n}\n', '\nLength: 4.5\nWidth: 7.5\nArea: 33.75\nBug No: 49\nDeveloper: Nuha Ali\nLast Reviewed: 10/10/2012\nRemarks: Unused variable\nBug No: 45\nDeveloper: Zara Ali\nLast Reviewed: 12/8/2012\nRemarks: Return type mismatch\nBug No: 55, for Method: GetArea\nDeveloper: Zara Ali\nLast Reviewed: 19/10/2012\nRemarks: Return type mismatch\nBug No: 56, for Method: Display\nDeveloper: Zara Ali\nLast Reviewed: 19/10/2012\nRemarks: \n']","['\nHelpAttribute\n', '\nLength: 4.5\nWidth: 7.5\nArea: 33.75\nBug No: 49\nDeveloper: Nuha Ali\nLast Reviewed: 10/10/2012\nRemarks: Unused variable\nBug No: 45\nDeveloper: Zara Ali\nLast Reviewed: 12/8/2012\nRemarks: Return type mismatch\nBug No: 55, for Method: GetArea\nDeveloper: Zara Ali\nLast Reviewed: 19/10/2012\nRemarks: Return type mismatch\nBug No: 56, for Method: Display\nDeveloper: Zara Ali\nLast Reviewed: 19/10/2012\nRemarks: \n']",[],['It allows view attribute information at runtime.|||It allows examining various types in an assembly and instantiate these types.|||It allows late binding to methods and properties|||It allows creating new types at runtime and then performs some tasks using those types.|||']
31,['C# - Properties'],"['Accessors', 'Example', 'Abstract Properties', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_reflection.htm', 'https://www.tutorialspoint.com/csharp/csharp_indexers.htm', 'http://tpcg.io/vL7SMG', 'http://tpcg.io/ydCyVV', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_reflection.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_indexers.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['The following example demonstrates use of properties −'],"['Properties do not name the storage locations. Instead, they have accessors that read, write, or compute their values.', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['Properties are named members of classes, structures, and interfaces. Member variables or methods in a class or structures are called Fields. Properties are an extension of fields and are accessed using the same syntax. They use accessors through which the values of the private fields can be read, written or manipulated.', 'For example, let us have a class named Student, with private fields for age, name, and code. We cannot directly access these fields from outside the class scope, but we can have properties for accessing these private fields.', 'The accessor of a property contains the executable statements that helps in getting (reading or computing) or setting (writing) the property. The accessor declarations can contain a get accessor, a set accessor, or both. For example −', 'An abstract class may have an abstract property, which should be implemented in the derived class. The following program illustrates this −']","['\n// Declare a Code property of type string:\npublic string Code {\n   get {\n      return code;\n   }\n   set {\n      code = value;\n   }\n}\n\n// Declare a Name property of type string:\npublic string Name {\n   get {\n      return name;\n   }\n   set {\n      name = value;\n   }\n}\n\n// Declare a Age property of type int:\npublic int Age { \n   get {\n      return age;\n   }\n   set {\n      age = value;\n   }\n}\n', '\nusing System;\nnamespace tutorialspoint {\n   class Student {\n      private string code = ""N.A"";\n      private string name = ""not known"";\n      private int age = 0;\n      \n      // Declare a Code property of type string:\n      public string Code {\n         get {\n            return code;\n         }\n         set {\n            code = value;\n         }\n      }\n      \n      // Declare a Name property of type string:\n      public string Name {\n         get {\n            return name;\n         }\n         set {\n            name = value;\n         }\n      }\n      \n      // Declare a Age property of type int:\n      public int Age {\n         get {\n            return age;\n         }\n         set {\n            age = value;\n         }\n      }\n      public override string ToString() {\n         return ""Code = "" + Code +"", Name = "" + Name + "", Age = "" + Age;\n      }\n   }\n   \n   class ExampleDemo {\n      public static void Main() {\n      \n         // Create a new Student object:\n         Student s = new Student();\n         \n         // Setting code, name and the age of the student\n         s.Code = ""001"";\n         s.Name = ""Zara"";\n         s.Age = 9;\n         Console.WriteLine(""Student Info: {0}"", s);\n         \n         //let us increase age\n         s.Age += 1;\n         Console.WriteLine(""Student Info: {0}"", s);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nStudent Info: Code = 001, Name = Zara, Age = 9\nStudent Info: Code = 001, Name = Zara, Age = 10\n', '\nusing System;\n\nnamespace tutorialspoint {\n   public abstract class Person {\n      public abstract string Name {\n         get;\n         set;\n      }\n      public abstract int Age {\n         get;\n         set;\n      }\n   }\n   class Student : Person {\n      private string code = ""N.A"";\n      private string name = ""N.A"";\n      private int age = 0;\n      \n      // Declare a Code property of type string:\n      public string Code {\n         get {\n            return code;\n         }\n         set {\n            code = value;\n         }\n      }\n      \n      // Declare a Name property of type string:\n      public override string Name {\n         get {\n            return name;\n         }\n         set {\n            name = value;\n         }\n      }\n      \n      // Declare a Age property of type int:\n      public override int Age {\n         get {\n            return age;\n         }\n         set {\n            age = value;\n         }\n      }\n      public override string ToString() {\n         return ""Code = "" + Code +"", Name = "" + Name + "", Age = "" + Age;\n      }\n   }\n   \n   class ExampleDemo {\n      public static void Main() {\n         // Create a new Student object:\n         Student s = new Student();\n         \n         // Setting code, name and the age of the student\n         s.Code = ""001"";\n         s.Name = ""Zara"";\n         s.Age = 9;\n         Console.WriteLine(""Student Info:- {0}"", s);\n         \n         //let us increase age\n         s.Age += 1;\n         Console.WriteLine(""Student Info:- {0}"", s);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nStudent Info: Code = 001, Name = Zara, Age = 9\nStudent Info: Code = 001, Name = Zara, Age = 10\n']","['\nStudent Info: Code = 001, Name = Zara, Age = 9\nStudent Info: Code = 001, Name = Zara, Age = 10\n', '\nStudent Info: Code = 001, Name = Zara, Age = 9\nStudent Info: Code = 001, Name = Zara, Age = 10\n']",[],[]
32,['C# - Indexers'],"['Syntax', 'Use of Indexers', 'Overloaded Indexers', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_properties.htm', 'https://www.tutorialspoint.com/csharp/csharp_delegates.htm', 'http://tpcg.io/IOtzUS', 'http://tpcg.io/cIt4xT', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_properties.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_delegates.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['A one dimensional indexer has the following syntax −', 'The following example demonstrates overloaded indexers −']","['When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['An indexer allows an object to be indexed such as an array. When you define an indexer for a class, this class behaves similar to a virtual array. You can then access the instance of this class using the array access operator ([ ]).', 'Declaration of behavior of an indexer is to some extent similar to a property. similar to the properties, you use  get and set accessors for defining an indexer. However, properties return or set a specific data member, whereas indexers returns or sets a particular value from the object instance. In other words, it breaks the instance data into smaller parts and indexes each part, gets or sets each part.', 'Defining a property involves providing a property name. Indexers are not defined with names, but with the this keyword, which refers to the object instance. The following example demonstrates the concept −', 'Indexers can be overloaded. Indexers can also be declared with multiple parameters and each parameter may be a different type. It is not necessary that the indexes have to be integers. C# allows indexes to be of other types, for example, a string.']","['\nelement-type this[int index] {\n\n   // The get accessor.\n   get {\n      // return the value specified by index\n   }\n   \n   // The set accessor.\n   set {\n      // set the value specified by index\n   }\n}\n', '\nusing System;\n\nnamespace IndexerApplication {\n   \n   class IndexedNames {\n      private string[] namelist = new string[size];\n      static public int size = 10;\n      \n      public IndexedNames() {\n         for (int i = 0; i < size; i++)\n         namelist[i] = ""N. A."";\n      }\n      public string this[int index] {\n         get {\n            string tmp;\n         \n            if( index >= 0 && index <= size-1 ) {\n               tmp = namelist[index];\n            } else {\n               tmp = """";\n            }\n            \n            return ( tmp );\n         }\n         set {\n            if( index >= 0 && index <= size-1 ) {\n               namelist[index] = value;\n            }\n         }\n      }\n      static void Main(string[] args) {\n         IndexedNames names = new IndexedNames();\n         names[0] = ""Zara"";\n         names[1] = ""Riz"";\n         names[2] = ""Nuha"";\n         names[3] = ""Asif"";\n         names[4] = ""Davinder"";\n         names[5] = ""Sunil"";\n         names[6] = ""Rubic"";\n         \n         for ( int i = 0; i < IndexedNames.size; i++ ) {\n            Console.WriteLine(names[i]);\n         }\n         Console.ReadKey();\n      }\n   }\n}\n', '\nZara\nRiz\nNuha\nAsif\nDavinder\nSunil\nRubic\nN. A.\nN. A.\nN. A.\n', '\nusing System;\n\nnamespace IndexerApplication {\n   class IndexedNames {\n      private string[] namelist = new string[size];\n      static public int size = 10;\n      \n      public IndexedNames() {\n         for (int i = 0; i < size; i++) {\n            namelist[i] = ""N. A."";\n         }\n      }\n      public string this[int index] {\n         get {\n            string tmp;\n            \n            if( index >= 0 && index <= size-1 ) {\n               tmp = namelist[index];\n            } else {\n               tmp = """";\n            }\n            \n            return ( tmp );\n         }\n         set {\n            if( index >= 0 && index <= size-1 ) {\n               namelist[index] = value;\n            }\n         }\n      }\n      \n      public int this[string name] {\n         get {\n            int index = 0;\n            \n            while(index < size) {\n               if (namelist[index] == name) {\n                return index;\n               }\n               index++;\n            }\n            return index;\n         }\n      }\n\n      static void Main(string[] args) {\n         IndexedNames names = new IndexedNames();\n         names[0] = ""Zara"";\n         names[1] = ""Riz"";\n         names[2] = ""Nuha"";\n         names[3] = ""Asif"";\n         names[4] = ""Davinder"";\n         names[5] = ""Sunil"";\n         names[6] = ""Rubic"";\n         \n         //using the first indexer with int parameter\n         for (int i = 0; i < IndexedNames.size; i++) {\n            Console.WriteLine(names[i]);\n         }\n         \n         //using the second indexer with the string parameter\n         Console.WriteLine(names[""Nuha""]);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nZara\nRiz\nNuha\nAsif\nDavinder\nSunil\nRubic\nN. A.\nN. A.\nN. A.\n2\n']","['\nelement-type this[int index] {\n\n   // The get accessor.\n   get {\n      // return the value specified by index\n   }\n   \n   // The set accessor.\n   set {\n      // set the value specified by index\n   }\n}\n', '\nZara\nRiz\nNuha\nAsif\nDavinder\nSunil\nRubic\nN. A.\nN. A.\nN. A.\n', '\nZara\nRiz\nNuha\nAsif\nDavinder\nSunil\nRubic\nN. A.\nN. A.\nN. A.\n2\n']",[],[]
33,['C# - Delegates'],"['Declaring Delegates', 'Instantiating Delegates', 'Multicasting of a Delegate', 'Using Delegates', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_indexers.htm', 'https://www.tutorialspoint.com/csharp/csharp_events.htm', 'http://tpcg.io/0MSErR', 'http://tpcg.io/TE74JO', 'http://tpcg.io/z2P2Rq', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_indexers.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_events.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['Syntax for delegate declaration is −'],"['When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['C# delegates are similar to pointers to functions, in C or C++. A delegate is a reference type variable that holds the reference to a method. The reference can be changed at runtime.', 'Delegates are especially used for implementing events and the call-back methods. All delegates are implicitly derived from the System.Delegate class.', 'Delegate declaration determines the methods that can be referenced by the delegate. A delegate can refer to a method, which has the same signature as that of the delegate.', 'The preceding delegate can be used to reference any method that has a single string parameter and returns an int type variable.', 'Once a delegate type is declared, a delegate object must be created with the new  keyword and be associated with a particular method. When creating a delegate, the argument passed to the new expression is written similar to a method call, but without the arguments to the method. For example −', 'Following example demonstrates declaration, instantiation, and use of a delegate that can be used to reference methods that take an integer parameter and returns an integer value.', 'Delegate objects can be composed using the ""+"" operator. A composed delegate calls the two delegates it was composed from. Only delegates of the same type can be composed. The ""-"" operator can be used to remove a component delegate from a composed delegate.', 'Using this property of delegates you can create an invocation list of methods that will be called when a delegate is invoked. This is called multicasting of a delegate. The following program demonstrates multicasting of a delegate −', 'The following example demonstrates the use of delegate. The delegate printString can be used to reference method that takes a string as input and returns nothing.', 'We use this delegate to call two methods, the first prints the string to the console, and the second one prints it to a file −']","['\npublic delegate int MyDelegate (string s);\n', '\ndelegate <return type> <delegate-name> <parameter list>\n', '\npublic delegate void printString(string s);\n...\nprintString ps1 = new printString(WriteToScreen);\nprintString ps2 = new printString(WriteToFile);\n', '\nusing System;\n\ndelegate int NumberChanger(int n);\nnamespace DelegateAppl {\n   \n   class TestDelegate {\n      static int num = 10;\n      \n      public static int AddNum(int p) {\n         num += p;\n         return num;\n      }\n      public static int MultNum(int q) {\n         num *= q;\n         return num;\n      }\n      public static int getNum() {\n         return num;\n      }\n      static void Main(string[] args) {\n         //create delegate instances\n         NumberChanger nc1 = new NumberChanger(AddNum);\n         NumberChanger nc2 = new NumberChanger(MultNum);\n         \n         //calling the methods using the delegate objects\n         nc1(25);\n         Console.WriteLine(""Value of Num: {0}"", getNum());\n         nc2(5);\n         Console.WriteLine(""Value of Num: {0}"", getNum());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nValue of Num: 35\nValue of Num: 175\n', '\nusing System;\n\ndelegate int NumberChanger(int n);\nnamespace DelegateAppl {\n   class TestDelegate {\n      static int num = 10;\n      \n      public static int AddNum(int p) {\n         num += p;\n         return num;\n      }\n      public static int MultNum(int q) {\n         num *= q;\n         return num;\n      }\n      public static int getNum() {\n         return num;\n      }\n      static void Main(string[] args) {\n         //create delegate instances\n         NumberChanger nc;\n         NumberChanger nc1 = new NumberChanger(AddNum);\n         NumberChanger nc2 = new NumberChanger(MultNum);\n         \n         nc = nc1;\n         nc += nc2;\n         \n         //calling multicast\n         nc(5);\n         Console.WriteLine(""Value of Num: {0}"", getNum());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nValue of Num: 75\n', '\nusing System;\nusing System.IO;\n\nnamespace DelegateAppl {\n\n   class PrintString {\n      static FileStream fs;\n      static StreamWriter sw;\n      \n      // delegate declaration\n      public delegate void printString(string s);\n\n      // this method prints to the console\n      public static void WriteToScreen(string str) {\n         Console.WriteLine(""The String is: {0}"", str);\n      }\n      \n      //this method prints to a file\n      public static void WriteToFile(string s) {\n         fs = new FileStream(""c:\\\\message.txt"",\n         FileMode.Append, FileAccess.Write);\n         sw = new StreamWriter(fs);\n         sw.WriteLine(s);\n         sw.Flush();\n         sw.Close();\n         fs.Close();\n      }\n      \n      // this method takes the delegate as parameter and uses it to\n      // call the methods as required\n      public static void sendString(printString ps) {\n         ps(""Hello World"");\n      }\n      \n      static void Main(string[] args) {\n         printString ps1 = new printString(WriteToScreen);\n         printString ps2 = new printString(WriteToFile);\n         sendString(ps1);\n         sendString(ps2);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nThe String is: Hello World\n']","['\npublic delegate int MyDelegate (string s);\n', '\ndelegate <return type> <delegate-name> <parameter list>\n', '\npublic delegate void printString(string s);\n...\nprintString ps1 = new printString(WriteToScreen);\nprintString ps2 = new printString(WriteToFile);\n', '\nValue of Num: 35\nValue of Num: 175\n', '\nValue of Num: 75\n', '\nThe String is: Hello World\n']",[],[]
34,['C# - Events'],"['Using Delegates with Events', 'Declaring Events', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_delegates.htm', 'https://www.tutorialspoint.com/csharp/csharp_collections.htm', 'http://tpcg.io/abO6Dv', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_delegates.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_collections.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['then, declare the event using the event keyword −']","['To declare an event inside a class, first of all, you must declare a delegate type for the even as:', 'When the above code is compiled and executed, it produces the following result −']","['Events are user actions such as key press, clicks, mouse movements, etc., or some occurrence such as system generated notifications. Applications need to respond to events when they occur. For example, interrupts. Events are used for inter-process communication.', 'The events are declared and raised in a class and associated with the event handlers using delegates within the same class or some other class. The class containing the event is used to publish the event. This is called the publisher class. Some other class that accepts this event is called the subscriber  class. Events use the publisher-subscriber model.', 'A publisher is an object that contains the definition of the event and the delegate. The event-delegate association is also defined in this object. A publisher class object invokes the event and it is notified to other objects.', 'A subscriber is an object that accepts the event and provides an event handler. The delegate in the publisher class invokes the method (event handler) of the subscriber class.', 'The preceding code defines a delegate named BoilerLogHandler and an event named BoilerEventLog, which invokes the delegate when it is raised.']","['\npublic delegate string BoilerLogHandler(string str);\n', '\nevent BoilerLogHandler BoilerEventLog;\n', '\nusing System;\n\nnamespace SampleApp {\n   public delegate string MyDel(string str);\n\t\n   class EventProgram {\n      event MyDel MyEvent;\n\t\t\n      public EventProgram() {\n         this.MyEvent += new MyDel(this.WelcomeUser);\n      }\n      public string WelcomeUser(string username) {\n         return ""Welcome "" + username;\n      }\n      static void Main(string[] args) {\n         EventProgram obj1 = new EventProgram();\n         string result = obj1.MyEvent(""Tutorials Point"");\n         Console.WriteLine(result);\n      }\n   }\n}\n', '\nWelcome Tutorials Point\n']","['\npublic delegate string BoilerLogHandler(string str);\n', '\nevent BoilerLogHandler BoilerEventLog;\n', '\nWelcome Tutorials Point\n']",[],[]
35,['C# - Collections'],"['Various Collection Classes and Their Usage', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_events.htm', 'https://www.tutorialspoint.com/csharp/csharp_generics.htm', 'https://www.tutorialspoint.com/csharp/csharp_arraylist.htm', 'https://www.tutorialspoint.com/csharp/csharp_hashtable.htm', 'https://www.tutorialspoint.com/csharp/csharp_sortedlist.htm', 'https://www.tutorialspoint.com/csharp/csharp_stack.htm', 'https://www.tutorialspoint.com/csharp/csharp_queue.htm', 'https://www.tutorialspoint.com/csharp/csharp_bitarray.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_events.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_generics.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['It represents ordered collection of an object that can be indexed individually.', 'It uses a key to access the elements in the collection.', 'It uses a key as well as an index to access the items in a list.', 'It represents a last-in, first out collection of object.', 'It represents a first-in, first out collection of object.', 'It represents an array of the binary representation using the values 1 and 0.']",[],"['Collection classes are specialized classes for data storage and retrieval. These classes provide support for stacks, queues, lists, and hash tables. Most collection classes implement the same interfaces.', 'Collection classes serve various purposes, such as allocating memory dynamically to elements and accessing a list of items on the basis of an index etc. These classes create collections of objects of the Object class, which is the base class for all data types in C#.', 'The following are the various commonly used classes of the System.Collection namespace. Click the following links to check their detail.', 'It is basically an alternative to an array. However, unlike array you can add and remove items from a list at a specified position using an index and the array resizes itself automatically. It also allows dynamic memory allocation, adding, searching and sorting items in the list.', 'A hash table is used when you need to access elements by using key, and you can identify a useful key value. Each item in the hash table has a key/value pair. The key is used to access the items in the collection.', 'A sorted list is a combination of an array and a hash table. It contains a list of items that can be accessed using a key or an index. If you access items using an index, it is an ArrayList, and if you access items using a key , it is a Hashtable. The collection of items is always sorted by the key value.', 'It is used when you need a last-in, first-out access of items. When you add an item in the list, it is called pushing the item and when you remove it, it is called popping the item.', 'It is used when you need a first-in, first-out access of items. When you add an item in the list, it is called enqueue and when you remove an item, it is called deque.', 'It is used when you need to store the bits but do not know the number of bits in advance. You can access items from the BitArray collection by using an integer index, which starts from zero.']",[],[],"['Sr.No.|||Class & Description and Useage&&&1|||ArrayList|||It represents ordered collection of an object that can be indexed individually.|||It is basically an alternative to an array. However, unlike array you can add and remove items from a list at a specified position using an index and the array resizes itself automatically. It also allows dynamic memory allocation, adding, searching and sorting items in the list.|||&&&2|||Hashtable|||It uses a key to access the elements in the collection.|||A hash table is used when you need to access elements by using key, and you can identify a useful key value. Each item in the hash table has a key/value pair. The key is used to access the items in the collection.|||&&&3|||SortedList|||It uses a key as well as an index to access the items in a list.|||A sorted list is a combination of an array and a hash table. It contains a list of items that can be accessed using a key or an index. If you access items using an index, it is an ArrayList, and if you access items using a key , it is a Hashtable. The collection of items is always sorted by the key value.|||&&&4|||Stack|||It represents a last-in, first out collection of object.|||It is used when you need a last-in, first-out access of items. When you add an item in the list, it is called pushing the item and when you remove it, it is called popping the item.|||&&&5|||Queue|||It represents a first-in, first out collection of object.|||It is used when you need a first-in, first-out access of items. When you add an item in the list, it is called enqueue and when you remove an item, it is called deque.|||&&&6|||BitArray|||It represents an array of the binary representation using the values 1 and 0.|||It is used when you need to store the bits but do not know the number of bits in advance. You can access items from the BitArray collection by using an integer index, which starts from zero.|||']",[]
36,['C# - Generics'],"['Features of Generics', 'Generic Methods', 'Generic Delegates', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_collections.htm', 'https://www.tutorialspoint.com/csharp/csharp_anonymous_methods.htm', 'http://tpcg.io/kVRudN', 'http://tpcg.io/nDEsCl', 'http://tpcg.io/1AStoT', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_collections.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_anonymous_methods.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Generics is a technique that enriches your programs in the following ways −', 'It helps you to maximize code reuse, type safety, and performance.', 'You can define a generic delegate with type parameters. For example −', 'The following example shows use of this delegate −']","['When the above code is compiled and executed, it produces the following result −', 'You can create your own generic interfaces, classes, methods, events, and delegates.', 'You may create generic classes constrained to enable access to methods on particular data types.', 'You may get information on the types used in a generic data type at run-time by means of reflection.', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['Generics allow you to define the specification of the data type of programming elements in a class or a method, until it is actually used in the program. In other words, generics allow you to write a class or method that can work with any data type.', 'You write the specifications for the class or the method, with substitute parameters for data types. When the compiler encounters a constructor for the class or a function call for the method, it generates code to handle the specific data type. A simple example would help understanding the concept −', 'You can create generic collection classes. The .NET Framework class library contains several new generic collection classes in the System.Collections.Generic namespace. You may use these generic collection classes instead of the collection classes in the System.Collections namespace.', 'In the previous example, we have used a generic class; we can declare a generic method with a type parameter. The following program illustrates the concept −']","['\nusing System;\nusing System.Collections.Generic;\n\nnamespace GenericApplication {\n   public class MyGenericArray<T> {\n      private T[] array;\n      \n      public MyGenericArray(int size) {\n         array = new T[size + 1];\n      }\n      public T getItem(int index) {\n         return array[index];\n      }\n      public void setItem(int index, T value) {\n         array[index] = value;\n      }\n   }\n   class Tester {\n      static void Main(string[] args) {\n         \n         //declaring an int array\n         MyGenericArray<int> intArray = new MyGenericArray<int>(5);\n         \n         //setting values\n         for (int c = 0; c < 5; c++) {\n            intArray.setItem(c, c*5);\n         }\n         \n         //retrieving the values\n         for (int c = 0; c < 5; c++) {\n            Console.Write(intArray.getItem(c) + "" "");\n         }\n         \n         Console.WriteLine();\n         \n         //declaring a character array\n         MyGenericArray<char> charArray = new MyGenericArray<char>(5);\n         \n         //setting values\n         for (int c = 0; c < 5; c++) {\n            charArray.setItem(c, (char)(c+97));\n         }\n         \n         //retrieving the values\n         for (int c = 0; c< 5; c++) {\n            Console.Write(charArray.getItem(c) + "" "");\n         }\n         Console.WriteLine();\n         \n         Console.ReadKey();\n      }\n   }\n}\n', '\n0 5 10 15 20\na b c d e\n', '\nusing System;\nusing System.Collections.Generic;\n\nnamespace GenericMethodAppl {\n   class Program {\n      static void Swap<T>(ref T lhs, ref T rhs) {\n         T temp;\n         temp = lhs;\n         lhs = rhs;\n         rhs = temp;\n      }\n      static void Main(string[] args) {\n         int a, b;\n         char c, d;\n         a = 10;\n         b = 20;\n         c = \'I\';\n         d = \'V\';\n         \n         //display values before swap:\n         Console.WriteLine(""Int values before calling swap:"");\n         Console.WriteLine(""a = {0}, b = {1}"", a, b);\n         Console.WriteLine(""Char values before calling swap:"");\n         Console.WriteLine(""c = {0}, d = {1}"", c, d);\n         \n         //call swap\n         Swap<int>(ref a, ref b);\n         Swap<char>(ref c, ref d);\n         \n         //display values after swap:\n         Console.WriteLine(""Int values after calling swap:"");\n         Console.WriteLine(""a = {0}, b = {1}"", a, b);\n         Console.WriteLine(""Char values after calling swap:"");\n         Console.WriteLine(""c = {0}, d = {1}"", c, d);\n         \n         Console.ReadKey();\n      }\n   }\n}\n', '\nInt values before calling swap:\na = 10, b = 20\nChar values before calling swap:\nc = I, d = V\nInt values after calling swap:\na = 20, b = 10\nChar values after calling swap:\nc = V, d = I\n', '\ndelegate T NumberChanger<T>(T n);\n', '\nusing System;\nusing System.Collections.Generic;\n\ndelegate T NumberChanger<T>(T n);\nnamespace GenericDelegateAppl {\n   class TestDelegate {\n      static int num = 10;\n      \n      public static int AddNum(int p) {\n         num += p;\n         return num;\n      }\n      public static int MultNum(int q) {\n         num *= q;\n         return num;\n      }\n      public static int getNum() {\n         return num;\n      }\n      static void Main(string[] args) {\n         //create delegate instances\n         NumberChanger<int> nc1 = new NumberChanger<int>(AddNum);\n         NumberChanger<int> nc2 = new NumberChanger<int>(MultNum);\n         \n         //calling the methods using the delegate objects\n         nc1(25);\n         Console.WriteLine(""Value of Num: {0}"", getNum());\n         \n         nc2(5);\n         Console.WriteLine(""Value of Num: {0}"", getNum());\n         Console.ReadKey();\n      }\n   }\n}\n', '\nValue of Num: 35\nValue of Num: 175\n']","['\n0 5 10 15 20\na b c d e\n', '\nInt values before calling swap:\na = 10, b = 20\nChar values before calling swap:\nc = I, d = V\nInt values after calling swap:\na = 20, b = 10\nChar values after calling swap:\nc = V, d = I\n', '\ndelegate T NumberChanger<T>(T n);\n', '\nValue of Num: 35\nValue of Num: 175\n']",[],"['It helps you to maximize code reuse, type safety, and performance.|||You can create generic collection classes. The .NET Framework class library contains several new generic collection classes in the System.Collections.Generic namespace. You may use these generic collection classes instead of the collection classes in the System.Collections namespace.|||You can create your own generic interfaces, classes, methods, events, and delegates.|||You may create generic classes constrained to enable access to methods on particular data types.|||You may get information on the types used in a generic data type at run-time by means of reflection.|||']"
37,['C# - Anonymous Methods'],"['Writing an Anonymous Method', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_generics.htm', 'https://www.tutorialspoint.com/csharp/csharp_unsafe_codes.htm', 'http://tpcg.io/SLDeb5', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_generics.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_unsafe_codes.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']",['The following example demonstrates the concept −'],"['Anonymous methods are declared with the creation of the delegate instance, with a delegate keyword. For example,', 'The code block Console.WriteLine(""Anonymous Method: {0}"", x); is the body of the anonymous method.', 'When the above code is compiled and executed, it produces the following result −']","['We discussed that delegates are used to reference any methods that has the same signature as that of the delegate. In other words, you can call a method that can be referenced by a delegate using that delegate object.', 'Anonymous methods provide a technique to pass a code block as a delegate parameter. Anonymous methods are the methods without a name, just the body.', 'You need not specify the return type in an anonymous method; it is inferred from the return statement inside the method body.', 'The delegate could be called both with anonymous methods as well as named methods in the same way, i.e., by passing the method parameters to the delegate object.']","['\ndelegate void NumberChanger(int n);\n...\nNumberChanger nc = delegate(int x) {\n   Console.WriteLine(""Anonymous Method: {0}"", x);\n};\n', '\nnc(10);\n', '\nusing System;\n\ndelegate void NumberChanger(int n);\nnamespace DelegateAppl {\n   class TestDelegate {\n      static int num = 10;\n      \n      public static void AddNum(int p) {\n         num += p;\n         Console.WriteLine(""Named Method: {0}"", num);\n      }\n      public static void MultNum(int q) {\n         num *= q;\n         Console.WriteLine(""Named Method: {0}"", num);\n      }\n      public static int getNum() {\n         return num;\n      }\n      static void Main(string[] args) {\n         //create delegate instances using anonymous method\n         NumberChanger nc = delegate(int x) {\n            Console.WriteLine(""Anonymous Method: {0}"", x);\n         };\n         \n         //calling the delegate using the anonymous method \n         nc(10);\n         \n         //instantiating the delegate using the named methods \n         nc =  new NumberChanger(AddNum);\n         \n         //calling the delegate using the named methods \n         nc(5);\n         \n         //instantiating the delegate using another named methods \n         nc =  new NumberChanger(MultNum);\n         \n         //calling the delegate using the named methods \n         nc(2);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nAnonymous Method: 10\nNamed Method: 15\nNamed Method: 30\n']","['\ndelegate void NumberChanger(int n);\n...\nNumberChanger nc = delegate(int x) {\n   Console.WriteLine(""Anonymous Method: {0}"", x);\n};\n', '\nnc(10);\n', '\nAnonymous Method: 10\nNamed Method: 15\nNamed Method: 30\n']",[],[]
38,['C# - Unsafe Codes'],"['Pointers', 'Retrieving the Data Value Using a Pointer', 'Passing Pointers as Parameters to Methods', 'Accessing Array Elements Using a Pointer', 'Compiling Unsafe Code', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_anonymous_methods.htm', 'https://www.tutorialspoint.com/csharp/csharp_multithreading.htm', 'https://www.tutorialspoint.com/compile_csharp_online.php', 'https://www.tutorialspoint.com/cprogramming/c_pointers.htm', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_anonymous_methods.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_multithreading.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['The general form of a pointer declaration is −', 'Following are valid pointer declarations −', 'The following example demonstrates this −', 'Select the option ""Allow unsafe code"".']","['The following example illustrates use of pointers in C#, using the unsafe modifier −', 'When the above code wass compiled and executed, it produces the following result −', 'When the above code was compiled and executed, it produces the following result −', 'You can pass a pointer variable to a method as parameter. The following example illustrates this −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code was compiled and executed, it produces the following result −', 'For compiling unsafe code, you have to specify the /unsafe command-line switch with command-line compiler.', 'For example, to compile a program named prog1.cs containing unsafe code, from command line, give the command −', 'If you are using Visual Studio IDE then you need to enable use of unsafe code in the project properties.', 'Open project properties by double clicking the properties node in the Solution Explorer.']","['C# allows using pointer variables in a function of code block when it is marked by the unsafe modifier. The unsafe code or the unmanaged code is a code block that uses a pointer variable.', 'Note − To execute the programs mentioned in this chapter at codingground, please set compilation option in Project >> Compile Options  >> Compilation Command to', 'A pointer is a variable whose value is the address of another variable i.e., the direct address of the memory location. similar to any variable or constant, you must declare a pointer before you can use it to store any variable address.', 'Instead of declaring an entire method as unsafe, you can also declare a part of the code as unsafe. The example in the following section shows this.', 'You can retrieve the data stored at the located referenced by the pointer variable, using the ToString() method. The following example demonstrates this −', ""In C#, an array name and a pointer to a data type same as the array data, are not the same variable type. For example, int *p and int[] p, are not same type. You can increment the pointer variable p because it is not fixed in memory but an array address is fixed in memory, and you can't increment that."", 'Therefore, if you need to access an array data using a pointer variable, as we traditionally do in C, or C++ ( please check: C Pointers), you need to fix the pointer using the fixed keyword.']","['\ntype *var-name;\n', '\nint    *ip;    /* pointer to an integer */\ndouble *dp;    /* pointer to a double */\nfloat  *fp;    /* pointer to a float */\nchar   *ch     /* pointer to a character */\n', '\nusing System;\n\nnamespace UnsafeCodeApplication {\n   class Program {\n      static unsafe void Main(string[] args) {\n         int var = 20;\n         int* p = &var\n         \n         Console.WriteLine(""Data is: {0} "",  var);\n         Console.WriteLine(""Address is: {0}"",  (int)p);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nData is: 20\nAddress is: 99215364\n', '\nusing System;\n\nnamespace UnsafeCodeApplication {\n   class Program {\n      public static void Main() {\n         unsafe {\n            int var = 20;\n            int* p = &var\n            \n            Console.WriteLine(""Data is: {0} "" , var);\n            Console.WriteLine(""Data is: {0} "" , p->ToString());\n            Console.WriteLine(""Address is: {0} "" , (int)p);\n         }\n         Console.ReadKey();\n      }\n   }\n}\n', '\nData is: 20\nData is: 20\nAddress is: 77128984\n', '\nusing System;\n\nnamespace UnsafeCodeApplication {\n   class TestPointer {\n      public unsafe void swap(int* p, int *q) {\n         int temp = *p;\n         *p = *q;\n         *q = temp;\n      }\n      public unsafe static void Main() {\n         TestPointer p = new TestPointer();\n         int var1 = 10;\n         int var2 = 20;\n         int* x = &var1\n         int* y = &var2\n         \n         Console.WriteLine(""Before Swap: var1:{0}, var2: {1}"", var1, var2);\n         p.swap(x, y);\n\n         Console.WriteLine(""After Swap: var1:{0}, var2: {1}"", var1, var2);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nBefore Swap: var1: 10, var2: 20\nAfter Swap: var1: 20, var2: 10\n', '\nusing System;\n\nnamespace UnsafeCodeApplication {\n   class TestPointer {\n      public unsafe static void Main() {\n         int[]  list = {10, 100, 200};\n         fixed(int *ptr = list)\n         \n         /* let us have array address in pointer */\n         for ( int i = 0; i < 3; i++) {\n            Console.WriteLine(""Address of list[{0}]={1}"",i,(int)(ptr + i));\n            Console.WriteLine(""Value of list[{0}]={1}"", i, *(ptr + i));\n         }\n         \n         Console.ReadKey();\n      }\n   }\n}\n', '\nAddress of list[0] = 31627168\nValue of list[0] = 10\nAddress of list[1] = 31627172\nValue of list[1] = 100\nAddress of list[2] = 31627176\nValue of list[2] = 200\n', '\ncsc /unsafe prog1.cs\n']","['\ntype *var-name;\n', '\nint    *ip;    /* pointer to an integer */\ndouble *dp;    /* pointer to a double */\nfloat  *fp;    /* pointer to a float */\nchar   *ch     /* pointer to a character */\n', '\nData is: 20\nAddress is: 99215364\n', '\nData is: 20\nData is: 20\nAddress is: 77128984\n', '\nBefore Swap: var1: 10, var2: 20\nAfter Swap: var1: 20, var2: 10\n', '\nAddress of list[0] = 31627168\nValue of list[0] = 10\nAddress of list[1] = 31627172\nValue of list[1] = 100\nAddress of list[2] = 31627176\nValue of list[2] = 200\n']",[],"['Open project properties by double clicking the properties node in the Solution Explorer.|||Click on the Build tab.|||Select the option ""Allow unsafe code"".|||']"
39,['C# - Multithreading'],"['Thread Life Cycle', 'The Main Thread', 'Properties and Methods of the Thread Class', 'Creating Threads', 'Managing Threads', 'Destroying Threads', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/csharp/csharp_unsafe_codes.htm', 'https://www.tutorialspoint.com/csharp/csharp_questions_answers.htm', 'http://tpcg.io/RG4pez', 'http://tpcg.io/JZqjry', 'http://tpcg.io/abFQ14', 'http://tpcg.io/kwJreN', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/profile/raja_biswas', 'https://www.tutorialspoint.com/2d_games_development_using_unity_and_chash/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/profile/trevoir_williams', 'https://www.tutorialspoint.com/chash_console_and_windows_forms_development_with_linq_and_ado_net/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/profile/peter_jepson', 'https://www.tutorialspoint.com/fixing_common_errors_in_unity_chash/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/profile/ebenezer_ogbu', 'https://www.tutorialspoint.com/asp_net_core_and_chash_rest_api_with_real_world_projects/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/profile/arnold_higuit', 'https://www.tutorialspoint.com/autocad_programming_using_chash_net_beginner_course/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/profile/eric_frick', 'https://www.tutorialspoint.com/the_beginnerandhash039_s_guide_to_chash/index.asp', 'https://www.tutorialspoint.com/csharp/csharp_unsafe_codes.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/csharp/csharp_questions_answers.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2281/course_2281_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2913/course_2913_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3062/course_3062_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3264/course_3264_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3270/course_3270_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/3333/course_3333_image.png']","['Following are the various states in the life cycle of a thread −', 'The Not Runnable State − A thread is not executable, when', 'The following program demonstrates main thread execution −', 'Gets the current context in which the thread is executing.', 'Gets or sets the culture for the current thread.', ""Gets or sets the thread's current principal (for role-based security)."", 'Gets a value indicating the execution status of the current thread.', 'Gets or sets a value indicating whether or not a thread is a background thread.', 'Gets a unique identifier for the current managed thread.', 'Gets or sets the name of the thread.', 'Gets or sets a value indicating the scheduling priority of a thread.', 'Gets a value containing the states of the current thread.', 'public static LocalDataStoreSlot AllocateDataSlot()', 'public static LocalDataStoreSlot AllocateNamedDataSlot(string name)', 'public static void BeginCriticalRegion()', 'public static void BeginThreadAffinity()', 'public static void EndCriticalRegion()', 'public static void EndThreadAffinity()', 'public static void FreeNamedDataSlot(string name)', 'public static Object GetData(LocalDataStoreSlot slot)', 'Returns the current domain in which the current thread is running.', 'public static AppDomain GetDomainID()', 'Returns a unique application domain identifier', 'public static LocalDataStoreSlot GetNamedDataSlot(string name)', 'Interrupts a thread that is in the WaitSleepJoin thread state.', 'Cancels an Abort requested for the current thread.', 'public static void SetData(LocalDataStoreSlot slot, Object data)', 'public static void Sleep(int millisecondsTimeout)', 'Makes the thread pause for a period of time.', 'public static void SpinWait(int iterations)', 'Causes a thread to wait the number of times defined by the iterations parameter', 'public static byte VolatileRead(ref byte address)', 'public static double VolatileRead(ref double address)', 'public static int VolatileRead(ref int address)', 'public static Object VolatileRead(ref Object address)', 'public static void VolatileWrite(ref byte address,byte value)', 'public static void VolatileWrite(ref double address, double value)', 'public static void VolatileWrite(ref int address, int value)', 'public static void VolatileWrite(ref Object address, Object value)', 'The following program demonstrates the concept −', 'The Thread class provides various methods for managing threads.', 'The Abort() method is used for destroying threads.', 'The following program illustrates this −']","['The Ready State − It is the situation when the thread is ready to run and waiting CPU cycle.', 'The Dead State − It is the situation when the thread completes execution or is aborted.', 'When the above code is compiled and executed, it produces the following result −', 'The following table shows some most commonly used properties of the Thread class −', 'Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run-time.', 'Gets an ExecutionContext object that contains information about the various contexts of the current thread.', 'Gets a value indicating whether or not a thread belongs to the managed thread pool.', 'The following table shows some of the most commonly used methods of the Thread class −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −', 'When the above code is compiled and executed, it produces the following result −']","['A thread is defined as the execution path of a program. Each thread defines a unique flow of control. If your application involves complicated and time consuming operations, then it is often helpful to set different execution paths or threads, with each thread performing a particular job.', 'Threads are lightweight processes. One common example of use of thread is implementation of concurrent programming by modern operating systems. Use of threads saves wastage of CPU cycle and increase efficiency of an application.', 'So far we wrote the programs where a single thread runs as a single process which is the running instance of the application. However, this way the application can perform one job at a time. To make it execute more than one task at a time, it could be divided into smaller threads.', 'The life cycle of a thread starts when an object of the System.Threading.Thread class is created and ends when the thread is terminated or completes execution.', 'The Unstarted State − It is the situation when the instance of the thread is created but the Start method is not called.', 'In C#, the System.Threading.Thread class is used for working with threads. It allows creating and accessing individual threads in a multithreaded application. The first thread to be executed in a process is called the main thread.', 'When a C# program starts execution, the main thread is automatically created. The threads created using the Thread class are called the child threads of the main thread. You can access a thread using the CurrentThread property of the Thread class.', 'Raises a ThreadAbortException in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.', 'Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.', 'Allocates a named data slot on all threads. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.', 'Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.', 'Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.', 'Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.', 'Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.', 'Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.', ""Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead."", 'Looks up a named data slot. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.', 'Blocks the calling thread until a thread terminates, while continuing to perform standard COM and SendMessage pumping. This method has different overloaded forms.', 'Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to MemoryBarrier execute after memory accesses that follow the call to MemoryBarrier.', ""Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the ThreadStaticAttribute attribute instead."", 'Reads the value of a field. The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache. This method has different overloaded forms. Only some are given above.', 'Writes a value to a field immediately, so that the value is visible to all processors in the computer. This method has different overloaded forms. Only some are given above.', 'Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.', 'Threads are created by extending the Thread class. The extended Thread class then calls the Start() method to begin the child thread execution.', 'The following example demonstrates the use of the sleep() method for making a thread pause for a specific period of time.', 'The runtime aborts the thread by throwing a ThreadAbortException. This exception cannot be caught, the control is sent to the finally block, if any.']","['\nusing System;\nusing System.Threading;\n\nnamespace MultithreadingApplication {\n   class MainThreadProgram {\n      static void Main(string[] args) {\n         Thread th = Thread.CurrentThread;\n         th.Name = ""MainThread"";\n         \n         Console.WriteLine(""This is {0}"", th.Name);\n         Console.ReadKey();\n      }\n   }\n}\n', '\nThis is MainThread\n', '\nusing System;\nusing System.Threading;\n\nnamespace MultithreadingApplication {\n   class ThreadCreationProgram {\n      public static void CallToChildThread() {\n         Console.WriteLine(""Child thread starts"");\n      }\n      static void Main(string[] args) {\n         ThreadStart childref = new ThreadStart(CallToChildThread);\n         Console.WriteLine(""In Main: Creating the Child thread"");\n         Thread childThread = new Thread(childref);\n         childThread.Start();\n         Console.ReadKey();\n      }\n   }\n}\n', '\nIn Main: Creating the Child thread\nChild thread starts\n', '\nusing System;\nusing System.Threading;\n\nnamespace MultithreadingApplication {\n   class ThreadCreationProgram {\n      public static void CallToChildThread() {\n         Console.WriteLine(""Child thread starts"");\n         \n         // the thread is paused for 5000 milliseconds\n         int sleepfor = 5000; \n         \n         Console.WriteLine(""Child Thread Paused for {0} seconds"", sleepfor / 1000);\n         Thread.Sleep(sleepfor);\n         Console.WriteLine(""Child thread resumes"");\n      }\n      \n      static void Main(string[] args) {\n         ThreadStart childref = new ThreadStart(CallToChildThread);\n         Console.WriteLine(""In Main: Creating the Child thread"");\n         \n         Thread childThread = new Thread(childref);\n         childThread.Start();\n         Console.ReadKey();\n      }\n   }\n}\n', '\nIn Main: Creating the Child thread\nChild thread starts\nChild Thread Paused for 5 seconds\nChild thread resumes\n', '\nusing System;\nusing System.Threading;\n\nnamespace MultithreadingApplication {\n   class ThreadCreationProgram {\n      public static void CallToChildThread() {\n         try {\n            Console.WriteLine(""Child thread starts"");\n            \n            // do some work, like counting to 10\n            for (int counter = 0; counter <= 10; counter++) {\n               Thread.Sleep(500);\n               Console.WriteLine(counter);\n            }\n            \n            Console.WriteLine(""Child Thread Completed"");\n         } catch (ThreadAbortException e) {\n            Console.WriteLine(""Thread Abort Exception"");\n         } finally {\n            Console.WriteLine(""Couldn\'t catch the Thread Exception"");\n         }\n      }\n      static void Main(string[] args) {\n         ThreadStart childref = new ThreadStart(CallToChildThread);\n         Console.WriteLine(""In Main: Creating the Child thread"");\n         \n         Thread childThread = new Thread(childref);\n         childThread.Start();\n         \n         //stop the main thread for some time\n         Thread.Sleep(2000);\n         \n         //now abort the child\n         Console.WriteLine(""In Main: Aborting the Child thread"");\n         \n         childThread.Abort();\n         Console.ReadKey();\n      }\n   }\n}\n', ""\nIn Main: Creating the Child thread\nChild thread starts\n0\n1\n2\nIn Main: Aborting the Child thread\nThread Abort Exception\nCouldn't catch the Thread Exception \n""]","['\nThis is MainThread\n', '\nIn Main: Creating the Child thread\nChild thread starts\n', '\nIn Main: Creating the Child thread\nChild thread starts\nChild Thread Paused for 5 seconds\nChild thread resumes\n', ""\nIn Main: Creating the Child thread\nChild thread starts\n0\n1\n2\nIn Main: Aborting the Child thread\nThread Abort Exception\nCouldn't catch the Thread Exception \n""]","[""Sr.No.|||Property & Description&&&1|||CurrentContext|||Gets the current context in which the thread is executing.&&&2|||CurrentCulture|||Gets or sets the culture for the current thread.&&&3|||CurrentPrinciple|||Gets or sets the thread's current principal (for role-based security).&&&4|||CurrentThread|||Gets the currently running thread.&&&5|||CurrentUICulture|||Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run-time.&&&6|||ExecutionContext|||Gets an ExecutionContext object that contains information about the various contexts of the current thread.&&&7|||IsAlive|||Gets a value indicating the execution status of the current thread.&&&8|||IsBackground|||Gets or sets a value indicating whether or not a thread is a background thread.&&&9|||IsThreadPoolThread|||Gets a value indicating whether or not a thread belongs to the managed thread pool.&&&10|||ManagedThreadId|||Gets a unique identifier for the current managed thread.&&&11|||Name|||Gets or sets the name of the thread.&&&12|||Priority|||Gets or sets a value indicating the scheduling priority of a thread.&&&13|||ThreadState|||Gets a value containing the states of the current thread."", ""Sr.No.|||Method & Description&&&1|||public void Abort()|||Raises a ThreadAbortException in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.|||&&&2|||public static LocalDataStoreSlot AllocateDataSlot()|||Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.|||&&&3|||public static LocalDataStoreSlot AllocateNamedDataSlot(string name)|||Allocates a named data slot on all threads. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.|||&&&4|||public static void BeginCriticalRegion()|||Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.|||&&&5|||public static void BeginThreadAffinity()|||Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.|||&&&6|||public static void EndCriticalRegion()|||Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.|||&&&7|||public static void EndThreadAffinity()|||Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.|||&&&8|||public static void FreeNamedDataSlot(string name)|||Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.|||&&&9|||public static Object GetData(LocalDataStoreSlot slot)|||Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.|||&&&10|||public static AppDomain GetDomain()|||Returns the current domain in which the current thread is running.|||&&&11|||public static AppDomain GetDomainID()|||Returns a unique application domain identifier|||&&&12|||public static LocalDataStoreSlot GetNamedDataSlot(string name)|||Looks up a named data slot. For better performance, use fields that are marked with the ThreadStaticAttribute attribute instead.|||&&&13|||public void Interrupt()|||Interrupts a thread that is in the WaitSleepJoin thread state.|||&&&14|||public void Join()|||Blocks the calling thread until a thread terminates, while continuing to perform standard COM and SendMessage pumping. This method has different overloaded forms.|||&&&15|||public static void MemoryBarrier()|||Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to MemoryBarrier execute after memory accesses that follow the call to MemoryBarrier.|||&&&16|||public static void ResetAbort()|||Cancels an Abort requested for the current thread.|||&&&17|||public static void SetData(LocalDataStoreSlot slot, Object data)|||Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the ThreadStaticAttribute attribute instead.|||&&&18|||public void Start()|||Starts a thread.|||&&&19|||public static void Sleep(int millisecondsTimeout)|||Makes the thread pause for a period of time.|||&&&20|||public static void SpinWait(int iterations)|||Causes a thread to wait the number of times defined by the iterations parameter|||&&&21|||public static byte VolatileRead(ref byte address)|||public static double VolatileRead(ref double address)|||public static int VolatileRead(ref int address)|||public static Object VolatileRead(ref Object address)|||Reads the value of a field. The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache. This method has different overloaded forms. Only some are given above.|||&&&22|||public static void VolatileWrite(ref byte address,byte value)|||public static void VolatileWrite(ref double address, double value)|||public static void VolatileWrite(ref int address, int value)|||public static void VolatileWrite(ref Object address, Object value)|||Writes a value to a field immediately, so that the value is visible to all processors in the computer. This method has different overloaded forms. Only some are given above.&&&23|||public static bool Yield()|||Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.|||""]","['The Unstarted State − It is the situation when the instance of the thread is created but the Start method is not called.|||The Ready State − It is the situation when the thread is ready to run and waiting CPU cycle.|||The Not Runnable State − A thread is not executable, when||||||Sleep method has been called|||Wait method has been called|||Blocked by I/O operations|||||||||The Dead State − It is the situation when the thread completes execution or is aborted.|||Sleep method has been called|||Wait method has been called|||Blocked by I/O operations|||']"
