,main_headings,sub_headings_h2,sub_headings_h3,links,image_urls,facts,definitions,explanations,codes,outputs,table_data,list_items
0,"['Dart Programming Tutorial', 'Audience', 'Prerequisites']",['Useful Video Courses'],[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_pdf_version.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_quick_guide.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_useful_resources.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_discussion.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/index.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_overview.htm']","['https://www.tutorialspoint.com/dart_programming/images/dart-programming.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",[],[],"['Dart is an open-source general-purpose programming language. It is originally developed by Google and later approved as a standard by ECMA. Dart is a new programming language meant for the server as well as the browser. Introduced by Google, the Dart SDK ships with its compiler – the Dart VM. The SDK also includes a utility -dart2js, a transpiler that generates JavaScript equivalent of a Dart Script. This tutorial provides a basic level understanding of the Dart programming language.', 'This tutorial will be quite helpful for all those developers who want to develop single-page web applications using Dart. It is meant for programmers with a strong hold on object-oriented concepts.', 'The tutorial assumes that the readers have adequate exposure to object-oriented programming concepts. If you have worked on JavaScript, then it will help you further to grasp the concepts of Dart quickly.']",[],[],[],[]
1,['Dart Programming - Overview'],['Useful Video Courses'],[],"['https://www.tutorialspoint.com/dart_programming/index.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_environment.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/index.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_environment.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",['The following table compares the features of Dart and JavaScript.'],['This tutorial provides a basic level understanding of the Dart programming language.'],"['Dart is an object-oriented language with C-style syntax which can optionally trans compile into JavaScript. It supports a varied range of programming aids like interfaces, classes, collections, generics, and optional typing.', 'Dart can be extensively used to create single-page applications. Single-page applications apply only to websites and web applications. Single-page applications enable navigation between different screens of the website without loading a different webpage in the browser.  A classic example is GMail ─ when you click on a message in your inbox, browser stays on the same webpage, but JavaScript code hides the inbox and brings the message body on screen.', 'Google has released a special build of Chromium – the Dart VM. Using Dartium means you don’t have to compile your code to JavaScript until you’re ready to test on other browsers.']",[],[],"['Feature|||Dart|||JavaScript&&&Type system|||Optional, dynamic|||Weak, dynamic&&&Classes|||Yes, single inheritance|||Prototypical&&&Interfaces|||Yes, multiple interfaces|||No&&&Concurrency|||Yes, with isolates|||Yes, with HTML5 web workers']",[]
2,['Dart Programming - Environment'],"['Executing Script Online with DartPad', 'Setting Up the Local Environment', 'IDE Support', 'Add a Dart File to the Project', 'The dart2js Tool', 'Useful Video Courses']","['Using the Text Editor', 'Installing the Dart SDK', 'Verifying the Installation', 'Installing WebStorm']","['https://www.tutorialspoint.com/dart_programming/dart_programming_overview.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_syntax.htm', 'https://dartpad.dartlang.org/', 'http://tpcg.io/t1xOq0', 'https://www.dartlang.org/install/archive/', 'http://www.gekorm.com/dart-windows/', 'https://www.jetbrains.com/webstorm/download/#section=windows-version', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_overview.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_syntax.htm']","['https://www.tutorialspoint.com/dart_programming/images/dartpad.jpg', 'https://www.tutorialspoint.com/dart_programming/images/dart_installation.jpg', 'https://www.tutorialspoint.com/dart_programming/images/dart_file.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['A screenshot of the Dartpad editor is given below −', 'You may try the following example using Dartpad', 'The code will display the following output', 'In this section, let us see how to set up the local environment.', 'https://www.dartlang.org/install/archive', 'A screenshot of the Dart SDK installation is given below −', 'On completion of the SDK installation, set the PATH environment variable to −', 'If installation is successful, it will show the dart runtime.', 'The WebStorm installation file is available for Mac OS, Windows and Linux.', 'After downloading the installation files, follow the steps given below −', 'Install the Dart SDK: Refer to the steps listed above', 'Create a new Dart project and configure Dart support', 'Click Create New Project from the Welcome Screen', 'A screenshot of the WebStorm Editor is given below −', 'To compile Dart to JavaScript, type the following command in the terminal']","['This chapter discusses setting up the execution environment for Dart on the Windows platform.', 'The current stable version of Dart is 1.21.0. The dart sdk can be downloaded from −', 'To verify if Dart has been successfully installed, open the command prompt and enter the following command −', 'A plethora of IDEs support scripting in Dart. Examples include Eclipse, IntelliJ, and WebStorm from Jet brains.', 'Given below are the steps for configuring the Dart environment using WebStrom IDE.', 'The dart2js tool is shipped as a part of the Dart SDK and can be found in the /dartsdk/bin folder.']","['You may test your scripts online by using the online editor at https://dartpad.dartlang.org/. The Dart Editor executes the script and displays both HTML as well as console output. The online editor is shipped with a set of preset code samples.', 'Dartpad also enables to code in a more restrictive fashion. This can be achieved by checking the Strong mode option on the bottom right of the editor. Strong mode helps with −', 'Examples of a few editors include Windows Notepad, Notepad++, Emacs, vim or vi, etc. Editors may vary from one Operating System to another.  The source files are typically named with the extension "".dart"".', 'The installation file for WebStorm can be downloaded from https://www.jetbrains.com/webstorm/download/#section=windows-version.', 'If there is no value specified for the Dart SDK path, then provide the SDK path. For example, the SDK path may be <dart installation directory>/dart/dartsdk.', 'The dart2js tool compiles Dart code to JavaScript. Compiling Dart code to JS enables running the Dart script on browsers that do not support the Dart VM.', 'This command produces a file that contains the JavaScript equivalent of your Dart code. A complete tutorial on using this utility can be found on the official Dart website.']","[""\nvoid main() { \n   print('hello world'); \n}\n"", '\nhello world\n', '\n<dart-sdk-path>\\bin \n', '\nDart \n', '\ndart2js - - out = <output_file>.js  <dart_script>.dart\n']","['\nhello world\n', '\n<dart-sdk-path>\\bin \n', '\nDart \n', '\ndart2js - - out = <output_file>.js  <dart_script>.dart\n']",[],"['Stronger static and dynamic checking|||Idiomatic JavaScript code generation for better interoperability.|||https://www.dartlang.org/install/archive|||http://www.gekorm.com/dart-windows/|||Install the Dart SDK: Refer to the steps listed above|||Create a new Dart project and configure Dart support||| To create a new Dart project,||||||Click Create New Project from the Welcome Screen|||In the next dialog box, click Dart |||||||||If there is no value specified for the Dart SDK path, then provide the SDK path. For example, the SDK path may be <dart installation directory>/dart/dartsdk.|||Click Create New Project from the Welcome Screen|||In the next dialog box, click Dart |||Right-click on the Project|||New → Dart File|||Enter the name of the Dart Script|||']"
3,['Dart Programming - Syntax'],"['Your First Dart Code', 'Execute a Dart Program', 'Dart Command-Line Options', 'Enabling Checked Mode', 'Identifiers in Dart', 'Keywords in Dart', 'Comments in Dart', 'Object-Oriented Programming in Dart', 'Useful Video Courses']","['Via the Terminal', 'Via the WebStorm IDE', 'Whitespace and Line Breaks', 'Dart is Case-sensitive', 'Statements end with a Semicolon', 'Example', 'Example: Dart and Object Orientation']","['https://www.tutorialspoint.com/dart_programming/dart_programming_environment.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_data_types.htm', 'http://tpcg.io/8gsrBa', 'http://tpcg.io/2jnB8D', 'http://tpcg.io/byPTza', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_environment.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_data_types.htm']","['https://www.tutorialspoint.com/dart_programming/images/run_test1_dart.jpg', 'https://www.tutorialspoint.com/dart_programming/images/run_button.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Let us start with the traditional “Hello World” example −', 'The output of the above code will be −', 'You can execute a Dart program in two ways −', 'To execute a Dart program via the terminal −', 'To execute a Dart program via the WebStorm IDE −', 'Enables both assertions and type checks (checked mode).', 'Specifies the path to the package resolution configuration file.', 'Dart programs run in two modes namely −', 'Consider the following Test.dart script file −', 'Now try executing the script with the ""- - checked"" or the ""-c"" option −', 'The Dart VM will throw an error stating that there is a type mismatch.', 'The following tables lists a few examples of valid and invalid identifiers −', 'Dart supports the following types of comments −', 'Multi-line comments (/* */) − These comments may span multiple lines.', 'State − described by the attributes of an object.', 'Behavior − describes how the object will act.', 'Method − Methods facilitate communication between objects.', 'The code should produce the following output −']","['Right-click the Dart script file on the IDE. (The file should contain the main() function to enable execution)', 'Click on the ‘Run <file_name>’ option. A screenshot of the same is given below −', 'One can alternatively click the  button or use the shortcut Ctrl+Shift+F10 to execute the Dart Script.', 'Specifies where to find imported libraries. This option cannot be used with --packages.', 'Identifiers are names given to elements in a program like variables, functions etc. The rules for identifiers are −', 'Identifiers can include both, characters and digits. However, the identifier cannot begin with a digit.', 'Identifiers cannot include special symbols except for underscore (_) or a dollar sign ($).', 'Keywords have a special meaning in the context of a language. The following table lists some keywords in Dart.', 'Dart is case-sensitive. This means that Dart differentiates between uppercase and lowercase characters.', 'Single-line comments ( // ) − Any text between a ""//"" and the end of a line is treated as a comment', 'Identity − a unique value that distinguishes an object from a set of similar such objects.', 'Class − A class in terms of OOP is a blueprint for creating objects. A class encapsulates data for the object.']","['Syntax defines a set of rules for writing programs. Every language specification defines its own syntax. A Dart program is composed of −', 'The main() function is a predefined method in Dart. This method acts as the entry point to the application. A Dart script needs the main() method for execution. print() is a predefined function that prints the specified string or value to the standard output i.e. the terminal.', 'Dart command-line options are used to modify Dart Script execution. Common commandline options for Dart include the following −', 'It is recommended to run the Dart VM in checked mode during development and testing, since it adds warnings and errors to aid development and debugging process. The checked mode enforces various checks like type-checking etc. To turn on the checked mode, add the -c or –-checked option before the script-file name while running the script.', 'However, to ensure performance benefit while running the script, it is recommended to run the script in the production mode.', 'Though there is a type-mismatch the script executes successfully as the checked mode is turned off.  The script will result in the following output −', 'Dart ignores spaces, tabs, and newlines that appear in programs. You can use spaces, tabs, and newlines freely in your program and you are free to format and indent your programs in a neat and consistent way that makes the code easy to read and understand.', 'Each line of instruction is called a statement. Each dart statement must end with a semicolon (;). A single line can contain multiple statements. However, these statements must be separated by a semicolon.', 'Comments are a way to improve the readability of a program. Comments can be used to include additional information about a program like author of the code, hints about a function/ construct etc. Comments are ignored by the compiler.', 'Dart is an Object-Oriented language. Object Orientation is a software development paradigm that follows real-world modelling. Object Orientation considers a program as a collection of objects that communicate with each other via mechanism called methods.', 'Object − An object is a real-time representation of any entity. As per Grady Brooch, every object must have three features −', 'The above example defines a class TestClass. The class has a method disp(). The method prints the string “Hello World” on the terminal. The new keyword creates an object of the class. The object invokes the method disp().']","['\nmain() { \n   print(""Hello World!""); \n}\n', '\nHello World!\n', '\ndart file_name.dart\n', '\nvoid main() { \n   int n = ""hello""; \n   print(n); \n} \n', '\ndart Test.dart\n', '\nhello\n', '\ndart -c Test.dart \n', '\ndart - - checked Test.dart\n', ""\nUnhandled exception: \ntype 'String' is not a subtype of type 'int' of 'n' where \n   String is from dart:core \n   int is from dart:core \n#0  main (file:///C:/Users/Administrator/Desktop/test.dart:3:9) \n#1  _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart :261) \n#2  _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n"", '\n// this is single line comment  \n  \n/* This is a   \n   Multi-line comment  \n*/ \n', '\nclass TestClass {   \n   void disp() {     \n      print(""Hello World""); \n   } \n}  \nvoid main() {   \n   TestClass c = new TestClass();   \n   c.disp();  \n}\n', '\nHello World\n']","['\nHello World!\n', '\ndart file_name.dart\n', '\ndart Test.dart\n', '\nhello\n', '\ndart -c Test.dart \n', '\ndart - - checked Test.dart\n', '\nHello World\n']","['Sr.No|||Command-Line Option & Description&&&1|||-c or --c|||Enables both assertions and type checks (checked mode).|||&&&2|||--version|||Displays VM version information.|||&&&3|||--packages <path>|||Specifies the path to the package resolution configuration file.|||&&&4|||-p <path>|||Specifies where to find imported libraries. This option cannot be used with --packages.|||&&&5|||-h or --help|||Displays help.|||', 'Valid identifiers|||Invalid identifiers&&&firstName|||Var&&&first_name|||first name&&&num1|||first-name&&&$result|||1number', 'abstract 1|||continue|||false|||new|||this&&&as 1|||default|||final|||null|||throw&&&assert|||deferred 1|||finally|||operator 1|||true&&&async 2|||do|||for|||part 1|||try&&&async* 2|||dynamic 1|||get 1|||rethrow|||typedef 1&&&await 2|||else|||if|||return|||var&&&break|||enum|||implements 1|||set 1|||void&&&case|||export 1|||import 1|||static 1|||while&&&catch|||external 1|||in|||super|||with&&&class|||extends|||is|||switch|||yield 2&&&const|||factory 1|||library 1|||sync* 2|||yield* 2']","['Variables and Operators|||Classes|||Functions|||Expressions and Programming Constructs|||Decision Making and Looping Constructs|||Comments|||Libraries and Packages|||Typedefs|||Data structures represented as Collections / Generics|||Via the terminal|||Via the WebStorm IDE|||Navigate to the path of the current project|||Type the following command in the Terminal window|||Right-click the Dart script file on the IDE. (The file should contain the main() function to enable execution)|||Click on the ‘Run <file_name>’ option. A screenshot of the same is given below −|||Checked Mode|||Production Mode (Default)|||Identifiers cannot include special symbols except for underscore (_) or a dollar sign ($).|||Identifiers cannot be keywords.|||They must be unique.|||Identifiers are case-sensitive.|||Identifiers cannot contain spaces.|||Single-line comments ( // ) − Any text between a ""//"" and the end of a line is treated as a comment|||Multi-line comments (/* */) − These comments may span multiple lines.|||Object − An object is a real-time representation of any entity. As per Grady Brooch, every object must have three features −||||||State − described by the attributes of an object.|||Behavior − describes how the object will act.|||Identity − a unique value that distinguishes an object from a set of similar such objects.|||||||||Class − A class in terms of OOP is a blueprint for creating objects. A class encapsulates data for the object.|||Method − Methods facilitate communication between objects.|||State − described by the attributes of an object.|||Behavior − describes how the object will act.|||Identity − a unique value that distinguishes an object from a set of similar such objects.|||']"
4,['Dart Programming - Data Types'],"['Numbers', 'Strings', 'Boolean', 'List and Map', 'The Dynamic Type', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_syntax.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_variables.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_syntax.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_variables.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",['The Dart language supports the following types−'],"['Numbers in Dart are used to represent numeric literals. The Number Dart come in two flavours −', 'The keyword String is used to represent string literals. String values are embedded in either single or double quotes.']","['One of the most fundamental characteristics of a programming language is the set of data types it supports. These are the type of values that can be represented and manipulated in a programming language.', 'Integer − Integer values represent non-fractional values, i.e., numeric values without a decimal point. For example, the value ""10"" is an integer. Integer literals are represented using the int keyword.', 'Double − Dart also supports fractional numeric values i.e. values with decimal points. The Double data type in Dart represents a 64-bit (double-precision) floating-point number. For example, the value ""10.10"". The keyword double is used to represent floating point literals.', 'Strings represent a sequence of characters. For instance, if you were to store some data like name, address etc. the string data type should be used.  A Dart string is a sequence of UTF-16 code units. Runes are used to represent a sequence of UTF-32 code units.', 'The Boolean data type represents Boolean values true and false. Dart uses the bool keyword to represent a Boolean value.', 'The data types list and map are used to represent a collection of objects. A List is an ordered group of objects. The List data type in Dart is synonymous to the concept of an array in other programming languages. The Map data type represents a set of values as key-value pairs. The dart: core library enables creation and manipulation of these collections through the predefined List and Map classes respectively.', 'Dart is an optionally typed language. If the type of a variable is not explicitly specified, the variable’s type is dynamic. The dynamic keyword can also be used as a type annotation explicitly.']",[],[],[],"['Numbers|||Strings|||Booleans|||Lists|||Maps|||Integer − Integer values represent non-fractional values, i.e., numeric values without a decimal point. For example, the value ""10"" is an integer. Integer literals are represented using the int keyword.|||Double − Dart also supports fractional numeric values i.e. values with decimal points. The Double data type in Dart represents a 64-bit (double-precision) floating-point number. For example, the value ""10.10"". The keyword double is used to represent floating point literals.|||']"
5,['Dart Programming - Variables'],"['Type Syntax', 'Final and Const', 'Useful Video Courses']","['Output', 'Output', 'The dynamic keyword', 'Output', 'Syntax: final Keyword', 'Syntax: const Keyword', 'Example – final Keyword', 'Output', 'Example – const Keyword', 'Output', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_data_types.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_operators.htm', 'http://tpcg.io/OVvw4n', 'http://tpcg.io/aEt5XK', 'http://tpcg.io/ErZLzR', 'http://tpcg.io/5dbLAt', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_data_types.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_operators.htm']","['https://www.tutorialspoint.com/dart_programming/images/type_syntax.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Identifiers can contain alphabets and numbers.', 'Variable names cannot begin with a number.', 'The following example illustrates the same.', 'The code given above will throw the following error as output −']","['Identifiers cannot contain spaces and special characters, except the underscore (_) and the dollar ($) sign.']","['A variable is “a named space in the memory” that stores values. In other words, it acts a container for values in a program. Variable names are called identifiers. Following are the naming rules for an identifier −', 'A variable must be declared before it is used. Dart uses the var keyword to achieve the same. The syntax for declaring a variable is as given below −', 'All variables in dart store a reference to the value rather than containing the value. The variable called name contains a reference to a String object with a value of “Smith”.', 'Dart supports type-checking by prefixing the variable name with the data type. Type-checking ensures that a variable holds only data specific to a data type. The syntax for the same is given below −', 'The above snippet will result in a warning since the value assigned to the variable doesn’t match the variable’s data type.', 'All uninitialized variables have an initial value of null. This is because Dart considers all values as objects.  The following example illustrates the same −', 'Variables declared without a static type are implicitly declared as dynamic. Variables can be also declared using the dynamic keyword in place of the var keyword.', 'The final and const keyword are used to declare constants. Dart prevents modifying the values of a variable declared using the final or const keyword. These keywords can be used in conjunction with the variable’s data type or instead of the var keyword.', 'The const keyword is used to represent a compile-time constant.  Variables declared using the const keyword are implicitly final.', 'The above example declares two constants, pi and area, using the const keyword. The area variable’s value is a compile-time constant.', 'Note − Only const variables can be used to compute a compile time constant. Compile-time constants are constants whose values will be determined at compile time', 'Dart throws an exception if an attempt is made to modify variables declared with the final or const keyword. The example given below illustrates the same −']","[""\nvar name = 'Smith';\n"", ""\nString name = 'Smith'; \nint num = 10;\n"", '\nvoid main() { \n   String name = 1; \n}\n', ""\nWarning: A value of type 'String' cannot be assigned to a variable of type 'int' \n"", '\nvoid main() { \n   int num; \n   print(num); \n}\n', '\nNull \n', '\nvoid main() { \n   dynamic x = ""tom""; \n   print(x);  \n}\n', '\ntom\n', '\nfinal variable_name\n', '\nfinal data_type  variable_name\n', '\nconst variable_name\n', '\nconst data_type variable_name\n', '\nvoid main() { \n   final val1 = 12; \n   print(val1); \n}\n', '\n12\n', '\nvoid main() { \n   const pi = 3.14; \n   const area = pi*12*12; \n   print(""The output is ${area}""); \n}\n', '\nThe output is 452.15999999999997\n', '\nvoid main() { \n   final v1 = 12; \n   const v2 = 13; \n   v2 = 12; \n}\n', ""\nUnhandled exception: \ncannot assign to final variable 'v2='.  \nNoSuchMethodError: cannot assign to final variable 'v2=' \n#0  NoSuchMethodError._throwNew (dart:core-patch/errors_patch.dart:178) \n#1      main (file: Test.dart:5:3) \n#2    _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:261) \n#3    _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n""]","[""\nvar name = 'Smith';\n"", ""\nString name = 'Smith'; \nint num = 10;\n"", ""\nWarning: A value of type 'String' cannot be assigned to a variable of type 'int' \n"", '\nNull \n', '\ntom\n', '\nfinal variable_name\n', '\nfinal data_type  variable_name\n', '\nconst variable_name\n', '\nconst data_type variable_name\n', '\n12\n', '\nThe output is 452.15999999999997\n', ""\nUnhandled exception: \ncannot assign to final variable 'v2='.  \nNoSuchMethodError: cannot assign to final variable 'v2=' \n#0  NoSuchMethodError._throwNew (dart:core-patch/errors_patch.dart:178) \n#1      main (file: Test.dart:5:3) \n#2    _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:261) \n#3    _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n""]",[],"['Identifiers cannot be keywords.|||Identifiers can contain alphabets and numbers.|||Identifiers cannot contain spaces and special characters, except the underscore (_) and the dollar ($) sign.|||Variable names cannot begin with a number.|||']"
6,['Dart Programming - Operators'],"['Arithmetic Operators', 'Equality and Relational Operators', 'Type test Operators', 'Bitwise Operators', 'Assignment Operators', 'Logical Operators', 'Conditional Expressions', 'Useful Video Courses']","['condition ? expr1 : expr2', 'expr1 ?? expr2', 'Example', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_variables.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_loops.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_arithmetic_operators.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_equality_relational_operators.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_type_test_operators.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_bitwise_operators.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_assignment_operators.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_logical_operators.htm', 'http://tpcg.io/Jvw4bE', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_variables.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_loops.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Operator − Defines how the operands will be processed to produce a value.', 'In this chapter, we will discuss the operators that are available in Dart.', 'The following table shows the arithmetic operators supported by Dart.', 'Unary minus, also known as negation (reverse the sign of the expression)', 'Get the remainder of an integer division (modulo)', 'Assume the value of A is 10 and B is 20.', 'These operators are handy for checking types at runtime.', 'The following table lists the assignment operators available in Dart.', 'Assigns values from the right side operand to the left side operand', 'Ex:C = A + B  will assign the value of A + B into C', 'Assign the value only if the variable is null', 'Ex: C += A is equivalent to C = C + A ', 'Ex: C -= A is equivalent to C = C – A', 'Ex: C *= A is equivalent to C = C * A', 'The following example shows how you can use conditional expression in Dart −', 'It will produce the following output −', 'It will produce the following output −']","['An expression is a special kind of statement that evaluates to a value. Every expression is composed of −', 'The following table lists the bitwise operators available in Dart and their role −', 'It adds the right operand to the left operand and assigns the result to the left operand.', 'It subtracts the right operand from the left operand and assigns the result to the left operand.', 'It multiplies the right operand with the left operand and assigns the result to the left operand.', 'It divides the left operand with the right operand and assigns the result to the left operand.', 'Note −  Same logic applies to Bitwise operators, so they will become ≪=, ≫=, ≫=, ≫=, |= and ^=.', 'And − The operator returns true only if all the expressions specified return true', 'OR − The operator returns true if at least  one of the expressions specified return true', 'NOT − The operator returns the inverse of the expression’s result. For E.g.: !(7>5) returns false', 'Dart has two operators that let you evaluate expressions that might otherwise require ifelse statements −', 'If expr1 is non-null, returns its value; otherwise, evaluates and returns the value of expr2']","['Consider the following expression – ""2 + 3"". In this expression, 2 and 3 are operands and the symbol ""+"" (plus) is the operator.', 'Relational Operators tests or defines the kind of relationship between two entities. Relational operators return a Boolean value i.e. true/ false.', 'Logical operators are used to combine two or more conditions. Logical operators return a Boolean value. Assume the value of variable A is 10 and B is 20.', 'If condition is true, then the expression evaluates expr1 (and returns its value); otherwise, it evaluates and returns the value of expr2.']","['\nvoid main() { \n   var a = 10; \n   var res = a > 12 ? ""value greater than 10"":""value lesser than or equal to 10""; \n   print(res); \n} \n', '\nvalue lesser than or equal to 10\n', '\nvoid main() { \n   var a = null; \n   var b = 12; \n   var res = a ?? b; \n   print(res); \n}\n', '\n12\n']","['\nvalue lesser than or equal to 10\n', '\n12\n']","['Sr.No|||Operators & Meaning&&&1|||+|||Add|||&&&2|||−|||Subtract|||&&&3|||-expr|||Unary minus, also known as negation (reverse the sign of the expression)|||&&&4|||*|||Multiply|||&&&5|||/|||Divide|||&&&6|||~/|||Divide, returning an integer result|||&&&7|||%|||Get the remainder of an integer division (modulo)|||&&&8|||++|||Increment|||&&&9|||--|||Decrement|||', 'Operator|||Description|||Example&&&>|||Greater than|||(A > B) is False&&&<|||Lesser than|||(A < B) is True&&&>=|||Greater than or equal to|||(A >= B) is False&&&<=|||Lesser than or equal to|||(A <= B) is True&&&==|||Equality|||(A==B) is False&&&!=|||Not equal|||(A!=B) is True', 'Operator|||Meaning&&&is|||True if the object has the specified type&&&is!|||False if the object has the specified type', 'Operator|||Description|||Example&&&Bitwise AND|||a & b|||Returns a one in each bit position for which the corresponding bits of both operands are ones.&&&Bitwise OR|||a | b|||Returns a one in each bit position for which the corresponding bits of either or both operands are ones.&&&Bitwise XOR|||a ^ b |||Returns a one in each bit position for which the corresponding bits of either but not both operands are ones.&&&Bitwise NOT|||~ a|||Inverts the bits of its operand.&&&Left shift|||a ≪ b|||Shifts a in binary representation b (< 32) bits to the left, shifting in zeroes from the right.&&&Signpropagating right shift|||a ≫ b|||Shifts a in binary representation b (< 32) bits to the right, discarding bits shifted off.', 'Sr.No|||Operator & Description&&&1|||=(Simple Assignment )|||Assigns values from the right side operand to the left side operand|||Ex:C = A + B  will assign the value of A + B into C|||&&&2|||??=|||Assign the value only if the variable is null|||&&&3|||+=(Add and Assignment)|||It adds the right operand to the left operand and assigns the result to the left operand.|||Ex: C += A is equivalent to C = C + A |||&&&4|||─=(Subtract and Assignment)|||It subtracts the right operand from the left operand and assigns the result to the left operand.|||Ex: C -= A is equivalent to C = C – A|||&&&5|||*=(Multiply and Assignment)|||It multiplies the right operand with the left operand and assigns the result to the left operand.|||Ex: C *= A is equivalent to C = C * A|||&&&6|||/=(Divide and Assignment)|||It divides the left operand with the right operand and assigns the result to the left operand.|||', 'Operator|||Description|||Example&&&&&|||And − The operator returns true only if all the expressions specified return true|||(A > 10 && B > 10) is False.&&&|||||OR − The operator returns true if at least  one of the expressions specified return true|||(A > 10 || B > 10) is True.&&&!|||NOT − The operator returns the inverse of the expression’s result. For E.g.: !(7>5) returns false|||!(A > 10) is True.']",['Operands − Represents the data|||Operator − Defines how the operands will be processed to produce a value.|||Arithmetic Operators|||Equality and Relational Operators|||Type test Operators|||Bitwise Operators|||Assignment Operators|||Logical Operators|||']
7,['Dart Programming - Loops'],"['Using Labels to Control the Flow', 'Useful Video Courses']","['Example: Label with Break', 'Example: Label with continue']","['https://www.tutorialspoint.com/dart_programming/dart_programming_operators.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_decision_making.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_for_loop.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_for_in_loop.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_while_loop.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_do_while_loop.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_break_statement.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_continue_statement.htm', 'http://tpcg.io/CknGZL', 'http://tpcg.io/C8fJ95', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_operators.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_decision_making.htm']","['https://www.tutorialspoint.com/dart_programming/images/classification_of_loops.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The following figure illustrates the classification of loops −', ""The for...in loop is used to loop through an object's properties."", 'Let us now move on and discuss the Loop Control Statements of Dart.', 'The following output is displayed on successful execution of the above code.', 'The following output is displayed on successful execution of the above code.']",[],"['At times, certain instructions require repeated execution. Loops are an ideal way to do the same. A loop represents a set of instructions that must be repeated. In a loop’s context, a repetition is termed as an iteration.', 'Let’s start the discussion with Definite Loops. A loop whose number of iterations are definite/fixed is termed as a definite loop.', 'The for loop is an implementation of a definite loop. The for loop executes the code block for a specified number of times. It can be used to iterate over a fixed set of values, such as an array', 'Moving on, let’s now discuss the indefinite loops. An indefinite loop is used when the number of iterations in a loop is indeterminate or unknown. Indefinite loops can be implemented using −', 'The while loop executes the instructions each time the condition specified evaluates to true. In other words, the loop evaluates the condition before the block of code is executed.', 'The do…while loop is similar to the while loop except that the do...while loop doesn’t evaluate the condition for the first time the loop executes.', 'The break statement is used to take the control out of a construct. Using break in a loop causes the program to exit the loop. Following is an example of the break statement.', 'The continue statement skips the subsequent statements in the current iteration and takes the control back to the beginning of the loop.', 'A label is simply an identifier followed by a colon (:) that is applied to a statement or a block of code. A label can be used with break and continue to control the flow more precisely.', 'Line breaks are not allowed between the ‘continue’ or ‘break’ statement and its label name. Also, there should not be any other statement in between a label name and an associated loop.']","['\nvoid main() { \n   outerloop: // This is the label name \n   \n   for (var i = 0; i < 5; i++) { \n      print(""Innerloop: ${i}""); \n      innerloop: \n      \n      for (var j = 0; j < 5; j++) { \n         if (j > 3 ) break ; \n         \n         // Quit the innermost loop \n         if (i == 2) break innerloop; \n         \n         // Do the same thing \n         if (i == 4) break outerloop; \n         \n         // Quit the outer loop \n         print(""Innerloop: ${j}""); \n      } \n   } \n}\n', '\nInnerloop: 0\nInnerloop: 0\nInnerloop: 1\nInnerloop: 2\nInnerloop: 3\nInnerloop: 1\nInnerloop: 0\nInnerloop: 1\nInnerloop: 2\nInnerloop: 3\nInnerloop: 2\nInnerloop: 3\nInnerloop: 0\nInnerloop: 1\nInnerloop: 2\nInnerloop: 3\nInnerloop: 4\n', '\nvoid main() { \n   outerloop: // This is the label name \n   \n   for (var i = 0; i < 3; i++) { \n      print(""Outerloop:${i}""); \n      \n      for (var j = 0; j < 5; j++) { \n         if (j == 3){ \n            continue outerloop; \n         } \n         print(""Innerloop:${j}""); \n      } \n   } \n}\n', '\nOuterloop: 0 \nInnerloop: 0 \nInnerloop: 1 \nInnerloop: 2 \n\nOuterloop: 1 \nInnerloop: 0 \nInnerloop: 1 \nInnerloop: 2 \n\nOuterloop: 2 \nInnerloop: 0 \nInnerloop: 1 \nInnerloop: 2 \n']","['\nInnerloop: 0\nInnerloop: 0\nInnerloop: 1\nInnerloop: 2\nInnerloop: 3\nInnerloop: 1\nInnerloop: 0\nInnerloop: 1\nInnerloop: 2\nInnerloop: 3\nInnerloop: 2\nInnerloop: 3\nInnerloop: 0\nInnerloop: 1\nInnerloop: 2\nInnerloop: 3\nInnerloop: 4\n', '\nOuterloop: 0 \nInnerloop: 0 \nInnerloop: 1 \nInnerloop: 2 \n\nOuterloop: 1 \nInnerloop: 0 \nInnerloop: 1 \nInnerloop: 2 \n\nOuterloop: 2 \nInnerloop: 0 \nInnerloop: 1 \nInnerloop: 2 \n']","[""Sr.No|||Loop & Description&&&1|||for loop|||The for loop is an implementation of a definite loop. The for loop executes the code block for a specified number of times. It can be used to iterate over a fixed set of values, such as an array|||&&&2||| for…in Loop|||The for...in loop is used to loop through an object's properties.|||"", 'Sr.No|||Loop & Description&&&1|||while Loop|||The while loop executes the instructions each time the condition specified evaluates to true. In other words, the loop evaluates the condition before the block of code is executed.|||&&&2||| do…while Loop|||The do…while loop is similar to the while loop except that the do...while loop doesn’t evaluate the condition for the first time the loop executes.|||', 'Sr.No|||Control Statement & Description&&&1|||break Statement|||The break statement is used to take the control out of a construct. Using break in a loop causes the program to exit the loop. Following is an example of the break statement.|||&&&2|||continue Statement|||The continue statement skips the subsequent statements in the current iteration and takes the control back to the beginning of the loop.|||']",[]
8,['Dart Programming - Decision Making'],['Useful Video Courses'],[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_loops.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_numbers.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_if_statement.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_if_else_statement.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_else_if_ladder.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_switch_case_statement.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_loops.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_numbers.htm']","['https://www.tutorialspoint.com/dart_programming/images/decision_making.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",['Conditional constructs in Dart are classified in the following table.'],"['A conditional/decision-making construct evaluates a condition before the instructions are executed.', 'An if statement consists of a Boolean expression followed by one or more statements.', 'The else…if ladder is useful to test multiple conditions. Following is the syntax of the same.']","['An if can be followed by an optional else block. The else block will execute if the Boolean expression tested by the if block evaluates to false.', 'The switch statement evaluates an expression, matches the expression’s value to a case clause and executes the statements associated with that case.']",[],[],"['Sr.No|||Statement & Description&&&1|||if statement |||An if statement consists of a Boolean expression followed by one or more statements.|||&&&2|||If...Else Statement|||An if can be followed by an optional else block. The else block will execute if the Boolean expression tested by the if block evaluates to false.|||&&&3|||else…if Ladder|||The else…if ladder is useful to test multiple conditions. Following is the syntax of the same.|||&&&4|||switch…case Statement|||The switch statement evaluates an expression, matches the expression’s value to a case clause and executes the statements associated with that case.|||']",[]
9,['Dart Programming - Numbers'],"['Parsing', 'Number Properties', 'Number Methods', 'Useful Video Courses']","['Example', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_decision_making.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string.htm', 'http://tpcg.io/YNj1Ab', 'http://tpcg.io/bhFxTe', 'https://www.tutorialspoint.com/dart_programming/dart_programming_hashcode_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_isfinite_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_isinfinite_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_isnegative_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_sign_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_iseven_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_isodd_property.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_abs_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_ceil_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_compareto_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_floor_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_remainder_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_round_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_todouble_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_toint_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_number_tostring_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_truncate_method.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_decision_making.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The syntax for declaring a number is as given below −', 'It will produce the following output −', 'The above code will result in the following output −', 'The above code will result in the following output −', 'The following table lists the properties supported by Dart numbers.', 'Returns a hash code for a numerical value.', 'True if the number is finite; otherwise, false.', 'True if the number is positive infinity or negative infinity; otherwise, false.', 'True if the number is the double Not-a-Number value; otherwise, false.', 'True if the number is negative; otherwise, false.', 'Returns true if the number is an even number.', 'Returns true if the number is an odd number.', 'Given below are a list of commonly used methods supported by numbers −', 'Returns the absolute value of the number.', 'Returns the least integer no smaller than the number.', 'Returns the greatest integer not greater than the current number.', 'Returns the truncated remainder after dividing the two numbers.', 'Returns the integer closest to the current numbers.', 'Returns the double equivalent of the number.', 'Returns the integer equivalent of the number.', 'Returns the string equivalent representation of the number.', 'Returns an integer after discarding any fractional digits.']","['int − Integer of arbitrary size. The int data type is used to represent whole numbers.', 'Note − The Dart VM will throw an exception if fractional values are assigned to integer variables. ', 'Returns minus one, zero or plus one depending on the sign and numerical value of the number.']","['double − 64-bit (double-precision) floating-point numbers, as specified by the IEEE 754 standard. The double data type is used to represent fractional numbers', 'The num type is inherited by the int and double types. The dart core library allows numerous operations on numeric values.', 'The parse() static function allows parsing a string containing numeric literal into a number. The following illustration demonstrates the same −', 'The parse function throws a FormatException if it is passed any value other than numerals. The following code shows how to pass an alpha-numeric value to the parse() function.']","['\nint var_name;      // declares an integer variable \ndouble var_name;   // declares a double variable \n', '\nvoid main() {\n   // declare an integer\n   int num1 = 10;             \n     \n   // declare a double value\n   double num2 = 10.50;  \n\n   // print the values\n   print(num1);\n   print(num2);\n}\n', '\n10 \n10.5 \n', ""\nvoid main() { \n   print(num.parse('12')); \n   print(num.parse('10.91')); \n}\n"", '\n12 \n10.91\n', ""\nvoid main() { \n   print(num.parse('12A')); \n   print(num.parse('AAAA')); \n}\n"", '\nUnhandled exception: \nFormatException: 12A \n#0 num.parse (dart:core/num.dart:446) \n#1 main (file:///D:/Demos/numbers.dart:4:13) \n#2 _startIsolate.<anonymous closure> (dart:isolatepatch/isolate_patch.dart:261) \n#3 _RawReceivePortImpl._handleMessage (dart:isolatepatch/isolate_patch.dart:148)\n']","['\nint var_name;      // declares an integer variable \ndouble var_name;   // declares a double variable \n', '\n10 \n10.5 \n', '\n12 \n10.91\n', '\nUnhandled exception: \nFormatException: 12A \n#0 num.parse (dart:core/num.dart:446) \n#1 main (file:///D:/Demos/numbers.dart:4:13) \n#2 _startIsolate.<anonymous closure> (dart:isolatepatch/isolate_patch.dart:261) \n#3 _RawReceivePortImpl._handleMessage (dart:isolatepatch/isolate_patch.dart:148)\n']","['Sr.No|||Property & Description&&&1|||hashcode|||Returns a hash code for a numerical value.|||&&&2|||isFinite|||True if the number is finite; otherwise, false.|||&&&3|||isInfinite|||True if the number is positive infinity or negative infinity; otherwise, false.|||&&&4|||isNan|||True if the number is the double Not-a-Number value; otherwise, false.|||&&&5|||isNegative|||True if the number is negative; otherwise, false.|||&&&6|||sign|||Returns minus one, zero or plus one depending on the sign and numerical value of the number.|||&&&7|||isEven|||Returns true if the number is an even number.|||&&&8|||isOdd|||Returns true if the number is an odd number.|||', 'Sr.No|||Method & Description&&&1|||abs|||Returns the absolute value of the number.|||&&&|||2|||ceil|||Returns the least integer no smaller than the number.||||||||||||3|||compareTo|||Compares this to other number.||||||||||||4|||Floor|||Returns the greatest integer not greater than the current number.||||||||||||5|||remainder|||Returns the truncated remainder after dividing the two numbers.||||||||||||6|||Round|||Returns the integer closest to the current numbers.||||||||||||7|||toDouble|||Returns the double equivalent of the number.||||||||||||8|||toInt|||Returns the integer equivalent of the number.||||||||||||9|||toString|||Returns the string equivalent representation of the number.||||||||||||10|||truncate|||Returns an integer after discarding any fractional digits.||||||&&&2|||ceil|||Returns the least integer no smaller than the number.|||&&&3|||compareTo|||Compares this to other number.|||&&&4|||Floor|||Returns the greatest integer not greater than the current number.|||&&&5|||remainder|||Returns the truncated remainder after dividing the two numbers.|||&&&6|||Round|||Returns the integer closest to the current numbers.|||&&&7|||toDouble|||Returns the double equivalent of the number.|||&&&8|||toInt|||Returns the integer equivalent of the number.|||&&&9|||toString|||Returns the string equivalent representation of the number.|||&&&10|||truncate|||Returns an integer after discarding any fractional digits.|||']","['int − Integer of arbitrary size. The int data type is used to represent whole numbers.|||double − 64-bit (double-precision) floating-point numbers, as specified by the IEEE 754 standard. The double data type is used to represent fractional numbers|||']"
10,['Dart Programming - String'],"['Syntax', 'String Interpolation', 'String Properties', 'Methods to Manipulate Strings', 'Useful Video Courses']","['Example 1', 'Example 2']","['https://www.tutorialspoint.com/dart_programming/dart_programming_numbers.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_boolean.htm', 'http://tpcg.io/griHtN', 'http://tpcg.io/xgGIpn', 'http://tpcg.io/8XVpRB', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_property_codeunits.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_property_isempty.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_property_length.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_tolowercase_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_toUppercase_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_trim_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_compareto_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_replaceall_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_split_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_substring_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_tostring_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string_codeunitat_method.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_numbers.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_boolean.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The syntax of representing string values in Dart is as given below −', 'The following example illustrates the use of String data type in Dart.', 'It will produce the following Output −', 'It will produce the following output −', 'It will produce the following output −', 'The properties listed in the following table are all read-only.', 'Returns an unmodifiable list of the UTF-16 code units of this string.', 'Returns true if this string is empty.', 'Returns the length of the string including space, tab and newline characters.', 'Converts all characters in this string to lower case.', 'Converts all characters in this string to upper case.', 'Returns the string without any leading and trailing whitespace.', 'Replaces all substrings that match the specified pattern with a given value.', 'Returns a string representation of this object.', 'Returns the 16-bit UTF-16 code unit at the given index.']","['The String data type represents a sequence of characters. A Dart string is a sequence of UTF 16 code units.', 'The operator plus (+) is a commonly used mechanism to concatenate / interpolate strings.', 'Splits the string at matches of the specified delimiter and returns a list of substrings.', 'Returns the substring of this string that extends from startIndex, inclusive, to endIndex, exclusive.']","['String values in Dart can be represented using either single or double or triple quotes. Single line strings are represented using single or double quotes. Triple quotes are used to represent multi-line strings.', 'Strings are immutable. However, strings can be subjected to various operations and the resultant string can be a stored as a new value.', 'The process of creating a new string by appending a value to a static string is termed as concatenation or interpolation. In other words, it is the process of adding a string to another string.', 'You can use ""${}"" can be used to interpolate the value of a Dart expression within strings. The following example illustrates the same.', 'The String class in the dart: core library also provides methods to manipulate strings. Some of these methods are given below −']","[""\nString  variable_name = 'value'  \n\nOR  \n\nString  variable_name = ''value''  \n\nOR  \n\nString  variable_name = '''line1 \nline2'''  \n\nOR  \n\nString  variable_name= ''''''line1 \nline2''''''\n"", '\nvoid main() { \n   String str1 = \'this is a single line string\'; \n   String str2 = ""this is a single line string""; \n   String str3 = \'\'\'this is a multiline line string\'\'\'; \n   String str4 = """"""this is a multiline line string""""""; \n   \n   print(str1);\n   print(str2); \n   print(str3); \n   print(str4); \n}\n', '\nthis is a single line string \nthis is a single line string \nthis is a multiline line string \nthis is a multiline line string \n', '\nvoid main() { \n   String str1 = ""hello""; \n   String str2 = ""world""; \n   String res = str1+str2; \n   \n   print(""The concatenated string : ${res}""); \n}\n', '\nThe concatenated string : Helloworld\n', '\nvoid main() { \n   int n=1+1; \n   \n   String str1 = ""The sum of 1 and 1 is ${n}""; \n   print(str1); \n   \n   String str2 = ""The sum of 2 and 2 is ${2+2}""; \n   print(str2); \n}\n', '\nThe sum of 1 and 1 is 2 \nThe sum of 2 and 2 is 4\n']","[""\nString  variable_name = 'value'  \n\nOR  \n\nString  variable_name = ''value''  \n\nOR  \n\nString  variable_name = '''line1 \nline2'''  \n\nOR  \n\nString  variable_name= ''''''line1 \nline2''''''\n"", '\nthis is a single line string \nthis is a single line string \nthis is a multiline line string \nthis is a multiline line string \n', '\nThe concatenated string : Helloworld\n', '\nThe sum of 1 and 1 is 2 \nThe sum of 2 and 2 is 4\n']","['Sr.No|||Property & Description&&&1|||codeUnits|||Returns an unmodifiable list of the UTF-16 code units of this string.|||&&&2|||isEmpty|||Returns true if this string is empty.|||&&&3|||Length|||Returns the length of the string including space, tab and newline characters.|||', 'Sr.No|||Methods & Description&&&1|||toLowerCase()|||Converts all characters in this string to lower case.|||&&&2|||toUpperCase()|||Converts all characters in this string to upper case.|||&&&3|||trim()|||Returns the string without any leading and trailing whitespace.|||&&&4|||compareTo()|||Compares this object to another.|||&&&5|||replaceAll()|||Replaces all substrings that match the specified pattern with a given value.|||&&&6|||split()|||Splits the string at matches of the specified delimiter and returns a list of substrings.|||&&&7|||substring()|||Returns the substring of this string that extends from startIndex, inclusive, to endIndex, exclusive.|||&&&8|||toString()|||Returns a string representation of this object.|||&&&9|||codeUnitAt()|||Returns the 16-bit UTF-16 code unit at the given index.|||']",[]
11,['Dart Programming - Boolean'],"['Example', 'Example', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_string.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_lists.htm', 'http://tpcg.io/sYIpx8', 'http://tpcg.io/RhokO8', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_string.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_lists.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The syntax for declaring a Boolean variable in DART is as given below −', 'It will produce the following output −', 'It will produce the following output, in Checked Mode −', 'It will produce the following output, in Unchecked Mode −', 'Note − The WebStorm IDE runs in checked mode, by default.']",['The above snippet if run in checked mode will throw an exception. The same is illustrated below −'],"['Dart provides an inbuilt support for the Boolean data type. The Boolean data type in DART supports only two values – true and false. The keyword bool is used to represent a Boolean literal in DART.', 'Unlike JavaScript, the Boolean data type recognizes only the literal true as true. Any other value is considered as false.  Consider the following example −', 'The above snippet, if run in JavaScript, will print the message ‘String is not empty’ as the if construct will return true if the string is not empty.', 'However, in Dart, str is converted to false as str != true. Hence the snippet will print the message ‘Empty String’ (when run in unchecked mode).']","['\nbool var_name = true;  \nOR  \nbool var_name = false \n', '\nvoid main() { \n   bool test; \n   test = 12 > 5; \n   print(test); \n}\n', '\ntrue \n', ""\nvar str = 'abc'; \nif(str) { \n   print('String is not empty'); \n} else { \n   print('Empty String'); \n} \n"", ""\nvoid main() { \n   var str = 'abc'; \n   if(str) { \n      print('String is not empty'); \n   } else { \n      print('Empty String'); \n   } \n}\n"", ""\nUnhandled exception: \ntype 'String' is not a subtype of type 'bool' of 'boolean expression' where \n   String is from dart:core \n   bool is from dart:core  \n#0 main (file:///D:/Demos/Boolean.dart:5:6) \n#1 _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:261) \n#2 _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n"", '\nEmpty String\n']","['\nbool var_name = true;  \nOR  \nbool var_name = false \n', '\ntrue \n', ""\nUnhandled exception: \ntype 'String' is not a subtype of type 'bool' of 'boolean expression' where \n   String is from dart:core \n   bool is from dart:core  \n#0 main (file:///D:/Demos/Boolean.dart:5:6) \n#1 _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:261) \n#2 _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n"", '\nEmpty String\n']",[],[]
12,['Dart Programming - Lists'],"['Fixed Length List', 'Growable List', 'List Properties', 'Useful Video Courses']","['Example', 'Example', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_boolean.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_lists_basic_operations.htm', 'http://tpcg.io/g8x33s', 'http://tpcg.io/ktmO8E', 'http://tpcg.io/cQ3iKS', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_first_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_isempty_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_isnotempty_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_length_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_last_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_reversed_method.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_single_method.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_boolean.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_lists_basic_operations.htm']","['https://www.tutorialspoint.com/dart_programming/images/logical_representation_of_a_list.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The logical representation of a list in Dart is given below −', 'test_list − is the identifier that references the collection.', 'Let us now discuss these two types of lists in detail.', 'The syntax for declaring a fixed length list is given below −', 'The syntax for initializing a list is as given below −', 'It will produce the following output −', 'The following example shows how to create a list of 3 elements.', 'It will produce the following output −', 'It will produce the following output −', 'Returns the first element in the list.', 'Returns true if the collection has no elements.', 'Returns true if the collection has at least one element.', 'Returns the last element in the list.', 'Returns an iterable object containing the lists values in the reverse order.', 'Checks if the list has only one element and returns it.']","['The list contains in it the values 12, 13, and 14. The memory blocks holding these values are known as elements.', 'A fixed length list’s length cannot change at runtime. The syntax for creating a fixed length list is as given below −', 'The following table lists some commonly used properties of the List class in the dart:core library.']","['A very commonly used collection in programming is an array. Dart represents arrays in the form of List objects. A List is simply an ordered group of objects. The dart:core library provides the List class that enables creation and manipulation of lists.', 'Each element in the List is identified by a unique number called the index. The index starts from zero and extends up to n-1 where n is the total number of elements in the List. The index is also referred to as the subscript.', 'The above syntax creates a list of the specified size. The list cannot grow or shrink at runtime. Any attempt to resize the list will result in an exception.', 'A growable list’s length can change at run-time. The syntax for declaring and initializing a growable list is as given below −', 'The index / subscript is used to reference the element that should be populated with a value. The syntax for initializing a list is as given below −', 'The following example creates a zero-length list using the empty List() constructor. The add() function in the List class is used to dynamically add elements to the list.']","['\r\nvar list_name = new List(initial_size)\r\n', '\r\nlst_name[index] = value;\r\n', '\r\nvoid main() { \r\n   var lst = new List(3); \r\n   lst[0] = 12; \r\n   lst[1] = 13; \r\n   lst[2] = 11; \r\n   print(lst); \r\n}\r\n', '\r\n[12, 13, 11]\r\n', '\r\nvar list_name = [val1,val2,val3]   \r\n--- creates a list containing the specified values  \r\nOR  \r\nvar list_name = new List() \r\n--- creates a list of size zero \r\n', '\r\nlist_name[index] = value;\r\n', '\r\nvoid main() { \r\n   var num_list = [1,2,3]; \r\n   print(num_list); \r\n}\r\n', '\r\n[1, 2, 3]\r\n', '\r\nvoid main() { \r\n   var lst = new List(); \r\n   lst.add(12); \r\n   lst.add(13); \r\n   print(lst); \r\n} \r\n', '\r\n[12, 13] \r\n']","['\r\nvar list_name = new List(initial_size)\r\n', '\r\nlst_name[index] = value;\r\n', '\r\n[12, 13, 11]\r\n', '\r\nvar list_name = [val1,val2,val3]   \r\n--- creates a list containing the specified values  \r\nOR  \r\nvar list_name = new List() \r\n--- creates a list of size zero \r\n', '\r\nlist_name[index] = value;\r\n', '\r\n[1, 2, 3]\r\n', '\r\n[12, 13] \r\n']",['Sr.No|||Methods & Description&&&1|||first|||Returns the first element in the list.|||&&&2|||isEmpty|||Returns true if the collection has no elements.|||&&&3|||isNotEmpty|||Returns true if the collection has at least one element.|||&&&4|||length|||Returns the size of the list.|||&&&5|||last|||Returns the last element in the list.|||&&&6|||reversed|||Returns an iterable object containing the lists values in the reverse order.|||&&&7|||Single|||Checks if the list has only one element and returns it.|||'],"['test_list − is the identifier that references the collection.|||The list contains in it the values 12, 13, and 14. The memory blocks holding these values are known as elements.|||Each element in the List is identified by a unique number called the index. The index starts from zero and extends up to n-1 where n is the total number of elements in the List. The index is also referred to as the subscript.|||Fixed Length List|||Growable List|||']"
13,['Dart Programming - Lists (Basic Operations)'],['Useful Video Courses'],[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_lists.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_inserting_elements_into_list.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_updating_a_list.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_updating_the_index.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_list_replacerange_function.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_removing_list_items.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_lists.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",[],"['In this chapter, we will discuss how to carry out some basic operations on Lists, such as −']","['Mutable Lists can grow dynamically at runtime. The List.add() function appends the specified value to the end of the List and returns a modified List object.', 'The following functions supported by the List class in the dart:core library can be used to remove the item(s) in a List.']",[],[],['Sr.No|||Basic Operation & Description&&&1|||Inserting Elements into a List|||Mutable Lists can grow dynamically at runtime. The List.add() function appends the specified value to the end of the List and returns a modified List object.|||&&&2|||Updating a list|||Lists in Dart can be updated by −||||||Updating The Index|||Using the List.replaceRange() function||||||&&&3|||Removing List items|||The following functions supported by the List class in the dart:core library can be used to remove the item(s) in a List.'],['Updating The Index|||Using the List.replaceRange() function|||']
14,['Dart Programming - Map'],"['Declaring a Map using Map Literals', 'Declaring a Map using a Map Constructor', 'Map – Properties', 'Map - Functions', 'Useful Video Courses']","['Example: Map Literal', 'Example: Adding Values to Map Literals at Runtime', 'Example: Map Constructor']","['https://www.tutorialspoint.com/dart_programming/dart_programming_lists_basic_operations.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_symbol.htm', 'http://tpcg.io/T1NUbd', 'http://tpcg.io/4GhT0R', 'http://tpcg.io/sLsiWX', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_keys.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_values.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_length.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_isempty.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_isnotempty.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_function_addall.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_function_clear.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_function_remove.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map_function_foreach.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_lists_basic_operations.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_symbol.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The syntax to declare a map is as follows −', 'Now, use the following syntax to initialize the map −', 'It will produce the following output −', 'It will produce the following output −', 'It will produce the following output −', 'Note − A map value can be any object including NULL.', 'The Map class in the dart:core package defines the following properties −', 'Returns an iterable object representing keys', 'Returns an iterable object representing values', 'Returns true if the Map is an empty Map', 'Returns true if the Map is an empty Map', 'Following are the commonly used functions for manipulating Maps in Dart.', 'Adds all key-value pairs of other to this map.', 'Removes key and its associated value, if present, from the map.', 'Applies f to each key-value pair of the map.']","['To declare a map using map literals, you need to enclose the key-value pairs within a pair of curly brackets ""{  }"".', 'To declare a Map using a Map constructor, we have two steps. First, declare the map and second, initialize the map.']","['The Map object is a simple key/value pair. Keys and values in a map may be of any type. A Map is a dynamic collection. In other words, Maps can grow and shrink at runtime.']","['\nvar identifier = { key1:value1, key2:value2 [,…..,key_n:value_n] }\n', '\nvar identifier = new Map()\n', '\nmap_name[key] = value\n', ""\nvoid main() { \n   var details = {'Usrname':'tom','Password':'pass@123'}; \n   print(details); \n}\n"", '\n{Usrname: tom, Password: pass@123}\n', ""\nvoid main() { \n   var details = {'Usrname':'tom','Password':'pass@123'}; \n   details['Uid'] = 'U1oo1'; \n   print(details); \n} \n"", '\n{Usrname: tom, Password: pass@123, Uid: U1oo1}\n', ""\nvoid main() { \n   var details = new Map(); \n   details['Usrname'] = 'admin'; \n   details['Password'] = 'admin@123'; \n   print(details); \n} \n"", '\n{Usrname: admin, Password: admin@123}\n']","['\nvar identifier = { key1:value1, key2:value2 [,…..,key_n:value_n] }\n', '\nvar identifier = new Map()\n', '\nmap_name[key] = value\n', '\n{Usrname: tom, Password: pass@123}\n', '\n{Usrname: tom, Password: pass@123, Uid: U1oo1}\n', '\n{Usrname: admin, Password: admin@123}\n']","['Sr.No|||Property & Description&&&1|||Keys|||Returns an iterable object representing keys|||&&&2|||Values|||Returns an iterable object representing values|||&&&3|||Length|||Returns the size of the Map|||&&&4|||isEmpty|||Returns true if the Map is an empty Map|||&&&5|||isNotEmpty|||Returns true if the Map is an empty Map|||', 'Sr.No|||Function Name & Description&&&1||||||addAll()|||Adds all key-value pairs of other to this map.|||&&&2||||||clear()|||Removes all pairs from the map.|||&&&3||||||remove()|||Removes key and its associated value, if present, from the map.|||&&&4||||||forEach()|||Applies f to each key-value pair of the map.|||']",['Using Map Literals|||Using a Map constructor|||']
15,['Dart Programming - Symbol'],"['Syntax', 'Example', 'Foo.dart', 'FooSymbol.dart', 'Convert Symbol to String', 'Useful Video Courses']",['Example: Display the number of instance methods of a class'],"['https://www.tutorialspoint.com/dart_programming/dart_programming_map.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_runes.htm', 'http://tpcg.io/GtQzrx', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_map.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_runes.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['This code should produce the following output −', 'This code should produce the following output −', 'It should produce the following output −']","['The name must be a valid public Dart member name, public constructor name, or library name.']","['Symbols in Dart are opaque, dynamic string name used in reflecting out metadata from a library. Simply put, symbols are a way to store the relationship between a human readable string and a string that is optimized to be used by computers.', 'Reflection is a mechanism to get metadata of a type at runtime like the number of methods in a class, the number of constructors it has or the number of parameters in a function. You can even invoke a method of the type which is loaded at runtime.', 'In Dart reflection specific classes are available in the dart:mirrors package. This library works in both web applications and command line applications.', 'Consider the following example. The code declares a class Foo in a library foo_lib. The class defines the methods m1, m2, and m3.', 'The following code loads Foo.dart library and searches for Foo class, with help of Symbol type. Since we are reflecting the metadata from the above library the code imports dart:mirrors library.', 'Note that the line libMirror.declarations.forEach((s, d) => print(s)); will iterate across every declaration in the library at runtime and prints the declarations as type of Symbol.', 'Let us now consider displaying the number of instance methods in a class. The predefined class ClassMirror helps us to achieve the same.', 'You can convert the name of a type like class or library stored in a symbol back to string using MirrorSystem class. The following code shows how you can convert a symbol to a string.']","[""\nSymbol obj = new Symbol('name');  \n// expects a name of class or function or library to reflect \n"", '\nlibrary foo_lib;   \n// libarary name can be a symbol   \n\nclass Foo {         \n   // class name can be a symbol  \n   m1() {        \n      // method name can be a symbol \n      print(""Inside m1""); \n   } \n   m2() { \n      print(""Inside m2""); \n   } \n   m3() { \n      print(""Inside m3""); \n   } \n}\n', '\nimport \'dart:core\'; \nimport \'dart:mirrors\'; \nimport \'Foo.dart\';  \n\nmain() { \n   Symbol lib = new Symbol(""foo_lib"");   \n   //library name stored as Symbol \n   \n   Symbol clsToSearch = new Symbol(""Foo"");  \n   // class name stored as Symbol  \n   \n   if(checkIf_classAvailableInlibrary(lib, clsToSearch))  \n   // searches Foo class in foo_lib library \n      print(""class found..""); \n}  \n   \nbool checkIf_classAvailableInlibrary(Symbol libraryName, Symbol className) { \n   MirrorSystem mirrorSystem = currentMirrorSystem(); \n   LibraryMirror libMirror = mirrorSystem.findLibrary(libraryName); \n      \n   if (libMirror != null) { \n      print(""Found Library""); \n      print(""checkng...class details..""); \n      print(""No of classes found is : ${libMirror.declarations.length}""); \n      libMirror.declarations.forEach((s, d) => print(s));  \n         \n      if (libMirror.declarations.containsKey(className)) return true; \n      return false; \n   } \n}\n', '\nFound Library \ncheckng...class details.. \nNo of classes found is : 1 \nSymbol(""Foo"") // class name displayed as symbol  \nclass found. \n', '\nimport \'dart:core\'; \nimport \'dart:mirrors\'; \nimport \'Foo.dart\';  \n\nmain() { \n   Symbol lib = new Symbol(""foo_lib""); \n   Symbol clsToSearch = new Symbol(""Foo"");  \n   reflect_InstanceMethods(lib, clsToSearch); \n}  \nvoid reflect_InstanceMethods(Symbol libraryName, Symbol className) { \n   MirrorSystem mirrorSystem = currentMirrorSystem(); \n   LibraryMirror libMirror = mirrorSystem.findLibrary(libraryName); \n   \n   if (libMirror != null) { \n      print(""Found Library""); \n      print(""checkng...class details..""); \n      print(""No of classes found is : ${libMirror.declarations.length}""); \n      libMirror.declarations.forEach((s, d) => print(s));  \n      \n      if (libMirror.declarations.containsKey(className)) print(""found class"");\n      ClassMirror classMirror = libMirror.declarations[className]; \n      \n      print(""No of instance methods found is ${classMirror.instanceMembers.length}"");\n      classMirror.instanceMembers.forEach((s, v) => print(s)); \n   } \n}    \n', '\nFound Library \ncheckng...class details.. \nNo of classes found is : 1 \nSymbol(""Foo"") \nfound class \nNo of instance methods found is 8 \nSymbol(""=="") \nSymbol(""hashCode"") \nSymbol(""toString"") \nSymbol(""noSuchMethod"") \nSymbol(""runtimeType"") \nSymbol(""m1"") \nSymbol(""m2"") \nSymbol(""m3"")\n', '\nimport \'dart:mirrors\'; \nvoid main(){ \n   Symbol lib = new Symbol(""foo_lib""); \n   String name_of_lib = MirrorSystem.getName(lib); \n   \n   print(lib); \n   print(name_of_lib); \n}\n', '\nSymbol(""foo_lib"")   \n\nfoo_lib     \n']","[""\nSymbol obj = new Symbol('name');  \n// expects a name of class or function or library to reflect \n"", '\nFound Library \ncheckng...class details.. \nNo of classes found is : 1 \nSymbol(""Foo"") // class name displayed as symbol  \nclass found. \n', '\nFound Library \ncheckng...class details.. \nNo of classes found is : 1 \nSymbol(""Foo"") \nfound class \nNo of instance methods found is 8 \nSymbol(""=="") \nSymbol(""hashCode"") \nSymbol(""toString"") \nSymbol(""noSuchMethod"") \nSymbol(""runtimeType"") \nSymbol(""m1"") \nSymbol(""m2"") \nSymbol(""m3"")\n', '\nSymbol(""foo_lib"")   \n\nfoo_lib     \n']",[],[]
16,['Dart Programming - Runes'],"['String.codeUnitAt() Function', 'String.codeUnits Property', 'String.runes Property', 'Useful Video Courses']","['Syntax', 'Example', 'Syntax', 'Example', 'Syntax', 'Example', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_symbol.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_enumeration.htm', 'http://tpcg.io/241r8R', 'http://tpcg.io/vXHprS', 'http://tpcg.io/jn2L2E', 'http://tpcg.io/9Qwm2P', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_symbol.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_enumeration.htm']","['https://www.tutorialspoint.com/dart_programming/images/runes.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['It will produce the following output −', 'It will produce the following output −', 'It will produce the following output −', 'It will produce the following output −']","['Code units in a string can be accessed through their indexes. Returns the 16-bit UTF-16 code unit at the given index.', 'This property returns an unmodifiable list of the UTF-16 code units of the specified string.', 'This property returns an iterable of Unicode code-points of this string.Runes extends iterable.']","['Strings are a sequence of characters.  Dart represents strings as a sequence of Unicode UTF-16 code units. Unicode is a format that defines a unique numeric value for each letter, digit, and symbol.', 'Since a Dart string is a sequence of UTF-16 code units, 32-bit Unicode values within a string are represented using a special syntax. A rune is an integer representing a Unicode code point.', 'The String class in the dart:core library provides mechanisms to access runes. String code units / runes can be accessed in three ways −', 'Unicode code points are usually expressed as \\uXXXX, where XXXX is a 4-digit hexadecimal value. To specify more or less than 4 hex digits, place the value in curly brackets.  One can use the constructor of the Runes class in the dart:core library for the same.']","['\nString.codeUnitAt(int index);\n', ""\nimport 'dart:core'; \nvoid main(){ \n   f1(); \n} \nf1() { \n   String x = 'Runes'; \n   print(x.codeUnitAt(0)); \n}\n"", '\n82\n', '\nString. codeUnits;\n', ""\nimport 'dart:core';  \nvoid main(){ \n   f1(); \n}  \nf1() { \n   String x = 'Runes'; \n   print(x.codeUnits); \n} \n"", '\n[82, 117, 110, 101, 115]\n', '\nString.runes\n', '\nvoid main(){ \n   ""A string"".runes.forEach((int rune) { \n      var character=new String.fromCharCode(rune); \n      print(character); \n   });  \n} \n', '\nA \ns \nt \nr \ni \nn \ng\n', ""\nmain() { \n   Runes input = new Runes(' \\u{1f605} '); \n   print(new String.fromCharCodes(input)); \n}  \n""]","['\nString.codeUnitAt(int index);\n', '\n82\n', '\nString. codeUnits;\n', '\n[82, 117, 110, 101, 115]\n', '\nString.runes\n', '\nA \ns \nt \nr \ni \nn \ng\n']",[],['Using String.codeUnitAt() function|||Using String.codeUnits property|||Using String.runes property|||']
17,['Dart Programming - Enumeration'],"['Syntax', 'Example', 'Useful Video Courses']",['For example'],"['https://www.tutorialspoint.com/dart_programming/dart_programming_runes.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_functions.htm', 'http://tpcg.io/pCFjxA', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_runes.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_functions.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",['It will produce the following output −'],['An enumeration is used for defining named constant values. An enumerated type is declared using the enum keyword.'],"['Each of the symbols in the enumeration list stands for an integer value, one greater than the symbol that precedes it. By default, the value of the first enumeration symbol is 0.']","['\nenum enum_name {  \n   enumeration list \n}\n', '\nenum Status { \n   none, \n   running, \n   stopped, \n   paused \n}\n', ""\nenum Status { \n   none, \n   running, \n   stopped, \n   paused \n}  \nvoid main() { \n   print(Status.values); \n   Status.values.forEach((v) => print('value: $v, index: ${v.index}'));\n   print('running: ${Status.running}, ${Status.running.index}'); \n   print('running index: ${Status.values[1]}'); \n}\n"", '\n[Status.none, Status.running, Status.stopped, Status.paused] \nvalue: Status.none, index: 0 \nvalue: Status.running, index: 1 \nvalue: Status.stopped, index: 2 \nvalue: Status.paused, index: 3 \nrunning: Status.running, 1 \nrunning index: Status.running \n']","['\nenum enum_name {  \n   enumeration list \n}\n', '\n[Status.none, Status.running, Status.stopped, Status.paused] \nvalue: Status.none, index: 0 \nvalue: Status.running, index: 1 \nvalue: Status.stopped, index: 2 \nvalue: Status.paused, index: 3 \nrunning: Status.running, 1 \nrunning index: Status.running \n']",[],['The enum_name specifies the enumeration type name|||The enumeration list is a comma-separated list of identifiers|||']
18,['Dart Programming - Functions'],"['Optional Parameters', 'Recursive Dart Functions', 'Lambda Functions', 'Useful Video Courses']","['Example', 'Syntax', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_enumeration.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_interfaces.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_defining_function.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_calling_function.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_returning_function.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_parameterized_function.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_optional_positional_parameter.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_optional_named_parameter.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_optional_parameters_with_default_values.htm', 'http://tpcg.io/wCaUOR', 'http://tpcg.io/MB7bqf', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_enumeration.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_interfaces.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['A function definition specifies what and how a specific task would be done.', 'A function must be called so as to execute it.', 'Functions may also return value along with control, back to the caller.', 'Parameters are a mechanism to pass values to functions.', 'We have three types of optional parameters in Dart −', 'To specify optional positional parameters, use square [] brackets.', 'It should produce the following output −', 'It should produce the following output −']",['Lambda functions are a concise mechanism to represent functions. These functions are also called as Arrow functions.'],"['Functions are the building blocks of readable, maintainable, and reusable code. A function is a set of statements to perform a specific task. Functions organize the program into logical blocks of code. Once defined, functions may be called to access code. This makes the code reusable. Moreover, functions make it easy to read and maintain the program’s code.', ""A function declaration tells the compiler about a function's name, return type, and parameters. A function definition provides the actual body of the function."", 'Optional parameters can be used when arguments need not be compulsorily passed for a function’s execution. A parameter can be marked optional by appending a question mark to its name. The optional parameter should be set as the last argument in a function.', ""Unlike positional parameters, the parameter's name must be specified while the value is being passed. Curly brace {} can be used to specify optional named parameters."", 'Function parameters can also be assigned values by default. However, such parameters can also be explicitly passed values.', 'Recursion is a technique for iterating over an operation by having a function call to itself repeatedly until it arrives at a result. Recursion is best applied when you need to call the same function repeatedly with different parameters from within a loop.']","['\nvoid main() { \n   print(factorial(6));\n}  \nfactorial(number) { \n   if (number <= 0) {         \n      // termination case \n      return 1; \n   } else { \n      return (number * factorial(number - 1));    \n      // function invokes itself \n   } \n}   \n', '\n720\n', '\n[return_type]function_name(parameters)=>expression;\n', '\nvoid main() { \n   printMsg(); \n   print(test()); \n}  \nprintMsg()=>\nprint(""hello""); \n\nint test()=>123;                       \n// returning function\n', '\nhello 123 \n']","['\n720\n', '\n[return_type]function_name(parameters)=>expression;\n', '\nhello 123 \n']","['Sr.No|||Functions & Description&&&1|||Defining a Function|||A function definition specifies what and how a specific task would be done.|||&&&2|||Calling a Function|||A function must be called so as to execute it.|||&&&3|||Returning Functions|||Functions may also return value along with control, back to the caller.|||&&&4|||Parameterized Function|||Parameters are a mechanism to pass values to functions.|||', ""Sr.No|||Parameter & Description&&&1||||||Optional Positional Parameter|||To specify optional positional parameters, use square [] brackets.|||&&&2||||||Optional named parameter|||Unlike positional parameters, the parameter's name must be specified while the value is being passed. Curly brace {} can be used to specify optional named parameters.|||&&&3||||||Optional Parameters with Default Values|||Function parameters can also be assigned values by default. However, such parameters can also be explicitly passed values.|||""]",[]
19,['Dart Programming - Interfaces'],"['Implementing Multiple Interfaces', 'Useful Video Courses']","['Syntax: Implementing an Interface', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_functions.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_classes.htm', 'http://tpcg.io/ieffvV', 'http://tpcg.io/G1BVmE', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_functions.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_classes.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['It should produce the following output −', 'The following example shows how you can implement multiple interfaces in Dart −', 'It should produce the following output −']",[],"['An interface defines the syntax that any entity must adhere to. Interfaces define a set of methods available on an object. Dart does not have a syntax for declaring interfaces. Class declarations are themselves interfaces in Dart.', 'Classes should use the implements keyword to be able to use an interface.  It is mandatory for the implementing class to provide a concrete implementation of all the functions of the implemented interface. In other words, a class must redefine every function in the interface it wishes to implement.', 'In the following program, we are declaring a class Printer. The ConsolePrinter class implements the implicit interface declaration for the Printer class. The main function creates an object of the ConsolePrinter class using the new keyword. This object is used to invoke the function print_data defined in the ConsolePrinter class.', 'A class can implement multiple interfaces. The interfaces are separated by a comma. The syntax for the same is given below −']","['\nclass identifier implements interface_name\n', '\nvoid main() { \n   ConsolePrinter cp= new ConsolePrinter(); \n   cp.print_data(); \n}  \nclass Printer { \n   void print_data() { \n      print(""__________Printing Data__________""); \n   } \n}  \nclass ConsolePrinter implements Printer { \n   void print_data() {  \n      print(""__________Printing to Console__________""); \n   } \n} \n', '\n__________Printing to Console__________\n', '\nclass identifier implements interface-1,interface_2,interface_4…….\n', '\nvoid main() { \n   Calculator c = new Calculator(); \n   print(""The gross total : ${c.ret_tot()}""); \n   print(""Discount :${c.ret_dis()}""); \n}  \nclass Calculate_Total { \n   int ret_tot() {} \n}  \nclass Calculate_Discount { \n   int ret_dis() {} \n}\nclass Calculator  implements Calculate_Total,Calculate_Discount { \n   int ret_tot() { \n      return 1000; \n   } \n   int ret_dis() { \n      return 50; \n   } \n}\n', '\nThe gross total: 1000 \nDiscount:50 \n']","['\nclass identifier implements interface_name\n', '\n__________Printing to Console__________\n', '\nclass identifier implements interface-1,interface_2,interface_4…….\n', '\nThe gross total: 1000 \nDiscount:50 \n']",[],[]
20,['Dart Programming - Classes'],"['Declaring a Class', 'Creating Instance of the class', 'Accessing Attributes and Functions', 'Dart Constructors', 'Named Constructors', 'The this Keyword', 'Dart Class ─ Getters and Setters', 'Class Inheritance', 'Dart – Class Inheritance and Method Overriding', 'The static Keyword', 'The super Keyword', 'Useful Video Courses']","['Syntax', 'Example: Declaring a class', 'Syntax', 'Example: Instantiating a class', 'Example', 'Syntax', 'Example', 'Syntax : Defining the constructor', 'Example', 'Example', 'Syntax: Defining a getter', 'Syntax: Defining a setter', 'Example', 'Syntax', 'Example: Class Inheritance', 'Types of Inheritance', 'Example', 'Example', 'Example', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_interfaces.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_object.htm', 'http://tpcg.io/Y2UzPF', 'http://tpcg.io/BXS7yt', 'http://tpcg.io/chbFuI', 'http://tpcg.io/n0jk0E', 'http://tpcg.io/6GFOUN', 'http://tpcg.io/PEVRxC', 'http://tpcg.io/D6VAmp', 'http://tpcg.io/QMgLuP', 'http://tpcg.io/gS1t7S', 'http://tpcg.io/kI3uld', 'http://tpcg.io/7rKOEN', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_interfaces.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_object.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['A class definition can include the following −', 'Constructors − responsible for allocating memory for the objects of the class.', 'These components put together are termed as the data members of the class.', 'The new keyword is responsible for instantiation.', 'The output of the above code is as follows −', 'The following example shows how to use constructors in Dart −', 'It should produce the following output −', 'The following example shows how you can use named constructors in Dart −', 'It should produce the following output −', 'The following example explains how to use the this keyword in Dart −', 'It should produce the following output −', 'This program code should produce the following output −', 'Note − Dart doesn’t support multiple inheritance.', 'It should produce the following output −', 'Inheritance can be of the following three types −', 'Single − Every class can at the most extend from one parent class.', 'Multi-level − A class can inherit from another child class.', 'The following example shows how multi-level inheritance works −', 'It should produce the following output −', 'It should produce the following output −', 'It should produce the following output −', 'It should produce the following output −']","['The class keyword is followed by the class name. The rules for identifiers must be considered while naming a class.', 'Fields − A field is any variable declared in a class. Fields represent data pertaining to objects.', 'Functions − Functions represent actions an object can take. They are also at times referred to as methods.', 'Take a look at the following example to understand how to access attributes and functions in Dart −', 'The following example shows how you can use getters and setters in a Dart class −', 'Multiple − A class can inherit from multiple classes. Dart doesn’t support multiple inheritance.']","['Dart is an object-oriented language. It supports object-oriented programming features like classes, interfaces, etc. A class in terms of OOP is a blueprint for creating objects. A class encapsulates data for the object. Dart gives built-in support for this concept called class.', 'Use the class keyword to declare a class in Dart. A class definition starts with the keyword class followed by the class name; and the class body enclosed by a pair of curly braces. The syntax for the same is given below −', 'Setters and Getters − Allows the program to initialize and retrieve the values of the fields of a class.  A default getter/ setter is associated with every class. However, the default ones can be overridden by explicitly defining a setter/ getter.', 'The example declares a class Car. The class has a field named engine. The disp() is a simple function that prints the value of the field engine.', 'To create an instance of the class, use the new keyword followed by the class name. The syntax for the same is given below −', 'The right-hand side of the expression invokes the constructor. The constructor should be passed values if it is parameterized.', 'A class’s attributes and functions can be accessed through the object. Use the ‘.’ dot notation (called as the period) to access the data members of a class.', 'A constructor is a special function of the class that is responsible for initializing the variables of the class. Dart defines a constructor with the same name as that of the class. A constructor is a function and hence can be parameterized.  However, unlike a function, constructors cannot have a return type. If you don’t declare a constructor, a default no-argument constructor is provided for you.', 'Dart provides named constructors to enable a class define multiple constructors. The syntax of named constructors is as given below −', 'The this keyword refers to the current instance of the class. Here, the parameter name and the name of the class’s field are the same. Hence to avoid ambiguity, the class’s field is prefixed with the this keyword. The following example explains the same −', 'Getters and Setters, also called as accessors and mutators, allow the program to initialize and retrieve the values of class fields respectively.  Getters or accessors are defined using the get keyword. Setters or mutators are defined using the set keyword.', 'A default getter/setter is associated with every class. However, the default ones can be overridden by explicitly defining a setter/ getter.  A getter has no parameters and returns a value, and the setter has one parameter and does not return a value.', 'Dart supports the concept of Inheritance which is the ability of a program to create new classes from an existing class. The class that is extended to create newer classes is called the parent class/super class. The newly created classes are called the child/sub classes.', 'A class inherits from another class using the ‘extends’ keyword. Child classes inherit all properties and methods except constructors from the parent class.', 'In the following example, we are declaring a class Shape. The class is extended by the Circle class. Since there is an inheritance relationship between the classes, the child class, i.e., the class Car gets an implicit access to its parent class data member.', 'The class Leaf derives the attributes from Root and Child classes by virtue of multi-level inheritance. Its output is as follows −', 'Method Overriding is a mechanism by which the child class redefines a method in its parent class. The following example illustrates the same −', 'The number and type of the function parameters must match while overriding the method. In case of a mismatch in the number of parameters or their data type, the Dart compiler throws an error. The following illustration explains the same −', 'The static keyword can be applied to the data members of a class, i.e., fields and methods. A static variable retains its values till the program finishes execution. Static members are referenced by the class name.', 'The super keyword is used to refer to the immediate parent of a class. The keyword can be used to refer to the super class version of a variable, property, or method. The following example illustrates the same −']","['\nclass class_name {  \n   <fields> \n   <getters/setters> \n   <constructors> \n   <functions> \n}\n', '\nclass Car {  \n   // field \n   String engine = ""E1001"";  \n   \n   // function \n   void disp() { \n      print(engine); \n   } \n}\n', '\nvar object_name = new class_name([ arguments ])\n', '\nvar obj = new Car(""Engine 1"")\n', '\n//accessing an attribute \nobj.field_name  \n\n//accessing a function \nobj.function_name()\n', '\nvoid main() { \n   Car c= new Car(); \n   c.disp(); \n}  \nclass Car {  \n   // field \n   String engine = ""E1001"";  \n   \n   // function \n   void disp() { \n      print(engine); \n   } \n}\n', '\nE1001\n', '\nClass_name(parameter_list) { \n   //constructor body \n}\n', ""\nvoid main() { \n   Car c = new Car('E1001'); \n} \nclass Car { \n   Car(String engine) { \n      print(engine); \n   } \n}\n"", '\nE1001 \n', '\nClass_name.constructor_name(param_list)\n', '\nvoid main() {           \n   Car c1 = new Car.namedConst(\'E1001\');                                       \n   Car c2 = new Car(); \n}           \nclass Car {                   \n   Car() {                           \n      print(""Non-parameterized constructor invoked"");\n   }                                   \n   Car.namedConst(String engine) { \n      print(""The engine is : ${engine}"");    \n   }                               \n}\n', '\nThe engine is : E1001 \nNon-parameterized constructor invoked\n', '\nvoid main() { \n   Car c1 = new Car(\'E1001\'); \n}  \nclass Car { \n   String engine; \n   Car(String engine) { \n      this.engine = engine; \n      print(""The engine is : ${engine}""); \n   } \n} \n', '\nThe engine is : E1001\n', '\nReturn_type  get identifier \n{ \n} \n', '\nset identifier \n{ \n}\n', '\nclass Student { \n   String name; \n   int age; \n    \n   String get stud_name { \n      return name; \n   } \n    \n   void set stud_name(String name) { \n      this.name = name; \n   } \n   \n   void set stud_age(int age) { \n      if(age<= 0) { \n        print(""Age should be greater than 5""); \n      }  else { \n         this.age = age; \n      } \n   } \n   \n   int get stud_age { \n      return age;     \n   } \n}  \nvoid main() { \n   Student s1 = new Student(); \n   s1.stud_name = \'MARK\'; \n   s1.stud_age = 0; \n   print(s1.stud_name); \n   print(s1.stud_age); \n} \n', '\nAge should be greater than 5 \nMARK \nNull \n', '\nclass child_class_name extends parent_class_name \n', '\nvoid main() { \n   var obj = new Circle(); \n   obj.cal_area(); \n}  \nclass Shape { \n   void cal_area() { \n      print(""calling calc area defined in the Shape class""); \n   } \n}  \nclass Circle extends Shape {}\n', '\ncalling calc area defined in the Shape class\n', '\nvoid main() { \n   var obj = new Leaf(); \n   obj.str = ""hello""; \n   print(obj.str); \n}  \nclass Root { \n   String str; \n}  \nclass Child extends Root {}  \nclass Leaf extends Child {}  \n//indirectly inherits from Root by virtue of inheritance\n', '\nhello\n', '\nvoid main() { \n   Child c = new Child(); \n   c.m1(12); \n} \nclass Parent { \n   void m1(int a){ print(""value of a ${a}"");} \n}  \nclass Child extends Parent { \n   @override \n   void m1(int b) { \n      print(""value of b ${b}""); \n   } \n}\n', '\nvalue of b 12\n', '\nimport \'dart:io\'; \nvoid main() { \n   Child c = new Child(); \n   c.m1(12); \n} \nclass Parent { \n   void m1(int a){ print(""value of a ${a}"");} \n} \nclass Child extends Parent { \n   @override \n   void m1(String b) { \n      print(""value of b ${b}"");\n   } \n}\n', '\nvalue of b 12\n', '\nclass StaticMem { \n   static int num;  \n   static disp() { \n      print(""The value of num is ${StaticMem.num}"")  ; \n   } \n}  \nvoid main() { \n   StaticMem.num = 12;  \n   // initialize the static variable } \n   StaticMem.disp();   \n   // invoke the static method \n}\n', '\nThe value of num is 12\n', '\nvoid main() { \n   Child c = new Child(); \n   c.m1(12); \n} \nclass Parent { \n   String msg = ""message variable from the parent class""; \n   void m1(int a){ print(""value of a ${a}"");} \n} \nclass Child extends Parent { \n   @override \n   void m1(int b) { \n      print(""value of b ${b}""); \n      super.m1(13); \n      print(""${super.msg}"")   ; \n   } \n}\n', '\nvalue of b 12 \nvalue of a 13 \nmessage variable from the parent class\n']","['\nclass class_name {  \n   <fields> \n   <getters/setters> \n   <constructors> \n   <functions> \n}\n', '\nvar object_name = new class_name([ arguments ])\n', '\nE1001\n', '\nClass_name(parameter_list) { \n   //constructor body \n}\n', '\nE1001 \n', '\nClass_name.constructor_name(param_list)\n', '\nThe engine is : E1001 \nNon-parameterized constructor invoked\n', '\nThe engine is : E1001\n', '\nReturn_type  get identifier \n{ \n} \n', '\nset identifier \n{ \n}\n', '\nAge should be greater than 5 \nMARK \nNull \n', '\nclass child_class_name extends parent_class_name \n', '\ncalling calc area defined in the Shape class\n', '\nhello\n', '\nvalue of b 12\n', '\nvalue of b 12\n', '\nThe value of num is 12\n', '\nvalue of b 12 \nvalue of a 13 \nmessage variable from the parent class\n']",[],"['Fields − A field is any variable declared in a class. Fields represent data pertaining to objects.|||Setters and Getters − Allows the program to initialize and retrieve the values of the fields of a class.  A default getter/ setter is associated with every class. However, the default ones can be overridden by explicitly defining a setter/ getter.|||Constructors − responsible for allocating memory for the objects of the class.|||Functions − Functions represent actions an object can take. They are also at times referred to as methods.|||The new keyword is responsible for instantiation.|||The right-hand side of the expression invokes the constructor. The constructor should be passed values if it is parameterized.|||Single − Every class can at the most extend from one parent class.|||Multiple − A class can inherit from multiple classes. Dart doesn’t support multiple inheritance.|||Multi-level − A class can inherit from another child class.|||']"
21,['Dart Programming - Object'],"['Example', 'The Cascade operator (..)', 'The toString() method', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_classes.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection.htm', 'http://tpcg.io/gfmJQp', 'http://tpcg.io/CDjWMF', 'http://tpcg.io/fkN6MF', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_classes.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Behavior − Describes what an object can do.', 'It should produce the following output −', 'It should produce the following output −', 'It should produce the following output −']","['State − Describes the object. The fields of a class represent the object’s state.', 'The period operator (.) is used in conjunction with the object to access a class’ data members.']","['Object-Oriented Programming defines an object as “any entity that has a defined boundary.” An object has the following −', 'Identity − A unique value that distinguishes an object from a set of similar other objects. Two or more objects can share the state and behavior but not the identity.', 'Dart represents data in the form of objects. Every class in Dart extends the Object class. Given below is a simple example of creating and using an object.', 'The above example invokes the methods in the class. However, every time a function is called, a reference to the object is required. The cascade operator can be used as a shorthand in cases where there is a sequence of invocations.', 'The cascade ( .. ) operator can be used to issue a sequence of calls via an object. The above example can be rewritten in the following manner.', 'This function returns a string representation of an object. Take a look at the following example to understand how to use the toString method.']","['\nclass Student { \n   void test_method() { \n      print(""This is a  test method""); \n   } \n   \n   void test_method1() { \n      print(""This is a  test method1""); \n   } \n}  \nvoid main()    { \n   Student s1 = new Student(); \n   s1.test_method(); \n   s1.test_method1(); \n}\n', '\nThis is a test method \nThis is a test method1\n', '\nclass Student { \n   void test_method() { \n      print(""This is a  test method""); \n   } \n   \n   void test_method1() { \n      print(""This is a  test method1""); \n   } \n}  \nvoid main() { \n   new Student() \n   ..test_method() \n   ..test_method1(); \n}\n', '\nThis is a test method \nThis is a test method1\n', '\nvoid main() { \n   int n = 12; \n   print(n.toString()); \n} \n', '\n12\n']","['\nThis is a test method \nThis is a test method1\n', '\nThis is a test method \nThis is a test method1\n', '\n12\n']",[],['State − Describes the object. The fields of a class represent the object’s state.|||Behavior − Describes what an object can do.|||Identity − A unique value that distinguishes an object from a set of similar other objects. Two or more objects can share the state and behavior but not the identity.|||']
22,['Dart Programming - Collection'],"['Iterating Collections', 'Useful Video Courses']",['Example'],"['https://www.tutorialspoint.com/dart_programming/dart_programming_object.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_generics.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection_list.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection_set.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection_maps.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection_queue.htm', 'http://tpcg.io/wIGzUf', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_object.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_generics.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Dart collections can be basically classified as −', 'Fixed Length List − The list’s length cannot change at run-time.', 'Growable List − The list’s length can change at run-time.', 'This program should produce the following output −']",['The following example illustrates traversing a collection using an iterator object.'],"['Dart, unlike other programming languages, doesn’t support arrays. Dart collections can be used to replicate data structures like an array.  The dart:core library and other classes enable Collection support in Dart scripts.', 'A List is simply an ordered group of objects. The dart:core library provides the List class that enables creation and manipulation of lists.', 'Set represents a collection of objects in which each object can occur only once. The dart:core library provides the Set class to implement the same.', 'The Map object is a simple key/value pair. Keys and values in a map may be of any type.  A Map is a dynamic collection. In other words, Maps can grow and shrink at runtime. The Map class in the dart:core library provides support for the same.', 'A Queue is a collection that can be manipulated at both ends. Queues are useful when you want to build a first-in, first-out collection. Simply put, a queue inserts data from one end and deletes from another end. The values are removed / read in the order of their insertion.', 'The Iterator class from the dart:core library enables easy collection traversal. Every collection has an iterator property. This property returns an iterator that points to the objects in the collection.', 'The moveNext() function returns a Boolean value indicating whether there is a subsequent entry. The current property of the iterator object returns the value of the object that the iterator currently points to.']","[""\nimport 'dart:collection'; \nvoid main() { \n   Queue numQ = new Queue(); \n   numQ.addAll([100,200,300]);  \n   Iterator i= numQ.iterator; \n   \n   while(i.moveNext()) { \n      print(i.current); \n   } \n}\n"", '\n100 \n200 \n300\n']",['\n100 \n200 \n300\n'],"['Sr.No|||Dart collection & Description&&&1||||||List|||A List is simply an ordered group of objects. The dart:core library provides the List class that enables creation and manipulation of lists.||||||Fixed Length List − The list’s length cannot change at run-time.|||Growable List − The list’s length can change at run-time.||||||&&&2||||||Set|||Set represents a collection of objects in which each object can occur only once. The dart:core library provides the Set class to implement the same.|||&&&3||||||Maps|||The Map object is a simple key/value pair. Keys and values in a map may be of any type.  A Map is a dynamic collection. In other words, Maps can grow and shrink at runtime. The Map class in the dart:core library provides support for the same.|||&&&4||||||Queue|||A Queue is a collection that can be manipulated at both ends. Queues are useful when you want to build a first-in, first-out collection. Simply put, a queue inserts data from one end and deletes from another end. The values are removed / read in the order of their insertion.|||']",['Fixed Length List − The list’s length cannot change at run-time.|||Growable List − The list’s length can change at run-time.|||']
23,['Dart Programming - Generics'],"['Generic Map', 'Useful Video Courses']","['Syntax', 'Example: Generic List', 'Example', 'Example: Generic Set', 'Example: Generic Queue', 'Syntax', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_collection.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_packages.htm', 'http://tpcg.io/92x2ag', 'http://tpcg.io/N6LVI6', 'http://tpcg.io/0RhURw', 'http://tpcg.io/RA0zNY', 'http://tpcg.io/bSEM33', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_collection.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_packages.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['It should produce the following output −', 'It should produce the following output −', 'It should produce the following output −', 'It should produce the following output −', 'A type-safe map declaration specifies the data types of −', 'It should produce the following output −']",[],"['Dart is an optionally typed language. Collections in Dart are heterogeneous by default. In other words, a single Dart collection can host values of various types. However, a Dart collection can be made to hold homogenous values. The concept of Generics can be used to achieve the same.', 'The use of Generics enforces a restriction on the data type of the values that can be contained by the collection. Such collections are termed as type-safe collections. Type safety is a programming feature which ensures that a memory block can only contain data of a specific data type.', 'All Dart collections support type-safety implementation via generics. A pair of angular brackets containing the data type is used to declare a type-safe collection. The syntax for declaring a type-safe collection is as given below.', 'The type-safe implementations of List, Map, Set and Queue is given below. This feature is also supported by all implementations of the above-mentioned collection types.', 'An attempt to insert a value other than the specified type will result in a compilation error. The following example illustrates this.']","['\nCollection_name <data_type> identifier= new Collection_name<data_type> \n', '\nvoid main() { \n   List <String> logTypes = new List <String>(); \n   logTypes.add(""WARNING""); \n   logTypes.add(""ERROR""); \n   logTypes.add(""INFO"");  \n   \n   // iterating across list \n   for (String type in logTypes) { \n      print(type); \n   } \n}\n', '\nWARNING \nERROR \nINFO\n', '\nvoid main() { \n   List <String> logTypes = new List <String>(); \n   logTypes.add(1); \n   logTypes.add(""ERROR""); \n   logTypes.add(""INFO""); \n  \n   //iterating across list \n   for (String type in logTypes) { \n      print(type); \n   } \n} \n', '\n1                                                                                     \nERROR                                                                             \nINFO\n', '\nvoid main() { \n   Set <int>numberSet = new  Set<int>(); \n   numberSet.add(100); \n   numberSet.add(20); \n   numberSet.add(5); \n   numberSet.add(60);\n   numberSet.add(70); \n   \n   // numberSet.add(""Tom""); \n   compilation error; \n   print(""Default implementation  :${numberSet.runtimeType}"");  \n   \n   for(var no in numberSet) { \n      print(no); \n   } \n} \n', '\nDefault implementation :_CompactLinkedHashSet<int> \n100 \n20 \n5 \n60 \n70\n', '\nimport \'dart:collection\'; \nvoid main() { \n   Queue<int> queue = new Queue<int>(); \n   print(""Default implementation ${queue.runtimeType}"");  \n   queue.addLast(10); \n   queue.addLast(20); \n   queue.addLast(30); \n   queue.addLast(40); \n   queue.removeFirst();  \n   \n   for(int no in queue){ \n      print(no); \n   } \n}\n', '\nDefault implementation ListQueue<int> \n20 \n30 \n40\n', '\nMap <Key_type, value_type>\n', ""\nvoid main() { \n   Map <String,String>m={'name':'Tom','Id':'E1001'}; \n   print('Map :${m}'); \n} \n"", '\nMap :{name: Tom, Id: E1001}\n']","['\nCollection_name <data_type> identifier= new Collection_name<data_type> \n', '\nWARNING \nERROR \nINFO\n', '\n1                                                                                     \nERROR                                                                             \nINFO\n', '\nDefault implementation :_CompactLinkedHashSet<int> \n100 \n20 \n5 \n60 \n70\n', '\nDefault implementation ListQueue<int> \n20 \n30 \n40\n', '\nMap <Key_type, value_type>\n', '\nMap :{name: Tom, Id: E1001}\n']",[],['The key|||The value|||']
24,['Dart Programming - Packages'],"['Installing a Package', 'Useful Video Courses']","['Read XML String', 'Example : Parsing XML String Input']","['https://www.tutorialspoint.com/dart_programming/dart_programming_generics.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_exceptions.htm', 'https://pub.dartlang.org/', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_generics.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_exceptions.htm']","['https://www.tutorialspoint.com/dart_programming/images/pubspec_yaml.jpg', 'https://www.tutorialspoint.com/dart_programming/images/pub_get_command.jpg', 'https://www.tutorialspoint.com/dart_programming/images/packages.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The contents of a pubspec.yaml file should look something like this −', 'The important pub commands are as follows −', 'Helps to get all packages your application is depending on.', 'Upgrades all your dependencies to a newer version.', 'This will give you help for all different pub commands.', 'The steps for achieving the said task is as follows −', 'Step 1 − Add the following to the pubsec.yaml file.', 'The following example shows how to parse XML string input −', 'It should produce the following output −']","['This s used for building your web application  and it will create a build folder , with all related scripts in it.', 'If you are using an IDE like WebStorm, then you can right-click on the pubspec.yaml to get all the commands directly −', 'Right-click on the pubsec.yaml and get dependencies. This will internally fire the pub get command as shown below.', 'The downloaded packages and its dependent packages can be verified under the packages folder.', 'Since installation is completed now, we need to refer the dart xml in the project. The syntax is as follows −', 'To read XML string and verify the input, Dart XML uses a parse() method. The syntax is as follows −']","['A package is a mechanism to encapsulate a group of programming units. Applications might at times need integration of some third-party libraries or plugins. Every language has a mechanism for managing external packages like Maven or Gradle for Java, Nuget for .NET, npm for Node.js, etc. The package manager for Dart is pub.', 'Pub helps to install packages in the repository. The repository of packages hosted can be found at https://pub.dartlang.org/.', 'The package metadata is defined in a file, pubsec.yaml. YAML is the acronym for Yet Another Markup Language. The pub tool can be used to download all various libraries that an application requires.', 'Every Dart application has a pubspec.yaml file  which  contains the application dependencies  to other libraries  and metadata of applications like application name, author, version, and description.', 'Consider an example where an application needs to parse xml. Dart XML is a lightweight library that is open source and stable for parsing, traversing, querying and building XML documents.']","[""\nname: 'vector_victor' \nversion: 0.0.1 \ndescription: An absolute bare-bones web app. \n... \ndependencies: browser: '>=0.10.0 <0.11.0' \n"", ""\nname: TestApp \nversion: 0.0.1 \ndescription: A simple console application. \n#dependencies: \n#  foo_bar: '>=1.0.0 <2.0.0' \ndependencies: https://mail.google.com/mail/u/0/images/cleardot.gif\nxml: \n"", ""\nimport 'package:xml/xml.dart' as xml;\n"", '\nxml.parse(String input):\n', '\nimport \'package:xml/xml.dart\' as xml; \nvoid main(){ \n   print(""xml""); \n   var bookshelfXml = \'\'\'<?xml version = ""1.0""?> \n   <bookshelf> \n      <book> \n         <title lang = ""english"">Growing a Language</title> \n         <price>29.99</price> \n      </book> \n      \n      <book> \n         <title lang = ""english"">Learning XML</title> \n         <price>39.95</price> \n      </book> \n      <price>132.00</price> \n   </bookshelf>\'\'\'; \n   \n   var document = xml.parse(bookshelfXml); \n   print(document.toString()); \n}\n', '\nxml \n<?xml version = ""1.0""?><bookshelf> \n   <book> \n      <title lang = ""english"">Growing a Language</title> \n      <price>29.99</price> \n   </book> \n\n   <book> \n      <title lang = ""english"">Learning XML</title> \n      <price>39.95</price> \n   </book> \n   <price>132.00</price> \n</bookshelf> \n']","[""\nname: 'vector_victor' \nversion: 0.0.1 \ndescription: An absolute bare-bones web app. \n... \ndependencies: browser: '>=0.10.0 <0.11.0' \n"", ""\nimport 'package:xml/xml.dart' as xml;\n"", '\nxml.parse(String input):\n', '\nxml \n<?xml version = ""1.0""?><bookshelf> \n   <book> \n      <title lang = ""english"">Growing a Language</title> \n      <price>29.99</price> \n   </book> \n\n   <book> \n      <title lang = ""english"">Learning XML</title> \n      <price>39.95</price> \n   </book> \n   <price>132.00</price> \n</bookshelf> \n']","['Sr.No|||Command & Description&&&1|||‘pub get’|||Helps to get all packages your application is depending on.|||&&&2|||‘pub upgrade’|||Upgrades all your dependencies to a newer version.|||&&&3|||‘pub build’|||This s used for building your web application  and it will create a build folder , with all related scripts in it.|||&&&4|||‘pub help’|||This will give you help for all different pub commands.|||']",[]
25,['Dart Programming - Exceptions'],"['The try / on / catch Blocks', 'The Finally Block', 'Throwing an Exception', 'Custom Exceptions', 'Useful Video Courses']","['Example: Using the ON Block', 'Example: Using the catch Block', 'Example: on…catch', 'Example', 'Syntax: Defining the Exception', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_packages.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_debugging.htm', 'http://tpcg.io/GZOLnb', 'http://tpcg.io/pG6Uk4', 'http://tpcg.io/WjlJcU', 'http://tpcg.io/azfRXQ', 'http://tpcg.io/6i556b', 'http://tpcg.io/GF3aIe', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_packages.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_debugging.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Thrown when a deferred library fails to load.', 'Thrown when a number is divided by zero.', 'Base class for all Inupt-Output related exceptions.', 'Thrown when an isolate cannot be created.', 'Thrown when a scheduled timeout happens while waiting for an async result.', 'The syntax for handling an exception is as given below −', 'Following are some points to remember −', 'The following code illustrates exception handling in Dart −', 'It should produce the following output −', 'It should produce the following output −', 'The following example shows how to use the on...catch block.', 'It should produce the following output −', 'The syntax for using the finally block is as follows −', 'The following example illustrates the use of finally block.', 'It should produce the following output −', 'The syntax for raising an exception explicitly is −', 'It should produce the following output −', 'The following example shows how to define and handle a custom exception.', 'The code should produce the following output −']","['Exception thrown when a string or some other data does not have an expected format and cannot be parsed or processed.', 'A code snippet can have more than one on / catch blocks to handle multiple exceptions.', 'The following example shows how to use the throw keyword to throw an exception −', 'Custom Exceptions should be raised explicitly and the same should be handled in the code.']","['An exception (or exceptional event) is a problem that arises during the execution of a program. When an Exception occurs the normal flow of the program is disrupted and the program/Application terminates abnormally.', 'Every exception in Dart is a subtype of the pre-defined class Exception. Exceptions must be handled to prevent the application from terminating abruptly.', 'The try block embeds code that might possibly result in an exception. The on block is used when the exception type needs to be specified. The catch block is used when the handler needs the exception object.', 'The try block must be followed by either exactly one on / catch block or one finally block (or one of both). When an exception occurs in the try block, the control is transferred to the catch.', 'The on block and the catch block are mutually inclusive, i.e. a try block can be associated with both- the on block and the catch block.', 'The following program divides two numbers represented by the variables x and y respectively. The code throws an exception since it attempts division by zero. The on block contains the code to handle this exception.', 'In the following example, we have used the same code as above. The only difference is that the catch block (instead of the ON block) here contains the code to handle the exception. The parameter of catch contains the exception object thrown at runtime.', 'The finally block includes code that should be executed irrespective of an exception’s occurrence. The optional finally block executes unconditionally after try/on/catch.', 'The throw keyword is used to explicitly raise an exception. A raised exception should be handled to prevent the program from exiting abruptly.', 'As specified above, every exception type in Dart is a subtype of the built-in class Exception. Dart enables creating custom exceptions by extending the existing ones. The syntax for defining a custom exception is as given below −', 'In the above code, we are defining a custom exception, AmtException. The code raises the exception if the amount passed is not within the excepted range. The main function encloses the function invocation in the try...catch block.']","['\ntry { \n   // code that might throw an exception \n}  \non Exception1 { \n   // code for handling exception \n}  \ncatch Exception2 { \n   // code for handling exception \n} \n', ""\nmain() { \n   int x = 12; \n   int y = 0; \n   int res;  \n   \n   try {\n      res = x ~/ y; \n   } \n   on IntegerDivisionByZeroException { \n      print('Cannot divide by zero'); \n   } \n} \n"", '\nCannot divide by zero\n', '\nmain() { \n   int x = 12; \n   int y = 0; \n   int res;  \n   \n   try {  \n      res = x ~/ y; \n   }  \n   catch(e) { \n      print(e); \n   } \n} \n', '\nIntegerDivisionByZeroException\n', '\nmain() { \n   int x = 12; \n   int y = 0; \n   int res;  \n   \n   try { \n      res = x ~/ y; \n   }  \n   on IntegerDivisionByZeroException catch(e) { \n      print(e); \n   } \n} \n', '\nIntegerDivisionByZeroException\n', '\ntry { \n   // code that might throw an exception \n}  \non Exception1 { \n   // exception handling code \n}  \ncatch Exception2 { \n   //  exception handling \n}  \nfinally { \n   // code that should always execute; irrespective of the exception \n}\n', ""\nmain() { \n   int x = 12; \n   int y = 0; \n   int res;  \n   \n   try { \n      res = x ~/ y; \n   } \n   on IntegerDivisionByZeroException { \n      print('Cannot divide by zero'); \n   } \n   finally { \n      print('Finally block executed'); \n   } \n}\n"", '\nCannot divide by zero \nFinally block executed\n', '\nthrow new Exception_name()\n', ""\nmain() { \n   try { \n      test_age(-2); \n   } \n   catch(e) { \n      print('Age cannot be negative'); \n   } \n}  \nvoid test_age(int age) { \n   if(age<0) { \n      throw new FormatException(); \n   } \n}\n"", '\nAge cannot be negative\n', '\nclass Custom_exception_Name implements Exception { \n   // can contain constructors, variables and methods \n} \n', ""\nclass AmtException implements Exception { \n   String errMsg() => 'Amount should be greater than zero'; \n}  \nvoid main() { \n   try { \n      withdraw_amt(-1); \n   } \n   catch(e) { \n      print(e.errMsg()); \n   }  \n   finally { \n      print('Ending requested operation.....'); \n   } \n}  \nvoid withdraw_amt(int amt) { \n   if (amt <= 0) { \n      throw new AmtException(); \n   } \n}  \n"", '\nAmount should be greater than zero \nEnding requested operation.... \n']","['\ntry { \n   // code that might throw an exception \n}  \non Exception1 { \n   // code for handling exception \n}  \ncatch Exception2 { \n   // code for handling exception \n} \n', '\nCannot divide by zero\n', '\nIntegerDivisionByZeroException\n', '\nIntegerDivisionByZeroException\n', '\ntry { \n   // code that might throw an exception \n}  \non Exception1 { \n   // exception handling code \n}  \ncatch Exception2 { \n   //  exception handling \n}  \nfinally { \n   // code that should always execute; irrespective of the exception \n}\n', '\nCannot divide by zero \nFinally block executed\n', '\nthrow new Exception_name()\n', '\nAge cannot be negative\n', '\nclass Custom_exception_Name implements Exception { \n   // can contain constructors, variables and methods \n} \n', '\nAmount should be greater than zero \nEnding requested operation.... \n']",['Sr.No|||Exceptions & Description&&&1||||||DeferredLoadException|||Thrown when a deferred library fails to load.|||&&&2||||||FormatException|||Exception thrown when a string or some other data does not have an expected format and cannot be parsed or processed.|||&&&3||||||IntegerDivisionByZeroException|||Thrown when a number is divided by zero.|||&&&4||||||IOException|||Base class for all Inupt-Output related exceptions.|||&&&5||||||IsolateSpawnException|||Thrown when an isolate cannot be created.|||&&&6||||||Timeout|||Thrown when a scheduled timeout happens while waiting for an async result.|||'],"['A code snippet can have more than one on / catch blocks to handle multiple exceptions.|||The on block and the catch block are mutually inclusive, i.e. a try block can be associated with both- the on block and the catch block.|||']"
26,['Dart Programming - Debugging'],"['Adding a Breakpoint', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_exceptions.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_typedef.htm', 'http://tpcg.io/DL5SVS', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_exceptions.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_typedef.htm']","['https://www.tutorialspoint.com/dart_programming/images/add_breakpoint.jpg', 'https://www.tutorialspoint.com/dart_programming/images/debug_teststring.jpg', 'https://www.tutorialspoint.com/dart_programming/images/add_watchers.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Consider the following code snippet. (TestString.dart)', 'After running in debug mode, the program gives the following output −']","['To add a breakpoint, click on the left margin to. In the figure given below, line number 7 has a break point.', 'Run the program in debug mode. In the project explorer right click on the dart program in our case TestString.dart.']","['Every now and then, developers commit mistakes while coding. A mistake in a program is referred to as a bug. The process of finding and fixing bugs is called debugging and is a normal part of the development process. This section covers tools and techniques that can help you with debugging tasks.', 'The WebStorm editor enables breakpoints and step-by-step debugging. The program will break at the point where the breakpoint is attached. This functionality is like what you might expect from Java or C# application development. You can watch variables, browse the stack, step over and step into method and function calls, all from the WebStorm Editor.', 'Once the program runs in debug mode, you will get the Debugger window as shown in the following screenshot. The variables tab shows the values of variables in the current context. You can add watchers for specific variables and listen to that values changes using watches window.', 'Step Into (F7) arrow icon on debug menu helps to Executes code one statement at a time. If main methods call a subroutine, then this will go into the subroutine code also.', 'Step over (F8): It is similar to Step Into. The difference in use occurs when the current statement contains a call to a subroutine. If the main method calls a subroutine, step over will not drill into the subroutine. it will skip the subroutine.', 'Step Out (Shift+F8): Executes the remaining lines of a function in which the current execution point lies. The next statement displayed is the statement following the subroutine call.']","['\nvoid main() { \n   int a = 10, b = 20, c = 5; \n   c = c * c * c; \n   \n   print(""$a + $b = ${a+b}""); \n   print(""$a%$b = ${a%b}"");  // Add a break point here \n   print(""$a*$b = ${a*b}""); \n   print(""$a/$b = ${a/b}""); \n   print(c); \n}\n', '\n10 + 20 = 30 \n10 % 20 = 10 \n10 * 20 = 200 \n10 / 20 = 0.5 \n125\n']",['\n10 + 20 = 30 \n10 % 20 = 10 \n10 * 20 = 200 \n10 / 20 = 0.5 \n125\n'],[],[]
27,['Dart Programming - Typedef'],"['Example', 'Example', 'Useful Video Courses']",[],"['https://www.tutorialspoint.com/dart_programming/dart_programming_debugging.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_libraries.htm', 'http://tpcg.io/nQNZyn', 'http://tpcg.io/5jbbSn', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_debugging.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_libraries.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Given below are the steps to implement typedefs in a Dart program.', 'Step 2: Assigning a Function to a typedef Variable', 'Let’s now take an example to understand more on typedef in Dart.', 'Let us now put all the parts together and see the complete program.', 'The program should produce the following output −', 'It will produce the following output −']","['The typedef variable can be used to invoke functions. Here is how you can invoke a function −', 'Typedefs can also be passed as a parameter to a function. Consider the following example −']","['A typedef, or a function-type alias, helps to define pointers to executable code within memory. Simply put, a typedef can be used as a pointer that references a function.', 'A typedef can be used to specify a function signature that we want specific functions to match.  A function signature is defined by a function’s parameters (including their types). The return type is not a part of the function signature. Its syntax is as follows.', 'A variable of typedef can point to any function having the same signature as typedef. You can use the following signature to assign a function to a typedef variable.', 'At first, let us define a typedef. Here we are defining a function signature. The function will take two input parameters of the type integer.  Return type is not a part of the function signature.', 'Next, let us define the functions. Define some functions with the same function signature as that of the ManyOperation typedef.', 'Finally, we will invoke the function via typedef. Declare a variable of the ManyOperations type. Assign the function name to the declared variable.', ""The oper variable can point to any method which takes two integer parameters. The Add function's reference is assigned to the variable. Typedefs can switch function references at runtime"", 'Note − The above code will result in an error if the typedef variable tries to point to a function with a different function signature.']","['\ntypedef function_name(parameters)\n', '\ntype_def  var_name = function_name\n', '\nvar_name(parameters) \n', '\ntypedef ManyOperation(int firstNo , int secondNo); //function signature\n', '\nAdd(int firstNo,int second){ \n   print(""Add result is ${firstNo+second}""); \n}  \nSubtract(int firstNo,int second){ \n   print(""Subtract result is ${firstNo-second}""); \n}  \nDivide(int firstNo,int second){ \n   print(""Add result is ${firstNo/second}""); \n}\n', '\nManyOperation oper ;  \n\n//can point to any method of same signature \noper = Add; \noper(10,20); \noper = Subtract; \noper(30,20); \noper = Divide; \noper(50,5); \n', '\ntypedef ManyOperation(int firstNo , int secondNo); \n//function signature  \n\nAdd(int firstNo,int second){ \n   print(""Add result is ${firstNo+second}""); \n} \nSubtract(int firstNo,int second){ \n   print(""Subtract result is ${firstNo-second}""); \n}\nDivide(int firstNo,int second){ \n   print(""Divide result is ${firstNo/second}""); \n}  \nCalculator(int a, int b, ManyOperation oper){ \n   print(""Inside calculator""); \n   oper(a,b); \n}  \nvoid main(){ \n   ManyOperation oper = Add; \n   oper(10,20); \n   oper = Subtract; \n   oper(30,20); \n   oper = Divide; \n   oper(50,5); \n} \n', '\nAdd result is 30 \nSubtract result is 10 \nDivide result is 10.0 \n', '\ntypedef ManyOperation(int firstNo , int secondNo);   //function signature \nAdd(int firstNo,int second){ \n   print(""Add result is ${firstNo+second}""); \n}  \nSubtract(int firstNo,int second){\n   print(""Subtract result is ${firstNo-second}""); \n}  \nDivide(int firstNo,int second){ \n   print(""Divide result is ${firstNo/second}""); \n}  \nCalculator(int a,int b ,ManyOperation oper){ \n   print(""Inside calculator""); \n   oper(a,b); \n}  \nmain(){ \n   Calculator(5,5,Add); \n   Calculator(5,5,Subtract); \n   Calculator(5,5,Divide); \n} \n', '\nInside calculator \nAdd result is 10 \nInside calculator \nSubtract result is 0 \nInside calculator \nDivide result is 1.0\n']","['\ntypedef function_name(parameters)\n', '\ntype_def  var_name = function_name\n', '\nvar_name(parameters) \n', '\ntypedef ManyOperation(int firstNo , int secondNo); //function signature\n', '\nAdd result is 30 \nSubtract result is 10 \nDivide result is 10.0 \n', '\nInside calculator \nAdd result is 10 \nInside calculator \nSubtract result is 0 \nInside calculator \nDivide result is 1.0\n']",[],[]
28,['Dart Programming - Libraries'],"['Importing a library', 'Encapsulation in Libraries', 'Creating Custom Libraries', 'Library Prefix', 'Useful Video Courses']","['Example : Importing and using a Library', 'Syntax', 'Example', 'Example: Custom Library', 'Syntax', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_typedef.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_async.htm', 'http://tpcg.io/kCFera', 'http://tpcg.io/YVC6yG', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_typedef.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_async.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The syntax for importing a library in Dart is given below −', 'Consider the following code snippet −', 'Some commonly used libraries are given below −', 'Mathematical constants and functions, plus a random number generator.', 'At first, define a library with a private function.', 'The above code will result in an error.', 'You can associate a library in two ways −', 'First, let us define a custom library, calculator.dart.', 'The program should produce the following output −', 'First, let us define a library: loggerlib.dart.', 'Next, we will define another library: webloggerlib.dart.', 'Finally, we will import the library with a prefix.', 'It will produce the following output −']","['Encoders and decoders for converting between different data representations, including JSON and UTF-8.', 'Lists that efficiently handle fixed sized data (for example, unsigned 8 byte integers).', 'Dart also allows you to use your own code as a library.  Creating a custom library involves the following steps −', 'To explicitly declare a library, use the library statement. The syntax for declaring a library is as given below −']","['A library in a programming language represents a collection of routines (set of programming instructions). Dart has a set of built-in libraries that are useful to store routines that are frequently used.  A Dart library comprises of a set of classes, constants, functions, typedefs, properties, and exceptions.', 'Importing makes the components in a library available to the caller code. The import keyword is used to achieve the same.  A dart file can have multiple import statements.', 'Built in Dart library URIs use the dart: scheme to refer to a library. Other libraries can use a file system path or the package: scheme to specify its URI.  Libraries provided by a package manager such as the pub tool uses the package: scheme.', 'If you want to use only part of a library, you can selectively import the library.  The syntax for the same is given below −', 'File, socket, HTTP, and other I/O support for server applications. This library does not work in browser-based applications. This library is imported by default.', 'Built-in types, collections, and other core functionality for every Dart program. This library is automatically imported.', 'The following example imports the built-in library dart: math. The snippet calls the sqrt() function from the math library. This function returns the square root of a number passed to it.', 'Dart scripts can prefix identifiers with an underscore ( _ ) to mark its components private. Simply put, Dart libraries can restrict access to its content by external scripts. This is termed as encapsulation. The syntax for the same is given below −', ""If you import two libraries with conflicting identifiers, then you can specify a prefix for one or both libraries. Use the 'as' keyword for specifying the prefix.  The syntax for the same is given below −""]","[""\nimport 'URI'\n"", ""\nimport 'dart:io' \nimport 'package:lib1/libfile.dart' \n"", ""\nimport 'package: lib1/lib1.dart' show foo, bar;  \n// Import only foo and bar. \n\nimport 'package: mylib/mylib.dart' hide foo;  \n// Import all names except foo\n"", '\nimport \'dart:math\'; \nvoid main() { \n   print(""Square root of 36 is: ${sqrt(36)}""); \n}\n', '\nSquare root of 36 is: 6.0\n', '\n_identifier\n', '\nlibrary loggerlib;                            \nvoid _log(msg) {\n   print(""Log method called in loggerlib msg:$msg"");      \n} \n', '\nimport \'test.dart\' as web; \nvoid main() { \n   web._log(""hello from webloggerlib""); \n} \n', ""\nUnhandled exception: \nNo top-level method 'web._log' declared.  \nNoSuchMethodError: method not found: 'web._log' \nReceiver: top-level \nArguments: [...] \n#0 NoSuchMethodError._throwNew (dart:core-patch/errors_patch.dart:184) \n#1 main (file:///C:/Users/Administrator/WebstormProjects/untitled/Assertion.dart:6:3) \n#2 _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:261) \n#3 _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n"", '\nlibrary library_name  \n// library contents go here \n', ""\nimport 'library_name'\n"", ""\nimport 'dir/library_name'\n"", '\nlibrary calculator_lib;  \nimport \'dart:math\'; \n\n//import statement after the libaray statement  \nint add(int firstNumber,int secondNumber){ \n   print(""inside add method of Calculator Library "") ; \n   return firstNumber+secondNumber; \n}  \nint modulus(int firstNumber,int secondNumber){ \n   print(""inside modulus method of Calculator Library "") ; \n   return firstNumber%secondNumber; \n}  \nint random(int no){ \n   return new Random().nextInt(no); \n}\n', '\nimport \'calculator.dart\';  \nvoid main() {\n   var num1 = 10; \n   var num2 = 20; \n   var sum = add(num1,num2); \n   var mod = modulus(num1,num2); \n   var r = random(10);  \n   \n   print(""$num1 + $num2 = $sum""); \n   print(""$num1 % $num2= $mod""); \n   print(""random no $r""); \n} \n', '\ninside add method of Calculator Library  \ninside modulus method of Calculator Library  \n10 + 20 = 30 \n10 % 20= 10 \nrandom no 0 \n', ""\nimport 'library_uri' as prefix\n"", '\nlibrary loggerlib;  \nvoid log(msg){ \n   print(""Log method called in loggerlib msg:$msg"");\n}   \n', '\nlibrary webloggerlib; \nvoid log(msg){ \n   print(""Log method called in webloggerlib msg:$msg""); \n} \n', '\nimport \'loggerlib.dart\'; \nimport \'webloggerlib.dart\' as web;  \n\n// prefix avoids function name clashes \nvoid main(){ \n   log(""hello from loggerlib""); \n   web.log(""hello from webloggerlib""); \n} \n', '\nLog method called in loggerlib msg:hello from loggerlib \nLog method called in webloggerlib msg:hello from webloggerlib \n']","[""\nimport 'URI'\n"", ""\nimport 'dart:io' \nimport 'package:lib1/libfile.dart' \n"", ""\nimport 'package: lib1/lib1.dart' show foo, bar;  \n// Import only foo and bar. \n\nimport 'package: mylib/mylib.dart' hide foo;  \n// Import all names except foo\n"", '\nSquare root of 36 is: 6.0\n', '\n_identifier\n', ""\nUnhandled exception: \nNo top-level method 'web._log' declared.  \nNoSuchMethodError: method not found: 'web._log' \nReceiver: top-level \nArguments: [...] \n#0 NoSuchMethodError._throwNew (dart:core-patch/errors_patch.dart:184) \n#1 main (file:///C:/Users/Administrator/WebstormProjects/untitled/Assertion.dart:6:3) \n#2 _startIsolate.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:261) \n#3 _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148)\n"", '\nlibrary library_name  \n// library contents go here \n', ""\nimport 'library_name'\n"", ""\nimport 'dir/library_name'\n"", '\ninside add method of Calculator Library  \ninside modulus method of Calculator Library  \n10 + 20 = 30 \n10 % 20= 10 \nrandom no 0 \n', ""\nimport 'library_uri' as prefix\n"", '\nLog method called in loggerlib msg:hello from loggerlib \nLog method called in webloggerlib msg:hello from webloggerlib \n']","['Sr.No|||Library & Description&&&1|||dart:io|||File, socket, HTTP, and other I/O support for server applications. This library does not work in browser-based applications. This library is imported by default.|||&&&2|||dart:core|||Built-in types, collections, and other core functionality for every Dart program. This library is automatically imported.|||&&&3|||dart: math|||Mathematical constants and functions, plus a random number generator.|||&&&4|||dart: convert|||Encoders and decoders for converting between different data representations, including JSON and UTF-8.|||&&&5|||dart: typed_data|||Lists that efficiently handle fixed sized data (for example, unsigned 8 byte integers).|||']",['Within the same directory|||From a different directory|||']
29,['Dart Programming - Async'],"['Example', 'Useful Video Courses']","['Example', 'Dart Future']","['https://www.tutorialspoint.com/dart_programming/dart_programming_libraries.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_concurrency.htm', 'http://tpcg.io/LYlk1H', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_libraries.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_concurrency.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['The above example will result in the following output −', 'The output of this program will be as follows −']","['Let’s take an example to understand this concept. Here, the program accepts user input using the IO library.', 'The following example better illustrates the functioning of an asynchronous block.', 'Step 1 − Create a contact.txt file as given below and save it in the data folder in the current project.', 'Step 2 − Write a program which will read the file without blocking other parts of the application.']","['An asynchronous operation executes in a thread, separate from the main application thread. When an application calls a method to perform an operation asynchronously, the application can continue executing while the asynchronous method performs its task.', 'The readLineSync() is a synchronous method. This means that the execution of all instructions that follow the readLineSync() function call will be blocked till the readLineSync() method finishes execution.', 'The stdin.readLineSync waits for input. It stops in its tracks and does not execute any further until it receives the user’s input.', 'In computing, we say something is synchronous when it waits for an event to happen before continuing. A disadvantage in this approach is that if a part of the code takes too long to execute, the subsequent blocks, though unrelated, will be blocked from executing.  Consider a webserver that must respond to multiple requests for a resource.', 'A synchronous execution model will block every other user’s request till it finishes processing the current request. In such a case, like that of a web server, every request must be independent of the others. This means, the webserver should not wait for the current request to finish executing before it responds to request from other users.', 'Simply put, it should accept requests from new users before necessarily completing the requests of previous users. This is termed as asynchronous. Asynchronous programming basically means no waiting or non-blocking programming model.  The dart:async package facilitates implementing asynchronous programming blocks in a Dart script.', 'The ""end of main"" executes first while the script continues reading the file. The Future class, part of dart:async, is used for getting the result of a computation after an asynchronous task has completed. This Future value is then used to do something after the computation finishes.', 'Once the read operation is completed, the execution control is transferred within ""then()"". This is because the reading operation can take more time and so it doesn’t want to block other part of program.', 'The Dart community defines a Future as ""a means for getting a value sometime in the future."" Simply put, Future objects are a mechanism to represent values returned by an expression whose execution will complete at a later point in time. Several of Dart’s built-in classes return a Future when an asynchronous method is called.', 'Dart is a single-threaded programming language. If any code blocks the thread of execution (for example, by waiting for a time-consuming operation or blocking on I/O), the program effectively freezes.', 'Asynchronous operations let your program run without getting blocked. Dart uses Future objects to represent asynchronous operations.']","['\nimport \'dart:io\'; \nvoid main() { \n   print(""Enter your name :"");            \n   \n   // prompt for user input \n   String name = stdin.readLineSync();  \n   \n   // this is a synchronous method that reads user input \n   print(""Hello Mr. ${name}""); \n   print(""End of main""); \n} \n', '\nEnter your name :     \nTom                   \n\n// reads user input  \nHello Mr. Tom \nEnd of main\n', '\n1, Tom \n2, John \n3, Tim \n4, Jane \n', '\nimport ""dart:async""; \nimport ""dart:io"";  \n\nvoid main(){ \n   File file = new File( Directory.current.path+""\\\\data\\\\contact.txt""); \n   Future<String> f = file.readAsString();  \n  \n   // returns a futrue, this is Async method \n   f.then((data)=>print(data));  \n   \n   // once file is read , call back method is invoked  \n   print(""End of main"");  \n   // this get printed first, showing fileReading is non blocking or async \n}\n', '\nEnd of main \n1, Tom \n2, John \n3, Tim \n4, Jan\n']","['\nEnter your name :     \nTom                   \n\n// reads user input  \nHello Mr. Tom \nEnd of main\n', '\n1, Tom \n2, John \n3, Tim \n4, Jane \n', '\nEnd of main \n1, Tom \n2, John \n3, Tim \n4, Jan\n']",[],[]
30,['Dart Programming - Concurrency'],"['Example', 'Useful Video Courses']","['Output 1', 'Output 2', 'Isolate v/s Future']","['https://www.tutorialspoint.com/dart_programming/dart_programming_async.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_unit_testing.htm', 'http://tpcg.io/2YMDWV', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_async.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_unit_testing.htm']","['https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']",['Let’s take an example to understand this concept better.'],"['In case there is no object to pass to the spawned function, it can be passed a NULL value.', 'Note − The above output will be different for different hardware and operating system configurations.']","['Concurrency is the execution of several instruction sequences at the same time. It involves performing more than one task simultaneously.', 'Dart uses Isolates as a tool for doing works in parallel. The dart:isolate  package is Dart’s solution to taking single-threaded Dart code and allowing the application to make greater use of the hard-ware available.', 'Isolates, as the name suggests, are isolated units of running code. The only way to send data between them is by passing messages, like the way you pass messages between the client and the server. An isolate helps the program to take advantage of multicore microprocessors out of the box.', 'Here, the spawn method of the Isolate class facilitates running a function, foo, in parallel with the rest of our code. The spawn function takes two parameters −', 'The two functions (foo and main) might not necessarily run in the same order each time. There is no guarantee as to when foo will be executing and when main() will be executing. The output will be different each time you run.', 'From the outputs, we can conclude that the Dart code can spawn a new isolate from running code like the way Java or C# code can start a new thread.', 'Isolates differ from threads in that an isolate has its own memory. There’s no way to share a variable between isolates—the only way to communicate between isolates is via message passing.', 'Doing complex computational work asynchronously is important to ensure responsiveness of applications. Dart Future is a mechanism for retrieving the value of an asynchronous task after it has completed, while Dart Isolates are a tool for abstracting parallelism and implementing it on a practical high-level basis.']","[""\nimport 'dart:isolate';  \nvoid foo(var message){ \n   print('execution from foo ... the message is :${message}'); \n}  \nvoid main(){ \n   Isolate.spawn(foo,'Hello!!'); \n   Isolate.spawn(foo,'Greetings!!'); \n   Isolate.spawn(foo,'Welcome!!'); \n   \n   print('execution from main1'); \n   print('execution from main2'); \n   print('execution from main3'); \n}\n"", '\nexecution from main1 \nexecution from main2 \nexecution from main3 \nexecution from foo ... the message is :Hello!! \n', '\nexecution from main1 \nexecution from main2 \nexecution from main3 \nexecution from foo ... the message is :Welcome!! \nexecution from foo ... the message is :Hello!! \nexecution from foo ... the message is :Greetings!! \n']","['\nexecution from main1 \nexecution from main2 \nexecution from main3 \nexecution from foo ... the message is :Hello!! \n', '\nexecution from main1 \nexecution from main2 \nexecution from main3 \nexecution from foo ... the message is :Welcome!! \nexecution from foo ... the message is :Hello!! \nexecution from foo ... the message is :Greetings!! \n']",[],"['the function to be spawned, and|||an object that  will be passed to the spawned function.|||']"
31,['Dart Programming - Unit Testing'],"['Grouping Test Cases', 'Useful Video Courses']","['Syntax', 'Syntax', 'Example 1: A Passing Test', 'Example 2: A Failing Test', 'Example']","['https://www.tutorialspoint.com/dart_programming/dart_programming_concurrency.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_html_dom.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_concurrency.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_html_dom.htm']","['https://www.tutorialspoint.com/dart_programming/images/unit_testing.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Dart unit testing involves the following steps −', 'Step 1: Installing the ""test"" package', 'Step 2: Importing the ""test"" package', 'Step 1 − Import the test package as given below.', 'It should produce the following output −']","['The Dart external library named ""test"" provides a standard way of writing and running unit tests.', 'Packages can be installed from the command line too. Type the following in the terminal −', 'The subtract() method defined below has a logical mistake. The following test verifies the same.', 'Output − The test case for the function add() passes but the test for subtract() fails as shown below.', 'Output − The output will append the group name for each test case as given below −']","['Unit Testing involves testing every individual unit of an application. It helps the developer to test small functionalities without running the entire complex application.', 'To installing third-party packages in the current project, you will require the pubspec.yaml file. To install test packages, first make the following entry in the pubspec.yaml file −', 'After making the entry, right-click the pubspec.yaml file and get dependencies. It will install the ""test"" package. Given below is a screenshot for the same in the WebStorm Editor.', 'Tests are specified using the top-level function test(), while test assertions are made using the expect() function. For using these methods, they should be installed as a pub dependency.', ""The group() function can be used to group tests. Each group's description is added to the beginning of its test's descriptions."", 'The following example defines a method Add(). This method takes two integer values and returns an integer representing the sum. To test this add() method −', 'Step 2 − Define the test using the test() function. Here, the test() function uses the expect() function to enforce an assertion.', 'You can group the test cases so that it adds more meaning to you test code. If you have many test cases this helps to write much cleaner code.', 'In the given code, we are writing a test case for the split() function and the trim function. Hence, we logically group these test cases and call it String.']","['\ndependencies: \ntest:\n', '\npub get\n', '\nimport ""package:test/test.dart"";\n', '\ntest(""Description of the test "", () {  \n   expect(actualValue , matchingValue) \n});\n', '\ngroup(""some_Group_Name"", () { \n   test(""test_name_1"", () { \n      expect(actual, equals(exptected)); \n   });  \n   test(""test_name_2"", () { \n      expect(actual, equals(expected)); \n   }); \n}) \n', '\nimport \'package:test/test.dart\';      \n// Import the test package \n\nint Add(int x,int y)                  \n// Function to be tested { \n   return x+y; \n}  \nvoid main() { \n   // Define the test \n   test(""test to check add method"",(){  \n      // Arrange \n      var expected = 30; \n      \n      // Act \n      var actual = Add(10,20); \n      \n      // Asset \n      expect(actual,expected); \n   }); \n}\n', '\n00:00 +0: test to check add method \n00:00 +1: All tests passed! \n', '\nimport \'package:test/test.dart\'; \nint Add(int x,int y){ \n   return x+y; \n}\nint Sub(int x,int y){ \n   return x-y-1; \n}  \nvoid main(){ \n   test(\'test to check sub\',(){ \n      var expected = 10;   \n      // Arrange \n      \n      var actual = Sub(30,20);  \n      // Act \n      \n      expect(actual,expected);  \n      // Assert \n   }); \n   test(""test to check add method"",(){ \n      var expected = 30;   \n      // Arrange \n      \n      var actual = Add(10,20);  \n      // Act \n      \n      expect(actual,expected);  \n      // Asset \n   }); \n}\n', '\n00:00 +0: test to check sub \n00:00 +0 -1: test to check sub \nExpected: <10> \nActual: <9> \npackage:test  expect \nbin\\Test123.dart 18:5  main.<fn> \n   \n00:00 +0 -1: test to check add method \n00:00 +1 -1: Some tests failed.  \nUnhandled exception: \nDummy exception to set exit code. \n#0  _rootHandleUncaughtError.<anonymous closure> (dart:async/zone.dart:938) \n#1  _microtaskLoop (dart:async/schedule_microtask.dart:41)\n#2  _startMicrotaskLoop (dart:async/schedule_microtask.dart:50) \n#3  _Timer._runTimers (dart:isolate-patch/timer_impl.dart:394) \n#4  _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:414) \n#5  _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148) \n', '\nimport ""package:test/test.dart""; \nvoid main() { \n   group(""String"", () { \n      test(""test on split() method of string class"", () { \n         var string = ""foo,bar,baz""; \n         expect(string.split("",""), equals([""foo"", ""bar"", ""baz""])); \n      }); \n      test(""test on trim() method of string class"", () { \n         var string = ""  foo ""; \n         expect(string.trim(), equals(""foo"")); \n      }); \n   }); \n} \n', '\n00:00 +0: String test on split() method of string class \n00:00 +1: String test on trim() method of string class \n00:00 +2: All tests passed\n']","['\ndependencies: \ntest:\n', '\npub get\n', '\nimport ""package:test/test.dart"";\n', '\ntest(""Description of the test "", () {  \n   expect(actualValue , matchingValue) \n});\n', '\ngroup(""some_Group_Name"", () { \n   test(""test_name_1"", () { \n      expect(actual, equals(exptected)); \n   });  \n   test(""test_name_2"", () { \n      expect(actual, equals(expected)); \n   }); \n}) \n', '\n00:00 +0: test to check add method \n00:00 +1: All tests passed! \n', '\n00:00 +0: test to check sub \n00:00 +0 -1: test to check sub \nExpected: <10> \nActual: <9> \npackage:test  expect \nbin\\Test123.dart 18:5  main.<fn> \n   \n00:00 +0 -1: test to check add method \n00:00 +1 -1: Some tests failed.  \nUnhandled exception: \nDummy exception to set exit code. \n#0  _rootHandleUncaughtError.<anonymous closure> (dart:async/zone.dart:938) \n#1  _microtaskLoop (dart:async/schedule_microtask.dart:41)\n#2  _startMicrotaskLoop (dart:async/schedule_microtask.dart:50) \n#3  _Timer._runTimers (dart:isolate-patch/timer_impl.dart:394) \n#4  _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:414) \n#5  _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:148) \n', '\n00:00 +0: String test on split() method of string class \n00:00 +1: String test on trim() method of string class \n00:00 +2: All tests passed\n']",[],[]
32,['Dart Programming - HTML DOM'],"['Finding DOM Elements', 'Event Handling', 'Useful Video Courses']","['Example: Manipulating DOM', 'Index.html', 'Main.dart', 'TestEvent.html', 'TestEvent.dart', 'Output']","['https://www.tutorialspoint.com/dart_programming/dart_programming_unit_testing.htm', 'https://www.tutorialspoint.com/dart_programming/dart_programming_quick_guide.htm', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/dart_tutorial_for_beginners/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/profile/sriyank_siddhartha', 'https://www.tutorialspoint.com/flutter_tutorial_for_beginners_with_dart/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/dart_masterclass_programming_ios_android_bible/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/profile/frahaan_hussain', 'https://www.tutorialspoint.com/flutter_and_dart_development_for_building_ios_and_android_apps/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/complete_google_dart_programming_bootcamp/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/profile/pranjal_srivastava', 'https://www.tutorialspoint.com/aws_mobile_with_google_dart/index.asp', 'https://www.tutorialspoint.com/dart_programming/dart_programming_unit_testing.htm', 'https://www.tutorialspoint.comjavascript:printPage();', 'https://www.tutorialspoint.com/dart_programming/dart_programming_quick_guide.htm']","['https://www.tutorialspoint.com/dart_programming/images/html_dom.jpg', 'https://www.tutorialspoint.com/dart_programming/images/demowebapp.jpg', 'https://www.tutorialspoint.com/dart_programming/images/create.jpg', 'https://www.tutorialspoint.com/dart_programming/images/pub_get_dependencies.jpg', 'https://www.tutorialspoint.com/dart_programming/images/demo_web_app.jpg', 'https://www.tutorialspoint.com/dart_programming/images/output.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2341/course_2341_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2342/course_2342_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2348/course_2348_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2355/course_2355_image.png', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2860/course_2860_image.jpg', 'https://d3mxt5v3yxgcsr.cloudfront.net/courses/2863/course_2863_image.jpg']","['Here is a simple hierarchy of a few important DOM objects −', 'Moving on, we will discuss some DOM Operations in the next section.', 'Follow the steps given below, in the Webstorm IDE −', 'Step 1 − In the section ""Generate sample content"", select SimpleWebApplication.', 'Run the index.html file; you will see the following output on your screen.', 'Let us now take an example to understand the concept of Event Handling in Dart.']","['Every webpage resides inside a browser window which can be considered as an object.', 'Window − Top of the hierarchy. It is the outmost element of the object hierarchy.', 'Elements − represent the content on a web page. Examples include the text boxes, page title etc.', 'Nodes − are often elements, but they can also be attributes, text, comments, and other DOM types.', 'The dart:html library provides the querySelector function to search for elements in the DOM.', 'Step 1 − File NewProject → In the location, provide the project name as DemoWebApp.', 'In the web folder, you will find three files: Index.html, main.dart, and style.css']","['A Document object represents the HTML document that is displayed in that window. The Document object has various properties that refer to other objects which allow access to and modification of document content.', 'The way a document content is accessed and modified is called the Document Object Model, or DOM. The Objects are organized in a hierarchy. This hierarchical structure applies to the organization of objects in a Web document.', 'Document − Each HTML document that gets loaded into a window becomes a document object. The document contains the contents of the page.', 'Dart provides the dart:html library to manipulate objects and elements in the DOM. Console-based applications cannot use the dart:html library. To use the HTML library in the web applications, import dart:html −', 'The querySelector() function returns the first element that matches the specified group of selectors. ""selectors should be string using CSS selector syntax as given below', 'It will create a sample project, DemoWebApp. There is a pubspec.yaml file containing the dependencies which need to be downloaded.', 'If you are connected to Web, then these will be downloaded automatically, else you can right-click on the pubspec.yaml and get dependencies.', 'The dart:html library provides the onClick event for DOM Elements. The syntax shows how an element could handle a stream of click events.', 'The querySelector() function returns the element from the given DOM and onClick.listen() will take an eventHandler method which will be invoked when a click event is raised. The syntax of eventHandler is given below −']","[""\nimport 'dart:html';\n"", '\nElement querySelector(String selectors);\n', ""\nvar element1 = document.querySelector('.className'); \nvar element2 = document.querySelector('#id'); \n"", ""\nname: 'DemoWebApp' \nversion: 0.0.1 \ndescription: An absolute bare-bones web app. \n\n#author: Your Name <email@example.com> \n#homepage: https://www.example.com  \nenvironment:   \n   sdk: '>=1.0.0 <2.0.0'  \ndependencies:   \n   browser: '>=0.10.0 <0.11.0'   dart_to_js_script_rewriter: '^1.0.1'  \ntransformers: \n- dart_to_js_script_rewriter \n"", '\n<!DOCTYPE html>   \n<html> \n   <head>     \n      <meta charset = ""utf-8"">     \n      <meta http-equiv = ""X-UA-Compatible"" content = ""IE = edge"">     \n      <meta name = ""viewport"" content = ""width = device-width, initial-scale = 1.0"">\n      <meta name = ""scaffolded-by"" content = ""https://github.com/google/stagehand"">\n      <title>DemoWebApp</title>     \n      <link rel = ""stylesheet"" href = ""styles.css"">     \n      <script defer src = ""main.dart"" type = ""application/dart""></script>\n      <script defer src = ""packages/browser/dart.js""></script> \n   </head>\n   \n   <body>   \n      <h1>\n         <div id = ""output""></div> \n      </h1>  \n   </body> \n</html> \n', ""\nimport 'dart:html';  \nvoid main() {   \n   querySelector('#output').text = 'Your Dart web dom app is running!!!.'; \n} \n"", ""\nquerySelector('#Id').onClick.listen(eventHanlderFunction); \n"", '\nvoid eventHanlderFunction (MouseEvent event){ } \n', '\n<!DOCTYPE html> \n<html> \n   <head> \n      <meta charset = ""utf-8""> \n      <meta http-equiv = ""X-UA-Compatible"" content = ""IE = edge""> \n      <meta name = ""viewport"" content = ""width = device-width, initial-scale = 1.0""> \n      <meta name = ""scaffolded-by"" content =""https://github.com/google/stagehand""> \n      <title>DemoWebApp</title> \n      <link rel = ""stylesheet"" href = ""styles.css""> \n      <script defer src = ""TestEvent.dart"" type=""application/dart""></script> \n      <script defer src = ""packages/browser/dart.js""></script> \n   </head> \n   \n   <body> \n      <div id = ""output""></div> \n      <h1> \n         <div> \n            Enter you name : <input type = ""text"" id = ""txtName""> \n            <input type = ""button"" id = ""btnWish"" value=""Wish""> \n         </div> \n      </h1> \n      <h2 id = ""display""></h2> \n   </body>\n   \n</html>\n', ""\nimport 'dart:html'; \nvoid main() { \n   querySelector('#btnWish').onClick.listen(wishHandler); \n}  \nvoid wishHandler(MouseEvent event){ \n   String name = (querySelector('#txtName')  as InputElement).value; \n   querySelector('#display').text = 'Hello Mr.'+ name; \n}\n""]","[""\nimport 'dart:html';\n"", '\nElement querySelector(String selectors);\n', ""\nvar element1 = document.querySelector('.className'); \nvar element2 = document.querySelector('#id'); \n"", ""\nquerySelector('#Id').onClick.listen(eventHanlderFunction); \n"", '\nvoid eventHanlderFunction (MouseEvent event){ } \n']",[],"['Window − Top of the hierarchy. It is the outmost element of the object hierarchy.|||Document − Each HTML document that gets loaded into a window becomes a document object. The document contains the contents of the page.|||Elements − represent the content on a web page. Examples include the text boxes, page title etc.|||Nodes − are often elements, but they can also be attributes, text, comments, and other DOM types.|||']"
