CREATE DATABASE  IF NOT EXISTS `web_scraped_data` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `web_scraped_data`;
-- MySQL dump 10.13  Distrib 8.0.26, for Win64 (x86_64)
--
-- Host: localhost    Database: web_scraped_data
-- ------------------------------------------------------
-- Server version	8.0.26

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `javatpoint_kotlin_data`
--

DROP TABLE IF EXISTS `javatpoint_kotlin_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `javatpoint_kotlin_data` (
  `page_no` int NOT NULL,
  `main_headings` varchar(90) DEFAULT NULL,
  `main_contents` varchar(379) DEFAULT NULL,
  `links` text,
  `image_urls` varchar(1035) DEFAULT NULL,
  `video_urls` varchar(2) DEFAULT NULL,
  `sub_headings_h2` varchar(812) DEFAULT NULL,
  `sub_headings_h3` varchar(777) DEFAULT NULL,
  `sub_headings_h4` varchar(299) DEFAULT NULL,
  `facts` varchar(1676) DEFAULT NULL,
  `definitions` varchar(1953) DEFAULT NULL,
  `explanations` text,
  `codes` text,
  `outputs` text,
  `table_data` text,
  `list_items` varchar(2810) DEFAULT NULL,
  PRIMARY KEY (`page_no`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `javatpoint_kotlin_data`
--

LOCK TABLES `javatpoint_kotlin_data` WRITE;
/*!40000 ALTER TABLE `javatpoint_kotlin_data` DISABLE KEYS */;
INSERT INTO `javatpoint_kotlin_data` VALUES (0,'[\'Kotlin Tutorial\']','[\'Kotlin tutorial provides basic and advanced concepts of Kotlin programming language. Our Kotlin tutorial is designed for beginners and professionals both.\']','[\'https://www.javatpoint.com/kotlin-environment-setup-command-line\', \'https://www.javatpoint.com/kotlin-tutorial\', \'https://www.javatpoint.com/kotlin-environment-setup-command-line\', \'https://www.javatpoint.com/kotlin-hello-world-program-command-line\', \'https://www.javatpoint.com/kotlin-first-program-concept\', \'https://www.javatpoint.com/kotlin-environment-setup-ide\', \'https://www.javatpoint.com/kotlin-first-program-on-ide\', \'https://www.javatpoint.com/kotlin-variable\', \'https://www.javatpoint.com/kotlin-data-type\', \'https://www.javatpoint.com/kotlin-type-conversion\', \'https://www.javatpoint.com/kotlin-operator\', \'https://www.javatpoint.com/kotlin-input-output\', \'https://www.javatpoint.com/kotlin-comment\', \'https://www.javatpoint.com/kotlin-if-expression\', \'https://www.javatpoint.com/kotlin-when-expression\', \'https://www.javatpoint.com/kotlin-for-loop\', \'https://www.javatpoint.com/kotlin-while-loop\', \'https://www.javatpoint.com/kotlin-do-while-loop\', \'https://www.javatpoint.com/kotlin-return-and-jump\', \'https://www.javatpoint.com/kotlin-continue-structure\', \'https://www.javatpoint.com/kotlin-function\', \'https://www.javatpoint.com/kotlin-recursion-function\', \'https://www.javatpoint.com/kotlin-default-and-named-argument\', \'https://www.javatpoint.com/kotlin-lambdas\', \'https://www.javatpoint.com/kotlin-higher-order-function\', \'https://www.javatpoint.com/kotlin-inline-function\', \'https://www.javatpoint.com/kotlin-array\', \'https://www.javatpoint.com/kotlin-string\', \'https://www.javatpoint.com/kotlin-exception-handling\', \'https://www.javatpoint.com/kotlin-try-catch\', \'https://www.javatpoint.com/kotlin-multiple-catch-block\', \'https://www.javatpoint.com/kotlin-nested-try-block\', \'https://www.javatpoint.com/kotlin-finally-block\', \'https://www.javatpoint.com/kotlin-throw-keyword\', \'https://www.javatpoint.com/kotlin-nullable-and-non-nullable-types\', \'https://www.javatpoint.com/kotlin-smart-cast\', \'https://www.javatpoint.com/kotlin-unsafe-and-safe-cast-operator\', \'https://www.javatpoint.com/kotlin-elvis-operator\', \'https://www.javatpoint.com/kotlin-mutable-array\', \'https://www.javatpoint.com/kotlin-collections\', \'https://www.javatpoint.com/kotlin-list\', \'https://www.javatpoint.com/kotlin-mutablelist-mutablelistof\', \'https://www.javatpoint.com/kotlin-arraylist\', \'https://www.javatpoint.com/kotlin-arraylist-arraylistof\', \'https://www.javatpoint.com/kotlin-map\', \'https://www.javatpoint.com/kotlin-hashmap\', \'https://www.javatpoint.com/kotlin-hashmap-hashmapof\', \'https://www.javatpoint.com/kotlin-mutablemap\', \'https://www.javatpoint.com/kotlin-set\', \'https://www.javatpoint.com/kotlin-mutableset\', \'https://www.javatpoint.com/kotlin-hashset\', \'https://www.javatpoint.com/kotlin-annotations\', \'https://www.javatpoint.com/kotlin-reflection\', \'https://www.javatpoint.com/kotlin-class-and-object\', \'https://www.javatpoint.com/kotlin-nested-class-and-inner-class\', \'https://www.javatpoint.com/kotlin-constructor\', \'https://www.javatpoint.com/kotlin-visibility-modifier\', \'https://www.javatpoint.com/kotlin-inheritance\', \'https://www.javatpoint.com/kotlin-abstract-class\', \'https://www.javatpoint.com/kotlin-interface\', \'https://www.javatpoint.com/kotlin-data-class\', \'https://www.javatpoint.com/kotlin-sealed-class\', \'https://www.javatpoint.com/kotlin-extension-function\', \'https://www.javatpoint.com/kotlin-generics\', \'https://www.javatpoint.com/kotlin-integer-range\', \'https://www.javatpoint.com/kotlin-working-of-ranges\', \'https://www.javatpoint.com/kotlin-utility-functions\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-java-from-kotlin\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-kotlin-from-java\', \'https://www.javatpoint.com/kotlin-regular-expressions-introduction\', \'https://www.javatpoint.com/kotlin-regex-pattern\', \'https://www.javatpoint.com/kotlin-install-android-studio\', \'https://www.javatpoint.com/kotlin-hello-world-app\', \'https://www.javatpoint.com/kotlin-android-textview-and-edittext\', \'https://www.javatpoint.com/kotlin-android-toast\', \'https://www.javatpoint.com/kotlin-android-button\', \'https://www.javatpoint.com/kotlin-android-custom-toast\', \'https://www.javatpoint.com/kotlin-android-explicit-intent\', \'https://www.javatpoint.com/kotlin-android-implicit-intent\', \'https://www.javatpoint.com/kotlin-android-listview\', \'https://www.javatpoint.com/kotlin-android-alertdialog\', \'https://www.javatpoint.com/kotlin-android-context-menu\', \'https://www.javatpoint.com/kotlin-android-custom-listview\', \'https://www.javatpoint.com/kotlin-android-options-menu\', \'https://www.javatpoint.com/kotlin-android-popup-menu\', \'https://www.javatpoint.com/kotlin-android-webview\', \'https://www.javatpoint.com/kotlin-android-seekbar\', \'https://www.javatpoint.com/kotlin-android-tablayout-with-framelayout\', \'https://www.javatpoint.com/kotlin-android-tablayout-with-viewpager\', \'https://www.javatpoint.com/kotlin-android-xml-parsing-using-dom-parser\', \'https://www.javatpoint.com/kotlin-android-xml-parsing-using-sax-parser\', \'https://www.javatpoint.com/kotlin-android-xmlpullparser-tutorial\', \'https://www.javatpoint.com/kotlin-environment-setup-command-line\', \'https://www.javatpoint.com/kotlin-environment-setup-command-line\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-tutorial.png\']','[]','[\'What is Kotlin\', \' History of Kotlin\', \'Features of Kotlin\', \'Kotlin Index\', \'Prerequisite\', \'Audience\', \'Problem\']','[]','[]','[\'Kotlin is a statically-typed, general-purpose programming language. It is widely used to develop android applications.\', \'Kotlin Tutorial\', \'Control Flow\', \'Exception Handling\', \'Null Safety\', \'Collections\', \'Annotations\', \'Reflection\', \'Kotlin OOPs\', \'Java Interoperability\', \'Kotlin Android Tutorial\', \'Before learning Kotlin Tutorial, you must have the basic knowledge of any programming language.\', \'Our Kotlin tutorial is designed to help beginners and professionals.\', \'We assure that you will not get any mistake in this Kotlin Tutorial. However, if there is any mistake, please post the problem in the contact form.\']','[\'Our Kotlin Tutorial includes all topics of Kotlin such as introduction, architecture, class, object, inheritance, interface, generics, delegation, functions, mixing Java and Kotlin, Java vs. Kotlin, etc.\', \'Kotlin is a general-purpose, statically typed, and open-source programming language. It runs on JVM and can be used anywhere Java is used today. It can be used to develop Android apps, server-side apps and much more.\', \'Kotlin was developed by JetBrains team. A project was started in 2010 to develop the language and officially, first released in February 2016. Kotlin was developed under the Apache 2.0 license.\']','[]','[]','[]','[]','[\'|||Concise:  Kotlin reduces writing the extra codes. This makes Kotlin more concise.|||Null safety:  Kotlin is null safety language. Kotlin aimed to eliminate the NullPointerException (null reference) from the code.Interoperable.|||Interoperable:  Kotlin easily calls the Java code in a natural way as well as Kotlin code can be used by Java.|||Smart cast:  It explicitly typecasts the immutable values and inserts the value in its safe cast automatically.|||Compilation Time:  It has better performance and fast compilation time.|||Tool-friendly:  Kotlin programs are build using the command line as well as any of Java IDE.|||Extension function:  Kotlin supports extension functions and extension properties which means it helps to extend the functionality of classes without touching their code.||||||Kotlin Tutorial|||Environment Setup|||Hello World Program|||First Program Concept|||Environment Setup (IDE)|||First Program (IDE)|||Kotlin Variable|||Kotlin Data Type|||Kotlin Type Conversion|||Kotlin Operator|||Kotlin Input/Output|||Kotlin Comment||||||Kotlin if Expression|||Kotlin when Expression|||Kotlin for Loop|||Kotlin while Loop|||Kotlin Do while Loop|||Return and Jump|||Continue Structure||||||Kotlin Function|||Recursion Function|||Default and Named Argument|||Kotlin Lambdas|||Higher order Function|||Kotlin Inline Function||||||Kotlin Array||||||Kotlin String||||||Exception Handling|||Kotlin Try Catch|||Multiple Catch Block|||Nested Try Block|||Kotlin Finally Block|||Kotlin Throw Keyword||||||Nullable Non Nullable Types|||Kotlin Smart Cast|||Unsafe and Safe Cast|||Kotlin Elvis Operator||||||Mutable Array|||Kotlin Collections|||List: listOf()|||mutableListOf()|||Kotlin ArrayList|||arrayListOf()|||Map: mapOf()|||Kotlin HashMap|||hashMapOf()|||mutableMapOf()|||Set: setOf()|||mutableSetOf()|||hashSetOf()||||||Kotlin Annotations||||||Kotlin Reflection||||||Class and Object|||Nested and Inner Class|||Kotlin Constructor|||Visibility Modifier|||Kotlin Inheritance|||Abstract Class|||Kotlin Interface|||Data Class|||Sealed Class|||Extension Function|||Kotlin Generics||||||Integer type range|||Kotlin Working Ranges|||Kotlin Utility Function||||||Calling Java code from Kotlin|||Calling Kotlin code from Java||||||Regular Expressions Introduction|||Regex patterns||||||Install Android Studio|||Hello World App|||Android TextView and EditText|||Kotlin Android Toast|||Android Button|||Android Custom Toast|||Android Explicit Intent|||Android Implicit Intent|||Android ListView|||Android AlertDialog|||Android Context Menu|||Android Custom ListView|||Android Options Menu|||Android Popup Menu|||Android WebView|||Kotlin Android SeekBar|||TabLayout with FrameLayout|||TabLayout with ViewPager|||XML Parsing using DOM Parser|||XML Parsing using SAX Parser|||Kotlin Android XMLPullParser|||\']'),(1,'[\'Kotlin Environment Setup (Command line)\']','[\'Since Kotlin runs on JVM, it is necessary to install JDK and setup the JDK and JRE path in local system environment variable. \']','[\'https://www.javatpoint.com/kotlin-hello-world-program-command-line\', \'https://www.javatpoint.com/what-is-kotlin\', \'https://www.javatpoint.com/https://www.javatpoint.com/how-to-set-path-in-java\', \'https://www.javatpoint.com/https://github.com/JetBrains/kotlin/releases/tag/v1.2.21\', \'https://www.javatpoint.com/kotlin-hello-world-program-command-line\', \'https://www.javatpoint.com/what-is-kotlin\', \'https://www.javatpoint.com/kotlin-hello-world-program-command-line\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup4.png\']','[]','[\'Setup Kotlin for Command Line\']','[\'Prerequisite\']','[]','[\'To setup Kotlin for command line, you have to pre install JDK 1.6+ or above.\nTo install JDK and set path of JDK and JRE refer link Set Path in Java .\', \'To setup Kotlin for command line, we need to go through following steps:\', \'1. Download the Kotlin Compiler from GitHub Releases https://github.com/JetBrains/kotlin/releases/tag/v1.2.21 . \', \'2. Extract downloaded zip in any of system location (in my case it is in C drive).\', \'3. Copy the path up to bin directory of kotlinc.\', \'4. Open Computer properties and click Environment variables.\', \'5. Click on edit path\', \'6. Past the path of kotlinc bin directory in variable value.\']','[]','[]','[]','[]','[]','[]'),(2,'[\'Kotlin Hello World Program in Command line.\']','[\'To write Kotlin program, we can use any text editor like: Notepad++. Put the following code into any text file and save.\']','[\'https://www.javatpoint.com/kotlin-first-program-concept\', \'https://www.javatpoint.com/kotlin-environment-setup-command-line\', \'https://www.javatpoint.com/kotlin-first-program-concept\', \'https://www.javatpoint.com/kotlin-environment-setup-command-line\', \'https://www.javatpoint.com/kotlin-first-program-concept\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-program-command-line1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-program-command-line2.png\']','[]','[\'Compile Kotlin File\', \'Run Kotlin File\']','[]','[]','[\'Save the file with name hello.kt, .kt extension is used for Kotlin file.\', \'Open command prompt and go to directory location where file is stored. Compile hello.kt file with following command.\', \'\n\r\njava -jar hello.jar\r\n\n\n\n\n\nNext TopicKotlin First Program Concept\n\n\n\n← prev\nnext →\n\n\n\']','[\'To run the Kotlin .jar (hello.jar) file run the following command.\n\r\njava -jar hello.jar\r\n\n\n\n\n\nNext TopicKotlin First Program Concept\n\n\n\n← prev\nnext →\n\n\n\']','[]','[\'fun main(args: Array<String>){\', \'println(\"Hello World!\")\', \'kotlinc hello.kt -include-runtime -d hello.jar\', \'java -jar hello.jar\']','[]','[]','[]'),(3,'[\'Kotlin First Program Concept\']','[\"Let\'s understand the concepts and keywords of Kotlin program \'Hello World.kt\'.\"]','[\'https://www.javatpoint.com/kotlin-environment-setup-ide\', \'https://www.javatpoint.com/kotlin-hello-world-program-command-line\', \'https://www.javatpoint.com/kotlin-environment-setup-ide\', \'https://www.javatpoint.com/kotlin-hello-world-program-command-line\', \'https://www.javatpoint.com/kotlin-environment-setup-ide\']','[]','[]','[]','[]','[\'Note: Semicolons are optional in Kotlin.\']','[]','[\'1. The first line of program defines a function called main(). In Kotlin, function is a group of statements that performs a group of tasks. Functions start with a keyword fun followed by function name (main in this case).\', \'The main () function takes an array of string  (Array<String>) as a parameter and returns Unit. Unit is used to indicate the function and does not return any value (void as in Java). Declaring Unit is an optional, we do not declare it explicitly.\', \'2. The second line used to print a String \"Hello World!\". To print standard output we use wrapper println() over standard Java library functions (System.out.println()).\']','[\'The main() function is the entry point of the program, it is called first when Kotlin program starts execution.\n2. The second line used to print a String \"Hello World!\". To print standard output we use wrapper println() over standard Java library functions (System.out.println()).\n\r\nprintln(\"Hello World!\")\r\n\nNote: Semicolons are optional in Kotlin.\n\n\nNext TopicKotlin Environment Setup (IDE)\n\n\n\n← prev\nnext →\n\n\n\', \'\n2. The second line used to print a String \"Hello World!\". To print standard output we use wrapper println() over standard Java library functions (System.out.println()).\n\r\nprintln(\"Hello World!\")\r\n\nNote: Semicolons are optional in Kotlin.\n\n\nNext TopicKotlin Environment Setup (IDE)\n\n\n\n← prev\nnext →\n\n\n\']','[\'fun main(args: Array<String>) {\', \'println(\"Hello World!\")\', \'fun main(args: Array<String>): Unit {\', \'println(\"Hello World!\")\']','[]','[]','[]'),(4,'[\'Kotlin Environment Setup (IDE)\']','[\'Since, Kotlin runs on JVM, it is necessary to install JDK and setup the JDK and JRE path in local system environment variable. Use this link https://www.javatpoint.com/how-to-set-path-in-java to setup JDK path.\']','[\'https://www.javatpoint.com/kotlin-first-program-on-ide\', \'https://www.javatpoint.com/kotlin-first-program-concept\', \'https://www.javatpoint.com/https://www.javatpoint.com/how-to-set-path-in-java\', \'https://www.javatpoint.com/https://www.jetbrains.com/idea/download/\', \'https://www.javatpoint.com/https://developer.android.com/studio/preview/index.html\', \'https://www.javatpoint.com/https://www.eclipse.org/downloads/\', \'https://www.javatpoint.com/kotlin-first-program-on-ide\', \'https://www.javatpoint.com/kotlin-first-program-concept\', \'https://www.javatpoint.com/kotlin-first-program-on-ide\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup-ide.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup-ide1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup-ide2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup-ide3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup-ide4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-environment-setup-ide5.png\']','[]','[\'Install JDK and Setup JDK path\', \'Install IDE for Kotlin\', \'Steps to Setup IntelliJ IDEA\']','[\'1. Download IntelliJ IDEA.\', \'2. Run the downloaded setup.\', \'3. Click next to continue.\', \'4. Choose installation location.\', \'5. Choose start menu folder and click Install.\', \'6. Click Finish to complete Installation.\']','[]','[\'In this tutorial, we are going to use IntelliJ IDEA for our Kotlin program development.\']','[\"There are various Java IDE available which supports Kotlin project development. We can choose these IDE according to our compatibility. The download links of these IDE\'s are given below.\"]','[]','[]','[]','[\'IDE Name|||Download links&&&IntelliJ IDEA|||https://www.jetbrains.com/idea/download/ &&&Android Studio|||https://developer.android.com/studio/preview/index.html&&&Eclipse|||https://www.eclipse.org/downloads/\']','[]'),(5,'[\"Kotlin First Program Printing \'HelloWorld\'\"]','[\"Let\'s create a Kotlin first example using IntelliJ IDEA IDE.\"]','[\'https://www.javatpoint.com/kotlin-variable\', \'https://www.javatpoint.com/kotlin-environment-setup-ide\', \'https://www.javatpoint.com/kotlin-variable\', \'https://www.javatpoint.com/kotlin-environment-setup-ide\', \'https://www.javatpoint.com/kotlin-variable\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide6.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-first-program-on-ide7.png\']','[]','[\'Steps to Create First Example\']','[]','[]','[\"1. Open IntelliJ IDEA and click on Create New Project\'.\", \'2. Select Java option, provide project SDK path and mark check on Kotlin/JVM frameworks.\', \"3. Provide the project details in new frame and click \'Finish\'.\", \'4. Create a new Kotlin file to run Kotlin first example. Go to src ->New->Kotlin File/Class.\', \"5. Enter the file name \'HelloWorld\' and click \'OK\'.\", \'6. Write the following code in \'HelloWorld.kt\' file. Kotlin files and classes are saved with \".kt\" extension.\', \'We will discuss the detail of this code later in upcoming tutorial.\', \'7. Now we can run this program by right clicking on file and select Run option.\', \"8. Finally, we got the output of program on console, displaying \'HelloWorld\' message.\"]','[]','[]','[\'fun main(args: Array<String>) {\', \'println(\"Hello World!\")\']','[]','[]','[]'),(6,'[\'Kotlin Variable\']','[\'Variable refers to a memory location. It is used to store data. The data of variable can be changed and reused depending on condition or on information passed to the program.\']','[\'https://www.javatpoint.com/kotlin-data-type\', \'https://www.javatpoint.com/kotlin-first-program-on-ide\', \'https://www.javatpoint.com/kotlin-data-type\', \'https://www.javatpoint.com/kotlin-first-program-on-ide\', \'https://www.javatpoint.com/kotlin-data-type\']','[]','[]','[\'Variable Declaration\']','[\'Difference between var and val\']','[]','[\'Kotlin variable is declared using keyword var and val. \', \'The difference between var and val is specified later on this page.\', \'We can also explicitly specify the type of variable while declaring it.\', \'It is not necessary to initialize variable at the time of its declaration. Variable can be initialized later on when the program is executed.\', \'Here, the value of variable salary can be changed (from 30000 to 40000) because variable salary is declared using var keyword.\', \'Here, we cannot re-assign the variable language from \"Java\" to \"Kotlin\" because the variable is declared using val keyword.\']','[]','[\'Here, variable language is String type and variable salary is Int type. We don\'t require specifying the type of variable explicitly. Kotlin complier knows this by initilizer expression (\"Java\" is a String and 30000 is an Int value). This is called type inference in programming.\']','[\'var language =\"Java\"\', \'val salary = 30000\', \'var language: String =\"Java\"\', \'val salary: Int = 30000\', \'var language: String\', \'... ... ...\', \'language = \"Java\"\', \'val salary: Int\', \'... ... ...\', \'salary = 30000\', \'var salary = 30000\', \'salary = 40000 //execute\', \'val language = \"Java\"\', \'language = \"Kotlin\" //Error\']','[]','[]','[\'|||var (Mutable variable): We can change the value of variable declared using var keyword later in the program.|||val (Immutable variable): We cannot change the value of variable which is declared using val keyword.|||\']'),(7,'[\'Kotlin Data Type\']','[\'Data type (basic type) refers to type and size of data associated with variables and functions. Data type is used for declaration of memory location of variable which determines the features of data.\']','[\'https://www.javatpoint.com/kotlin-type-conversion\', \'https://www.javatpoint.com/kotlin-variable\', \'https://www.javatpoint.com/kotlin-type-conversion\', \'https://www.javatpoint.com/kotlin-variable\', \'https://www.javatpoint.com/kotlin-type-conversion\']','[]','[]','[\'Number Types\', \'Character (Char) Data Type\', \'Boolean Data Types\', \'Array\', \'String\']','[\'Creating Array using library function arrayOf()\', \'Creating Array using Array() constructor\', \'Types of String\']','[]','[\'In Kotlin, everything is an object, which means we can call member function and properties on any variable.\', \'Kotlin built in data type are categorized as following different categories:\', \'Number types of data are those which hold only number type data variables. It is further categorized into different Integer and Floating point.\', \"Characters are represented using the keyword Char. Char types are declared using single quotes (\'\').\", \'Boolean data is represented using the type Boolean. It contains values either true or false.\', \'The elements of array are accessed through their index values (array[index]). Array index are start from zero.\', \'Creating array using Array() constructor takes two arguments in Array() constructor:\', \'String in Kotlin is represented by String class. String is immutable, which means we cannot change the elements in String.\', \'String declaration:\', \'String are categorize into two types. These are:\', \'1. Escaped String:  Escape String is declared within double quote (\" \") and may contain escape characters like \'\\n\', \'\\t\', \'\\b\' etc.\']','[\'Arrays in Kotlin are represented by the Array class. Arrays are created using library function arrayOf() and Array() constructor. Array has get (), set() function, size property as well as some other useful member functions.\', \'The arrayOf() function creates array of wrapper types. The item value are passed inside arrayOf() function like arrayOf(1,2,3) which creates an array[1,2,3]. \', \'2. Raw String:  Row String is declared within triple quote (\"\"\" \"\"\"). It provides facility to declare String in new lines and contain multiple lines. Row String cannot contain any escape character.\']','[]','[\"val value1 = \'A\'\", \'val  value2: Char\', \"value2= \'A\'\", \'val flag = true\', \'val id = arrayOf(1,2,3,4,5)\', \'val firstId = id[0]\', \'val lasted = id[id.size-1]\', \'val asc = Array(5, { i -> i * 2 }) //asc[0,2,4,6,8]\', \'val text =\"Hello, JavaTpoint\"\', \'val text1 =\"Hello, JavaTpoint\"\', \'val text2 =\"Hello, JavaTpoint\\n\"\', \'val text3 =\"Hello, \\nJavaTpoint\"\', \'val text1 =\"\"\"\', \'Welcome\', \'To\', \'JavaTpoint\', \'\"\"\"\']','[]','[\'Data Type|||Bit Width (Size)|||Data Range&&&Byte|||8 bit|||-128 to 127&&&Short|||16 bit|||-32768 to 32767&&&Int|||32 bit|||-2,147,483,648 to 2,147,483,647&&&Long|||64 bit|||-9,223,372,036,854,775,808 to +9,223,372,036,854,775,807&&&Float|||32 bit|||1.40129846432481707e-45 to 3.40282346638528860e+38&&&Double|||64 bit|||4.94065645841246544e-324 to 1.79769313486231570e+308\', \'Data Type|||Bit Width (Size)|||Data Range&&&Char|||4 bit|||-128 to 127\', \'Data Type|||Bit Width (Size)|||Data Value&&&Boolean|||1 bit|||true or false\']','[\'|||Number|||Character|||Boolean|||Array|||String|||&&&|||First argument as a size of array, and|||Second argument as the function, which is used to initialize and return the value of array element given its index.|||\']'),(8,'[\'Kotlin Type Conversion\']','[\'Type conversion is a process in which one data type variable is converted into another data type. In Kotlin, implicit conversion of smaller data type into larger data type is not supported (as it supports in java). For example Int cannot be assigned into Long or Double.\']','[\'https://www.javatpoint.com/kotlin-operator\', \'https://www.javatpoint.com/kotlin-data-type\', \'https://www.javatpoint.com/kotlin-operator\', \'https://www.javatpoint.com/kotlin-data-type\', \'https://www.javatpoint.com/kotlin-operator\']','[]','[]','[\'In Java\', \'In Kotlin\']','[\'Kotlin Type Conversion Example\']','[]','[\'The list of helper functions used for numeric conversion in Kotlin is given below:\', \'Let see an example to convert from Int to Long.\', \'We can also converse from larger data type to smaller data type.\']','[\'However in Kotlin, conversion is done by explicit in which smaller data type is converted into larger data type and vice-versa. This is done by using helper function.\']','[]','[\'int value1 = 10;\', \'long value2 = value1;  //Valid code\', \'var value1 = 10\', \'val value2: Long = value1  //Compile error, type mismatch\', \'var value1 = 10\', \'val value2: Long = value1.toLong()\', \'fun main(args : Array<String>) {\', \'var value1 = 100\', \'val value2: Long =value1.toLong()\', \'println(value2)\', \'fun main(args : Array<String>) {\', \'var value1: Long = 200\', \'val value2: Int =value1.toInt()\', \'println(value2)\']','[]','[]','[\'|||toByte()|||toShort()|||toInt()|||toLong()|||toFloat()|||toDouble()|||toChar()|||\']'),(9,'[\'Kotlin Operator\']','[\'Operators are special characters which perform operation on operands (values or variable).There are various kind of operators available in Kotlin.\']','[\'https://www.javatpoint.com/kotlin-input-output\', \'https://www.javatpoint.com/kotlin-type-conversion\', \'https://www.javatpoint.com/kotlin-input-output\', \'https://www.javatpoint.com/kotlin-type-conversion\', \'https://www.javatpoint.com/kotlin-input-output\']','[]','[]','[\'Arithmetic Operator\', \'Relation Operator\', \'Assignment operator\', \'Unary Operator\', \'Logical Operator\', \'Bitwise Operation\']','[\'Example of Arithmetic Operator\']','[]','[\'Arithmetic operators are used to perform basic mathematical operations such as addition (+), subtraction (-), multiplication (*), division (/) etc.\', \'Relation operator shows the relation and compares between operands. Following are the different relational operators:\', \'Example of Relation Operator\', \'Assignment operator \"=\" is used to assign a value to another variable. The assignment of value takes from right to left.\', \'Example of Assignment operator\', \'Unary operator is used with only single operand. Following are some unary operator given below.\', \'Example of Unary Operator\', \'Logical operators are used to check conditions between operands. List of logical operators are given below.\', \'Example of Logical Operator\', \'In Kotlin, there is not any special bitwise operator. Bitwise operation is done using named function.\', \'Example of Bitwise Operation\']','[]','[\'Output:\nb is greater than a.\r\nmax = 10\r\n\nAssignment operator\nAssignment operator \"=\" is used to assign a value to another variable. The assignment of value takes from right to left.\n\n\nOperator\nDescription\nExpression\nConvert to\n\n\n+=\nadd and assign\na+=b\na.plusAssign(b)\n\n\n-=\nsubtract and assign\na-=b\na.minusAssign(b)\n\n\n*=\nmultiply and assign\na*=b\na.timesAssign(b)\n\n\n/=\ndivide and assign\na/=b\na.divAssign(b)\n\n\n%=\nmod and assign\na%=b\na.remAssign(b)\n\n\nExample of Assignment operator\n\r\nfun main(args : Array<String>) {\r\n\r\n    var a =20;var b=5\r\n    a+=b\r\n    println(\"a+=b :\"+ a)\r\n    a-=b\r\n    println(\"a-=b :\"+ a)\r\n    a*=b\r\n    println(\"a*=b :\"+ a)\r\n    a/=b\r\n    println(\"a/=b :\"+ a)\r\n    a%=b\r\n    println(\"a%=b :\"+ a)\r\n\r\n}\r\n\nOutput:\na+=b :25\r\na-=b :20\r\na*=b :100\r\na/=b :20\r\na%=b :0\r\n\nUnary Operator\nUnary operator is used with only single operand. Following are some unary operator given below.\n\n\nOperator\nDescription\nExpression\nConvert to\n\n\n+\nunary plus\n+a\na.unaryPlus()\n\n\n-\nunary minus\n-a\na.unaryMinus()\n\n\n++\nincrement by 1\n++a\na.inc()\n\n\n--\ndecrement by 1\n--a\na.dec()\n\n\n!\nnot\n!a\na.not()\n\n\nExample of Unary Operator\n\r\nfun main(args: Array<String>){\r\n    var a=10\r\n    var b=5\r\n    var flag = true\r\n    println(\"+a :\"+ +a)\r\n    println(\"-b :\"+ -b)\r\n    println(\"++a :\"+ ++a)\r\n    println(\"--b :\"+ --b)\r\n    println(\"!flag :\"+ !flag)\r\n}\r\n\nOutput:\n+a :10\r\n-b :-5\r\n++a :11\r\n--b :4\r\n!flag :false\r\n\nLogical Operator\nLogical operators are used to check conditions between operands. List of logical operators are given below.\n\n\nOperator\nDescription\nExpression\nConvert to\n\n\n&&\nreturn true if all expression are true\n(a>b) && (a>c)\n(a>b) and (a>c)\n\n\n||\nreturn true if any expression are true\n(a>b) || (a>c)\n(a>b) or(a>c)\n\n\n!\nreturn complement of expression\n!a\na.not()\n\n\nExample of Logical Operator\n\r\nfun main(args: Array<String>){\r\n    var a=10\r\n    var b=5\r\n    var c=15\r\n    var flag = false\r\n    var result: Boolean\r\n    result = (a>b) && (a>c)\r\n    println(\"(a>b) && (a>c) :\"+ result)\r\n    result = (a>b) || (a>c)\r\n    println(\"(a>b) || (a>c) :\"+ result)\r\n    result = !flag\r\n    println(\"!flag :\"+ result)\r\n\r\n}\r\n\nOutput:\n(a>b) && (a>c) :false\r\n(a>b) || (a>c) :true\r\n!flag :true\r\n\nBitwise Operation\nIn Kotlin, there is not any special bitwise operator. Bitwise operation is done using named function.\n\n\nNamed Function\nDescription\nExpression\n\n\nshl (bits)\nsigned shift left\na.shl(b)\n\n\nshr (bits)\nsigned shift right\na.shr(b)\n\n\nushr (bits)\nunsigned shift right\na.ushr(b)\n\n\nand (bits)\nbitwise and\na.and(b)\n\n\nor (bits)\nbitwise or\na.or(b)\n\n\nxor (bits)\nbitwise xor\na.xor(b)\n\n\ninv()\nbitwise inverse\na.inv()\n\n\nExample of Bitwise Operation\n\r\nfun main(args: Array<String>){\r\n    var a=10\r\n    var b=2\r\n\r\n    println(\"a.shl(b): \"+a.shl(b))\r\n    println(\"a.shr(b): \"+a.shr(b))\r\n    println(\"a.ushr(b:) \"+a.ushr(b))\r\n    println(\"a.and(b): \"+a.and(b))\r\n    println(\"a.or(b): \"+a.or(b))\r\n    println(\"a.xor(b): \"+a.xor(b))\r\n    println(\"a.inv(): \"+a.inv())\r\n\r\n}\r\n\nOutput:\na.shl(b): 40\r\na.shr(b): 2\r\na.ushr(b:) 2\r\na.and(b): 2\r\na.or(b): 10\r\na.xor(b): 8\r\na.inv(): -11\r\n\n\n\nNext TopicKotlin Input/Output\n\n\n\n← prev\nnext →\n\n\n\']','[\'fun main(args : Array<String>) {\', \'var a=10;\', \'var b=5;\', \'println(a+b);\', \'println(a-b);\', \'println(a*b);\', \'println(a/b);\', \'println(a%b);\', \'fun main(args : Array<String>) {\', \'val a = 5\', \'val b = 10\', \'val max = if (a > b) {\', \'println(\"a is greater than b.\")\', \'a\', \'} else{\', \'println(\"b is greater than a.\")\', \'b\', \'println(\"max = $max\")\', \'fun main(args : Array<String>) {\', \'var a =20;var b=5\', \'a+=b\', \'println(\"a+=b :\"+ a)\', \'a-=b\', \'println(\"a-=b :\"+ a)\', \'a*=b\', \'println(\"a*=b :\"+ a)\', \'a/=b\', \'println(\"a/=b :\"+ a)\', \'a%=b\', \'println(\"a%=b :\"+ a)\', \'fun main(args: Array<String>){\', \'var a=10\', \'var b=5\', \'var flag = true\', \'println(\"+a :\"+ +a)\', \'println(\"-b :\"+ -b)\', \'println(\"++a :\"+ ++a)\', \'println(\"--b :\"+ --b)\', \'println(\"!flag :\"+ !flag)\', \'fun main(args: Array<String>){\', \'var a=10\', \'var b=5\', \'var c=15\', \'var flag = false\', \'var result: Boolean\', \'result = (a>b) && (a>c)\', \'println(\"(a>b) && (a>c) :\"+ result)\', \'result = (a>b) || (a>c)\', \'println(\"(a>b) || (a>c) :\"+ result)\', \'result = !flag\', \'println(\"!flag :\"+ result)\', \'fun main(args: Array<String>){\', \'var a=10\', \'var b=2\', \'println(\"a.shl(b): \"+a.shl(b))\', \'println(\"a.shr(b): \"+a.shr(b))\', \'println(\"a.ushr(b:) \"+a.ushr(b))\', \'println(\"a.and(b): \"+a.and(b))\', \'println(\"a.or(b): \"+a.or(b))\', \'println(\"a.xor(b): \"+a.xor(b))\', \'println(\"a.inv(): \"+a.inv())\']','[\'15\', \'5\', \'50\', \'2\', \'0\', \'b is greater than a.\', \'max = 10\', \'a+=b :25\', \'a-=b :20\', \'a*=b :100\', \'a/=b :20\', \'a%=b :0\', \'+a :10\', \'-b :-5\', \'++a :11\', \'--b :4\', \'!flag :false\', \'(a>b) && (a>c) :false\', \'(a>b) || (a>c) :true\', \'!flag :true\', \'a.shl(b): 40\', \'a.shr(b): 2\', \'a.ushr(b:) 2\', \'a.and(b): 2\', \'a.or(b): 10\', \'a.xor(b): 8\', \'a.inv(): -11\']','[\'Operator|||Description|||Expression|||Translate to&&&+|||Addition|||a+b|||a.plus(b)&&&-|||Subtraction|||a-b|||a.minus(b)&&&*|||Multiply|||a*b|||a.times(b)&&&/|||Division|||a/b|||a.div(b)&&&%|||Modulus|||a%b|||a.rem(b)\', \'Operator|||Description|||Expression|||Translate to&&&>|||greater than|||a>b|||a.compateTo(b)>0&&&<|||Less than|||a<b|||a.compateTo(b)<0&&&>=|||greater than or equal to|||a>=b|||a.compateTo(b)>=0&&&<=|||less than or equal to|||a<=b|||a?.equals(b)?:(b===null)&&&==|||is equal to|||a==b|||a?.equals(b)?:(b===null)&&&!=|||not equal to|||a!=b|||!(a?.equals(b)?:(b===null))\', \'Operator|||Description|||Expression|||Convert to&&&+=|||add and assign|||a+=b|||a.plusAssign(b)&&&-=|||subtract and assign|||a-=b|||a.minusAssign(b)&&&*=|||multiply and assign|||a*=b|||a.timesAssign(b)&&&/=|||divide and assign|||a/=b|||a.divAssign(b)&&&%=|||mod and assign|||a%=b|||a.remAssign(b)\', \'Operator|||Description|||Expression|||Convert to&&&+|||unary plus|||+a|||a.unaryPlus()&&&-|||unary minus|||-a|||a.unaryMinus()&&&++|||increment by 1|||++a|||a.inc()&&&--|||decrement by 1|||--a|||a.dec()&&&!|||not|||!a|||a.not()\', \'Operator|||Description|||Expression|||Convert to&&&&&|||return true if all expression are true|||(a>b) && (a>c)|||(a>b) and (a>c)&&&|||||return true if any expression are true|||(a>b) || (a>c)|||(a>b) or(a>c)&&&!|||return complement of expression|||!a|||a.not()\', \'Named Function|||Description|||Expression&&&shl (bits)|||signed shift left|||a.shl(b)&&&shr (bits)|||signed shift right|||a.shr(b)&&&ushr (bits)|||unsigned shift right|||a.ushr(b)&&&and (bits)|||bitwise and|||a.and(b)&&&or (bits)|||bitwise or|||a.or(b)&&&xor (bits)|||bitwise xor|||a.xor(b)&&&inv()|||bitwise inverse|||a.inv()\']','[\'|||Arithmetic operator|||Relation operator|||Assignment operator|||Unary operator|||Bitwise operation|||Logical operator|||\']'),(10,'[\'Kotlin Standard Input/Output\']','[\'Kotlin standard input output operations are performed to flow byte stream from input device (keyboard) to main memory and from main memory to output device (screen).\']','[\'https://www.javatpoint.com/kotlin-comment\', \'https://www.javatpoint.com/kotlin-operator\', \'https://www.javatpoint.com/kotlin-comment\', \'https://www.javatpoint.com/kotlin-operator\', \'https://www.javatpoint.com/kotlin-comment\']','[]','[]','[\'Kotlin Output\', \'Kotlin Input\']','[\'Difference between print() and println() methods:\']','[]','[\"Kotlin output operation is performed using the standard methods print() and println(). Let\'s see an example:\", \'The methods print() and println() are internally call System.out.print() and System.out.println() respectively.\', \'While using the readLine() function, input lines other than String are explicitly converted into their corresponding types.\', \'To input other data type rather than String, we need to use Scanner object of java.util.Scanner class from Java standard library.\']','[\"Kotlin has standard library function readLine() which is used for reads line of string input from standard input stream. It returns the line read or null. Let\'s see an example:\", \'Here nextInt() is a method which takes integer input and stores in integer variable. The other data types Boolean, Float, Long and Double uses nextBoolean(), nextFloat(), nextLong() and nextDouble() to get input from user.\']','[\'Example Getting Integer Input\n\r\nimport java.util.Scanner\r\nfun main(args: Array<String>) {\r\n    val read = Scanner(System.`in`)\r\n    println(\"Enter your age\")\r\n    var age = read.nextInt()\r\n    println(\"Your input age is \"+age)\r\n}\r\n\nOutput:\nEnter your age\r\n25\r\nYour input age is 25\r\n\nHere nextInt() is a method which takes integer input and stores in integer variable. The other data types Boolean, Float, Long and Double uses nextBoolean(), nextFloat(), nextLong() and nextDouble() to get input from user.\n\n\nNext TopicKotlin Comment\n\n\n\n← prev\nnext →\n\n\n\', \'\n\r\nimport java.util.Scanner\r\nfun main(args: Array<String>) {\r\n    val read = Scanner(System.`in`)\r\n    println(\"Enter your age\")\r\n    var age = read.nextInt()\r\n    println(\"Your input age is \"+age)\r\n}\r\n\nOutput:\nEnter your age\r\n25\r\nYour input age is 25\r\n\nHere nextInt() is a method which takes integer input and stores in integer variable. The other data types Boolean, Float, Long and Double uses nextBoolean(), nextFloat(), nextLong() and nextDouble() to get input from user.\n\n\nNext TopicKotlin Comment\n\n\n\n← prev\nnext →\n\n\n\']','[\'fun main(args: Array<String>) {\', \'println(\"Hello World!\")\', \'print(\"Welcome to  JavaTpoint\")\', \'fun main(args: Array<String>){\', \'println(10)\', \'println(\"Welcome to  JavaTpoint\")\', \'print(20)\', \'print(\"Hello\")\', \'fun main(args: Array<String>) {\', \'println(\"Enter your name\")\', \'val name = readLine()\', \'println(\"Enter your age\")\', \'var age: Int =Integer.valueOf(readLine())\', \'println(\"Your name is $name and your age is $age\")\', \'import java.util.Scanner\', \'fun main(args: Array<String>) {\', \'val read = Scanner(System.`in`)\', \'println(\"Enter your age\")\', \'var age = read.nextInt()\', \'println(\"Your input age is \"+age)\']','[\'Hello World!\', \'Welcome to  JavaTpoint\', \'10\', \'Welcome to  JavaTpoint\', \'20Hello\', \'Enter your name\', \'Ashutosh\', \'Enter your age\', \'25\', \'Your name is Ashutosh and your age is 25\', \'Enter your age\', \'25\', \'Your input age is 25\']','[]','[\'|||print(): print() method is used to print values provided inside the method \"()\".|||println(): println() method is used to print values provided inside the method \"()\" and moves cursor to the beginning of next line.|||\']'),(11,'[\'Kotlin Comment\']','[\"Comments are the statements that are used for documentation purpose. Comments are ignored by compiler so that don\'t execute. We can also used it for providing information about the line of code. There are two types of comments in Kotlin.\"]','[\'https://www.javatpoint.com/kotlin-if-expression\', \'https://www.javatpoint.com/kotlin-input-output\', \'https://www.javatpoint.com/kotlin-if-expression\', \'https://www.javatpoint.com/kotlin-input-output\', \'https://www.javatpoint.com/kotlin-if-expression\']','[]','[]','[\'Single line comment\', \'Multi line comment\']','[]','[]','[\"Single line comment is used for commenting single line of statement. It is done by using \'//\' (double slash). For example:\"]','[\'Multi line comment is used for commenting multiple line of statement. It is done by using /* */ (start with slash strict and end with star slash). For example:\']','[]','[\'fun main(args: Array<String>) {\', \'println(\"Hello World!\")\', \'fun main(args: Array<String>) {\', \'/* this statement\', \'is used\', \'for print */\', \'println(\"Hello World!\")\']','[\'Hello World!\', \'Hello World!\']','[]','[\'|||Single line comment.|||Multi line comment.|||\']'),(12,'[\'Kotlin if Expression\']','[\'In Kotlin, if is an expression is which returns a value. It is used for control the flow of program structure. There is various type of if expression in Kotlin.\']','[\'https://www.javatpoint.com/kotlin-when-expression\', \'https://www.javatpoint.com/kotlin-comment\', \'https://www.javatpoint.com/kotlin-when-expression\', \'https://www.javatpoint.com/kotlin-comment\', \'https://www.javatpoint.com/kotlin-when-expression\']','[]','[]','[\'Traditional if Statement\', \'Kotlin if-else Expression\', \'Kotlin if-else if-else Ladder Expression\', \'Kotlin Nested if Expression\']','[]','[]','[\'Syntax of traditional if statement\', \'Syntax of traditional if else statement\', \'Syntax of if-else expression\', \'Kotlin if-else Expression Example\', \"Let\'s see an example of if-else expression.\", \'We can remove the curly braces of if-else body by writing if expression in only one statement.\', \'For example:\', \'Using if-else expression in one single line statement is like ternary operator in Java. Kotlin does not support any ternary operator.\', \"Let\'s see an example of if-else if-else ladder expression.\", \"Let\'s see an example of nested if expression.\"]','[\'As if is an expression it is not used as standalone, it is used with if-else expression and the result of an if-else expression is assign into a variable.\']','[]','[\'if(condation){\', \'if(condation){\', \'val returnValue = if (condation) {\', \'} else {\', \'println(returnValue)\', \'fun main(args: Array<String>) {\', \'val num1 = 10\', \'val num2 =20\', \'val result = if (num1 > num2) {\', \'\"$num1 is greater than $num2\"\', \'} else {\', \'\"$num1 is smaller than $num2\"\', \'}\', \'println(result)\', \'fun main(args: Array<String>) {\', \'val num1 = 10\', \'val num2 =20\', \'val result = if (num1 > num2) \"$num1 is greater than $num2\" else \"$num1 is smaller than $num2\"\', \'println(result)\', \'fun main(args: Array<String>) {\', \'val num = 10\', \'val result = if (num > 0){\', \'\"$num is positive\"\', \'}else if(num < 0){\', \'\"$num is negative\"\', \'}else{\', \'\"$num is zero\"\', \'println(result)\', \'fun main(args: Array<String>) {\', \'val num1 = 25\', \'val num2 = 20\', \'val num3 = 30\', \'val result = if (num1 > num2){\', \'val max = if(num1 > num3){\', \'num1\', \'}else{\', \'num3\', \'}\', \'\"body of if \"+max\', \'}else if(num2 > num3){\', \'\"body of else if\"+num2\', \'}else{\', \'\"body of else \"+num3\', \'println(\"$result\")\']','[\'10 is smaller than 20\', \'10 is positive\', \'body of if 30\']','[]','[\'|||if-else expression|||if-else if-else ladder expression|||nested if expression|||\']'),(13,'[\'Kotlin when Expression\']','[\'Kotlin, when expression is a conditional expression which returns the value. Kotlin, when expression is replacement of switch statement. Kotlin, when expression works as a switch statement of other language (Java, C++, C).\']','[\'https://www.javatpoint.com/kotlin-for-loop\', \'https://www.javatpoint.com/kotlin-if-expression\', \'https://www.javatpoint.com/kotlin-for-loop\', \'https://www.javatpoint.com/kotlin-if-expression\', \'https://www.javatpoint.com/kotlin-for-loop\']','[]','[]','[]','[\'Using when as an Expression\', \'Using when Without Expression\', \'Multiple Statement of when Using Braces\', \'Multiple branches of when\', \'Using when in the range\']','[]','[\"Let\'s see a simple example of when expression.\", \'It is not mandatory to use when as an expression, it can be used as normally as it used in other language.\', \'For Example\', \'We can use multiple statement enclosed within block of condition.\', \'For Example\', \'We can use multiple branches of condition separated with a comma. It is used, when we need to run a same logic for multiple choices.\', \'For Example:\']','[\'The when expression also check the ranges of input provided in when condition. A range is created using .. (double dot) operator. The in operator is used to check if a value belongs to a range.\']','[]','[\'fun main(args: Array<String>){\', \'var number = 4\', \'var numberProvided = when(number) {\', \'1 -> \"One\"\', \'2 -> \"Two\"\', \'3 -> \"Three\"\', \'4 -> \"Four\"\', \'5 -> \"Five\"\', \'else -> \"invalid number\"\', \'println(\"You provide $numberProvided\")\', \'fun main(args: Array<String>){\', \'var number = 4\', \'when(number) {\', \'1 -> println(\"One\")\', \'2 -> println(\"Two\")\', \'3 -> println(\"Three\")\', \'4 -> println(\"Four\")\', \'5 -> println(\"Five\")\', \'else -> println(\"invalid number\")\', \'fun main(args: Array<String>){\', \'var number = 1\', \'when(number) {\', \'1 -> {\', \'println(\"Monday\")\', \'println(\"First day of the week\")\', \'}\', \'7 -> println(\"Sunday\")\', \'else -> println(\"Other days\")\', \'fun main(args: Array<String>){\', \'var number = 8\', \'when(number) {\', \'3, 4, 5, 6 ->\', \'println(\"It is summer season\")\', \'7, 8, 9 ->\', \'println(\"It is rainy season\")\', \'10, 11 ->\', \'println(\"It is autumn season\")\', \'12, 1, 2 ->\', \'println(\"It is winter season\")\', \'else -> println(\"invalid input\")\', \'fun main(args: Array<String>){\', \'var number = 7\', \'when(number) {\', \'in 1..5 -> println(\"Input is provided in the range 1 to 5\")\', \'in 6..10 -> println(\"Input is provided in the range 6 to 10\")\', \'else -> println(\"none of the above\")\']','[\'You provide Four\', \'Four\', \'Monday\', \'First day of the week\', \'It is rainy season\', \'Input is provided in the range 6 to 10\']','[]','[]'),(14,'[\'Kotlin for Loop\']','[\'Kotlin for loop is used to iterate a part of program several times. It iterates through arrays, ranges, collections, or anything that provides for iterate. Kotlin for loop is equivalent to the foreach loop in languages like C#.\']','[\'https://www.javatpoint.com/kotlin-while-loop\', \'https://www.javatpoint.com/kotlin-when-expression\', \'https://www.javatpoint.com/kotlin-while-loop\', \'https://www.javatpoint.com/kotlin-when-expression\', \'https://www.javatpoint.com/kotlin-while-loop\']','[]','[]','[]','[\'Iterate through array\', \'Iterate through range\']','[]','[\'Syntax of for loop in Kotlin:\', \"Let\'s see a simple example of iterating the elements of array.\", \'If the body of for loop contains only one single line of statement, it is not necessary to enclose within curly braces {}.\', \'The elements of an array are iterated on the basis of indices (index) of array. For example:\', \"Let\'s see an example of iterating the elements of range.\"]','[]','[]','[\'for (item in collection){\', \'fun main(args : Array<String>) {\', \'val marks = arrayOf(80,85,60,90,70)\', \'for(item in marks){\', \'println(item)\', \'fun main(args : Array<String>) {\', \'val marks = arrayOf(80,85,60,90,70)\', \'for(item in marks)\', \'println(item)\', \'fun main(args : Array<String>) {\', \'val marks = arrayOf(80,85,60,90,70)\', \'for(item in marks.indices)\', \'println(\"marks[$item]: \"+ marks[item])\', \'fun main(args : Array) {\', \'print(\"for (i in 1..5) print(i) = \")\', \'for (i in 1..5) print(i)\', \'println()\', \'print(\"for (i in 5..1) print(i) = \")\', \'for (i in 5..1) print(i)             // prints nothing\', \'println()\', \'print(\"for (i in 5 downTo 1) print(i) = \")\', \'for (i in 5 downTo 1) print(i)\', \'println()\', \'print(\"for (i in 5 downTo 2) print(i) = \")\', \'for (i in 5 downTo 2) print(i)\', \'println()\', \'print(\"for (i in 1..5 step 2) print(i) = \")\', \'for (i in 1..5 step 2) print(i)\', \'println()\', \'print(\"for (i in 5 downTo 1 step 2) print(i) = \")\', \'for (i in 5 downTo 1 step 2) print(i)\']','[\'80\', \'85\', \'60\', \'90\', \'70\', \'marks[0]: 80\', \'marks[1]: 85\', \'marks[2]: 60\', \'marks[3]: 90\', \'marks[4]: 70\', \'for (i in 1..5) print(i) = 12345\', \'for (i in 5..1) print(i) =\', \'for (i in 5 downTo 1) print(i) = 54321\', \'for (i in 5 downTo 2) print(i) = 5432\', \'for (i in 1..5 step 2) print(i) = 135\', \'for (i in 5 downTo 1 step 2) print(i) = 531\']','[]','[]'),(15,'[\'Kotlin while Loop\']','[\'The while loop is used to iterate a part of program several time. Loop executed the block of code until the condition has true. Kotlin while loop is similar to Java while loop.\']','[\'https://www.javatpoint.com/kotlin-do-while-loop\', \'https://www.javatpoint.com/kotlin-for-loop\', \'https://www.javatpoint.com/kotlin-do-while-loop\', \'https://www.javatpoint.com/kotlin-for-loop\', \'https://www.javatpoint.com/kotlin-do-while-loop\']','[]','[]','[]','[\'Example of while Loop\', \'Kotlin Infinite while Loop\']','[]','[\"Let\'s see a simple example of while loop printing value from 1 to 5.\", \'The while loop executes a block of code to infinite times, if while condition remain true.\', \'For example:\']','[]','[]','[\'while(condition){\', \'fun main(args: Array<String>){\', \'var i = 1\', \'while (i<=5){\', \'println(i)\', \'i++\', \'fun main(args: Array<String>){\', \'while (true){\', \'println(\"infinite loop\")\', \'}\']','[\'1\', \'2\', \'3\', \'4\', \'5\', \'infinite loop\', \'infinite loop\', \'infinite loop\', \'.\', \'.\', \'.\', \'.\', \'infinite loop\', \'infinite loop\', \'\', \'infinite loop\', \'infinite loop\', \'infinite loop\', \'infinite loop\']','[]','[]'),(16,'[\'Kotlin do-while Loop\']','[\'The do-while loop is similar to while loop except one key difference. A do-while loop first execute the body of do block after that it check the condition of while.\']','[\'https://www.javatpoint.com/kotlin-return-and-jump\', \'https://www.javatpoint.com/kotlin-while-loop\', \'https://www.javatpoint.com/kotlin-return-and-jump\', \'https://www.javatpoint.com/kotlin-while-loop\', \'https://www.javatpoint.com/kotlin-return-and-jump\']','[]','[]','[]','[]','[]','[\'Example of do -while loop\', \"Let\'s see a simple example of do-while loop printing value 1 to 5.\", \'Example of do -while loop even condition of while if false\', \'In this example do-while loop execute at once time even the condition of while is false.\']','[\'As a do block of do-while loop executed first before checking the condition, do-while loop execute at least once even the condition within while is false. The while statement of do-while loop end with \";\" (semicolon).\']','[]','[\'while(condition);\', \'fun main(args: Array){\', \'var i = 1\', \'do {\', \'println(i)\', \'i++\', \'while (i<=5);\', \'fun main(args: Array<String>){\', \'var i = 6\', \'do {\', \'println(i)\', \'i++\', \'while (i<=5);\']','[\'1\', \'2\', \'3\', \'4\', \'5\', \'6\']','[]','[]'),(17,'[\'Kotlin Return and Jump\']','[\'There are three jump expressions in Kotlin. These jump expressions are used for control the flow of program execution. These jump structures are:\']','[\'https://www.javatpoint.com/kotlin-continue-structure\', \'https://www.javatpoint.com/kotlin-do-while-loop\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com/kotlin-continue-structure\', \'https://www.javatpoint.com/kotlin-do-while-loop\', \'https://www.javatpoint.com/kotlin-continue-structure\']','[]','[]','[\'Break Expression\', \'Kotlin Labeled break Expression\']','[]','[]','[\'For example:\', \'In the above example, for loop terminates its loop when if condition execute break expression.\', \'Kotlin break example:\', \'Kotlin labeled break example\']','[\'In the above example, when the value of i became equal to 3 and satisfy the if condition(i==3) than the break expression execute and terminate for loop.\', \'Labeled is the form of identifier followed by the @ sign, for example [emailxa0protected], [emailxa0protected]. To make an expression as label, we just put a label in front of expression.\', \'Kotlin labeled break expression is used to terminate the specific loop. This is done by using break expression with @ sign followed by label name ([emailxa0protected]).\', \'In the above example, when the value of i became 2 and satisfy the if condition which execute break expression followed by labeled name. The break expression followed by labeled name terminates the body of label identifier.\']','[\'A break expression is used for terminate the nearest enclosing loop. It is almost used with if-else condition.\nFor example:\n\r\nfor(..){\r\n       //body of for\r\n       if(checkCondition){\r\n           break;\r\n       }\r\n}\r\n\nIn the above example, for loop terminates its loop when if condition execute break expression.\nKotlin break example:\n\r\nfun main(args: Array<String>) {\r\n    for (i in 1..5) {\r\n        if (i == 3) {\r\n            break\r\n        }\r\n        println(i)\r\n    }\r\n}\r\n\nOutput:\n1\r\n2\r\n\nIn the above example, when the value of i became equal to 3 and satisfy the if condition(i==3) than the break expression execute and terminate for loop.\nKotlin Labeled break Expression\nLabeled is the form of identifier followed by the @ sign, for example [emailxa0protected], [emailxa0protected]. To make an expression as label, we just put a label in front of expression.\nKotlin labeled break expression is used to terminate the specific loop. This is done by using break expression with @ sign followed by label name ([emailxa0protected]).\nKotlin labeled break example\n\r\nfun main(args: Array<String>) {\r\n    loop@ for (i in 1..3) {\r\n        for (j in 1..3) {\r\n            println(\"i = $i and j = $j\")\r\n            if (i == 2)\r\n                break@loop\r\n        }\r\n    }\r\n}\r\n\nOutput:\ni = 1 and j = 1\r\ni = 1 and j = 2\r\ni = 1 and j = 3\r\ni = 2 and j = 1\r\n\nIn the above example, when the value of i became 2 and satisfy the if condition which execute break expression followed by labeled name. The break expression followed by labeled name terminates the body of label identifier.\n\n\nNext TopicKotlin Continue Structure\n\n\n\n← prev\nnext →\n\n\n\']','[\'for(..){\', \'if(checkCondition){\', \'break;\', \'}\', \'fun main(args: Array<String>) {\', \'for (i in 1..5) {\', \'if (i == 3) {\', \'break\', \'}\', \'println(i)\', \'fun main(args: Array<String>) {\', \'loop@ for (i in 1..3) {\', \'for (j in 1..3) {\', \'println(\"i = $i and j = $j\")\', \'if (i == 2)\', \'break@loop\', \'}\']','[\'1\', \'2\', \'i = 1 and j = 1\', \'i = 1 and j = 2\', \'i = 1 and j = 3\', \'i = 2 and j = 1\']','[]','[\'|||break|||continue|||return|||\']'),(18,'[\'Kotlin continue Jump Structure\']','[\'Kotlin, continue statement is used to repeat the loop. It continues the current flow of the program and skips the remaining code at specified condition.\']','[\'https://www.javatpoint.com/kotlin-function\', \'https://www.javatpoint.com/kotlin-return-and-jump\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com/kotlin-function\', \'https://www.javatpoint.com/kotlin-return-and-jump\', \'https://www.javatpoint.com/kotlin-function\']','[]','[]','[]','[\'Kotlin Labeled continue Expression\']','[]','[\'The continue statement within a nested loop only affects the inner loop.\', \'For example\', \'Kotlin continue example\', \'Kotlin labeled continue example\']','[\'In the above example, for loop repeat its loop when if condition execute continue. The continue statement makes repetition of loop without executing the below code of if condition.\', \'Labeled is the form of identifier followed by the @ sign, for example [emailxa0protected], [emailxa0protected] To make an expression as label, we just put a label in front of expression.\', \'Kotlin, labeled continue expression is used for repetition of specific loop (labeled loop). This is done by using continue expression with @ sign followed by label name ([emailxa0protected]).\']','[]','[\'for(..){\', \'if(checkCondition){\', \'continue\', \'}\', \'fun main(args: Array) {\', \'for (i in 1..3) {\', \'println(\"i = $i\")\', \'if (j == 2) {\', \'continue\', \'}\', \'println(\"this is below if\")\', \'}\', \'fun main(args: Array<String>) {\', \'labelname@ for (i in 1..3) {\', \'for (j in 1..3) {\', \'println(\"i = $i and j = $j\")\', \'if (i == 2) {\', \'continue@labelname\', \'}\', \'println(\"this is below if\")\']','[\'i = 1\', \'this is below if\', \'i = 2\', \'i = 3\', \'this is below if\', \'i = 1 and j = 1\', \'this is below if\', \'i = 1 and j = 2\', \'this is below if\', \'i = 1 and j = 3\', \'this is below if\', \'i = 2 and j = 1\', \'i = 3 and j = 1\', \'this is below if\', \'i = 3 and j = 2\', \'this is below if\', \'i = 3 and j = 3\', \'this is below if\']','[]','[]'),(19,'[\'Kotlin Function\']','[\'Function is a group of inter related block of code which performs a specific task. Function is used to break a program into different sub module. It makes reusability of code and makes program more manageable.\']','[\'https://www.javatpoint.com/kotlin-recursion-function\', \'https://www.javatpoint.com/kotlin-continue-structure\', \'https://www.javatpoint.com/kotlin-recursion-function\', \'https://www.javatpoint.com/kotlin-continue-structure\', \'https://www.javatpoint.com/kotlin-recursion-function\']','[]','[]','[\'Standard Library Function\', \'User defined Function\']','[\'Kotlin simple function example\', \'Kotlin Parameterize Function and Return Value\', \'Kotlin parameterize function example\']','[]','[\'Kotlin Standard library function is built-in library functions which are implicitly present in library and available for use.\', \'For example\', \'Kotlin functions are declared using the fun keyword. For example:\', \'We have to call the function to run codes inside the body of the function.\']','[\'In Kotlin, functions are declared using fun keyword. There are two types of functions depending on whether it is available in standard library or defined by user.\', \'User defined function is a function which is created by user. User defined function takes the parameter(s), perform an action and return the result of that action as a value.\', \'Functions are also takes parameter as arguments and return value. Kotlin functions are defined using Pascal notation, i.e. name:type (name of parameter and its type). Parameters in function are separated using commas.\', \'If a function does not returns any value than its return type is Unit. It is optional to specify the return type of function definition which does not returns any value.\']','[]','[\'fun main(args: Array<String>){\', \'var number = 25\', \'var result = Math.sqrt(number.toDouble())\', \'print(\"Square root of $number is $result\")\', \'fun functionName(){\', \'functionName()\', \'fun main(args: Array<String>){\', \'sum()\', \'print(\"code after sum\")\', \'fun sum(){\', \'var num1 =5\', \'var num2 = 6\', \'println(\"sum = \"+(num1+num2))\', \'fun functionName(number1: Int, number2: Int){\', \'.. .. ..\', \'.. .. ..\', \'functionName(value1, value2)\', \'.. .. ..\', \'fun main(args: Array<String>){\', \'val result = sum(5, 6)\', \'print(result)\', \'fun sum(number1: Int, number2:Int): Int{\', \'val add = number1+number2\', \'return add\']','[\'Square root of 25 is 5.0\', \'sum = 11\', \'code after sum\', \'11\']','[]','[\'|||Standard library function|||User defined function||||||Here, sqrt() is a library function which returns square root of a number (Double value). |||print() library function which prints a message to standard output stream.|||\']'),(20,'[\'Kotlin Recursion Function\']','[\'Recursion function is a function which calls itself continuously. This technique is called recursion.\']','[\'https://www.javatpoint.com/kotlin-default-and-named-argument\', \'https://www.javatpoint.com/kotlin-function\', \'https://www.javatpoint.com/kotlin-default-and-named-argument\', \'https://www.javatpoint.com/kotlin-function\', \'https://www.javatpoint.com/kotlin-default-and-named-argument\']','[]','[]','[\'Kotlin Tail Recursion\']','[\'Kotlin recursion function example 1: Finite times\', \'Kotlin recursion function example 2: Factorial Number\', \'General Recursion\', \'Tail Recursion\', \'Kotlin Tail Recursion Example 1: calculating sun of nth(100000) number\', \'Kotlin Tail Recursion Example 2: calculating factorial of number\']','[]','[\"Let\'s see an example of recursion function printing count.\", \"Let\'s see an example of recursion function calculating factorial of number.\", \'Working process of above factorial example\', \"Let\'s see an example of calculating sum of nth (100000 larger number) using general (normal) recursion.\", \'Tail recursion follows one rule for implementation. This rule is as follow:\', \"Let\'s see an example of calculating sum of nth (100000 larger number) using tail recursion.\", \"Let\'s see an example of calculating factorial of number using tail recursion.\"]','[\"Before we will discuss about the tail recursion, let\'s try to make an example which calculate sum of nth (100000 larger number) using general (normal) recursion.\", \'The above example throws an exception of \"java.lang.StackOverflowError\". This is because the compiler is unable to call large number of recursive function call.\', \'Tail recursion is a recursion which performs the calculation first, then makes the recursive call. The result of current step is passed into the next recursive call.\', \'The recursive call must be the last call of the method. To declare a recursion as tail recursion we need to use tailrec modifier before the recursive function.\']','[]','[\'fun functionName(){\', \'.. .. ..\', \'functionName() //calling same function\', \'var count = 0\', \'fun rec(){\', \'count++;\', \'if(count<=5){\', \'println(\"hello \"+count);\', \'rec();\', \'fun main(args: Array<String>) {\', \'rec();\', \'fun main(args: Array<String>) {\', \'val number = 5\', \'val result: Long\', \'result = factorial(number)\', \'println(\"Factorial of $number = $result\")\', \'fun factorial(n: Int): Long {\', \'return if(n == 1){\', \'n.toLong()\', \'else{\', \'n*factorial(n-1)\', \'factorial(5)\', \'factorial(4)\', \'factorial(3)\', \'factorial(2)\', \'factorial(1)\', \'return 1\', \'return 2*1 = 2\', \'return 3*2 = 6\', \'return 4*6 = 24\', \'return 5*24 = 120\', \'fun main(args: Array<String>) {\', \'var result = recursiveSum(100000)\', \'println(result)\', \'fun recursiveSum(n: Long) : Long {\', \'return if (n <= 1) {\', \'n\', \'} else {\', \'n + recursiveSum(n - 1)\', \'fun main(args: Array<String>) {\', \'var number = 100000.toLong()\', \'var result = recursiveSum(number)\', \'println(\"sun of upto $number number = $result\")\', \'tailrec fun recursiveSum(n: Long, semiresult: Long = 0) : Long {\', \'return if (n <= 0) {\', \'semiresult\', \'} else {\', \'recursiveSum( (n - 1), n+semiresult)\', \'fun main(args: Array<String>) {\', \'val number = 4\', \'val result: Long\', \'result = factorial(number)\', \'println(\"Factorial of $number = $result\")\', \'tailrec fun factorial(n: Int, run: Int = 1): Long {\', \'return if (n == 1){\', \'run.toLong()\', \'} else {\', \'factorial(n-1, run*n)\']','[\'hello 1\', \'hello 2\', \'hello 3\', \'hello 4\', \'hello 5\', \'Factorial of 5 = 120\', \'Exception in thread \"main\" java.lang.StackOverflowError\', \'sun of upto 100000 number = 5000050000\', \'Factorial of 4 = 24\']','[]','[]'),(21,'[\'Kotlin Default and Named Argument\']','[\'Kotlin provides a facility to assign default argument (parameter) in a function definition.\']','[\'https://www.javatpoint.com/kotlin-lambdas\', \'https://www.javatpoint.com/kotlin-recursion-function\', \'https://www.javatpoint.com/kotlin-lambdas\', \'https://www.javatpoint.com/kotlin-recursion-function\', \'https://www.javatpoint.com/kotlin-lambdas\']','[]','[]','[\'Kotlin Default Argument\', \'Kotlin Named Argument\']','[\'Default argument example 1: passing no argument in function call\', \'Default argument example 2: passing some argument in function call\', \'Default argument example 3: passing all argument in function call\', \'Named Argument\']','[]','[\'In the above program, run() function calls with no argument, the default parameter are used in function definition.\', \'As all the arguments are passed in run() function call, the parameters of function definition uses the argument passed in function call.\', \"Before we will discuss about the named parameter, let\'s do some modify in the above program.\", \'For example:\', \'To solve the above problem a named argument is used.\', \'Kotlin Named Argument Example\']','[\'If a function is called without passing any argument than default argument are used as parameter of function definition. And when a function is called using argument, than the passing argument is used as parameter in function definition.\', \'In the above program, run() function calls with one (first) argument, the first parameter of the function definition is uses the value passed to the function. And the second parameter is uses as a default argument.\', \"Here, we are try to pass parameter \'a\' from function call to function definition in the second argument. But compiler assumes that the parameter \'a\' (Char type) passed for first argument (Int type) this causes error in program.\", \'A named argument is an argument in which we define the name of argument in the function call. The name defined to argument of function call checks the name in the function definition and assign to it.\']','[]','[\'fun main(args: Array<String>) {\', \'run()\', \"fun run(num:Int= 5, latter: Char =\'x\'){\", \'print(\"parameter in function definition $num and $latter\")\', \'fun main(args: Array<String>) {\', \'run(3)\', \"fun run(num:Int= 5, latter: Char =\'x\'){\", \'print(\"parameter in function definition $num and $latter\")\', \'fun main(args: Array<String>) {\', \"run(3,\'a\')\", \"fun run(num:Int= 5, latter: Char =\'x\'){\", \'print(\"parameter in function definition $num and $latter\")\', \'fun main(args: Array<String>) {\', \"run(\'a\')\", \"fun run(num:Int= 5, latter: Char =\'x\'){\", \'print(\"parameter in function definition $num and $latter\")\', \'fun main(args: Array) {\', \"run(latter=\'a\')\", \"fun run(num:Int= 5, latter: Char =\'x\'){\", \'print(\"parameter in function definition $num and $latter\")\']','[\'parameter in function definition 5 and x\', \'parameter in function definition 3 and x\', \'parameter in function definition 3 and a\', \'Error: Kotlin: The character literal does not conform to the expected type Int\', \'parameter in function definition 5 and a\']','[]','[]'),(22,'[\'Kotlin Lambda Function\']','[\'Lambda is a function which has no name. Lambda is defined with a curly braces {} which takes variable as a parameter (if any) and body of function. The body of function is written after variable (if any) followed by -> operator.\']','[\'https://www.javatpoint.com/kotlin-higher-order-function\', \'https://www.javatpoint.com/kotlin-default-and-named-argument\', \'https://www.javatpoint.com/kotlin-higher-order-function\', \'https://www.javatpoint.com/kotlin-default-and-named-argument\', \'https://www.javatpoint.com/kotlin-higher-order-function\']','[]','[]','[]','[\'Syntax of lambda\', \'Normal function: addition of two numbers\', \'Lambda function: addition of two numbers\']','[]','[\"Before we talk about lambda, let\'s see a simple example of addition of two numbers using normal function.\", \'In this example, we create a function addNumber() passing two arguments (a,b) calling from the main function.\', \'The above program will be rewritten using lambda function as follow:\']','[]','[\'In the above program we create a lambda expression {s: Int -> println(s) } with its return type Unit. The lambda function is padded as an parameter in high level function addNumber(5,10,myLambda). The variable mylambda in function definition is actually a lambda function. The functionality (body) of mylambda is already given in lambda function.\']','[\'{ variable -> body_of_function}\', \'fun main(args: Array){\', \'addNumber(5,10)\', \'fun addNumber(a: Int, b: Int){\', \'val add = a + b\', \'println(add)\', \'fun main(args: Array<String>){\', \'val myLambda: (Int) -> Unit= {s: Int -> println(s) } //lambda function\', \'addNumber(5,10,myLambda)\', \'fun addNumber(a: Int, b: Int, mylambda: (Int) -> Unit ){   //high level function lambda as parameter\', \'val add = a + b\', \'mylambda(add) // println(add)\']','[\'15\', \'15\']','[]','[]'),(23,'[\'Higher order function\']','[\'High order function (Higher level function) is a function which accepts function as a parameter or returns a function or can do both. Means, instead of passing Int, String, or other types as a parameter in a function we can pass a function as a parameter in other function.\']','[\'https://www.javatpoint.com/kotlin-inline-function\', \'https://www.javatpoint.com/kotlin-lambdas\', \'https://www.javatpoint.com/kotlin-inline-function\', \'https://www.javatpoint.com/kotlin-lambdas\', \'https://www.javatpoint.com/kotlin-inline-function\']','[]','[]','[]','[]','[]','[\"Let\'s see the following example:\", \'To call this above function, we can pass function literal or lambda. For example:\', \'The above higher order function can also be called in another ways as below mention code in main() function:\']','[]','[\'In this above example, we defined a function myFun() with three parameters. The first and second parameter take String and the third parameter as a type of function from String to String. The parameter String to String type means function takes string as an input and returns output as string types.\']','[\'fun myFun(org: String,portal: String, fn: (String,String) -> String): Unit {\', \'val result = fn(org,portal)\', \'println(result)\', \'fun myFun(org: String,portal: String, fn: (String,String) -> String): Unit {\', \'val result = fn(org,portal)\', \'println(result)\', \'fun main(args: Array<String>){\', \'val fn:(String,String)->String={org,portal->\"$org develop $portal\"}\', \'myFun(\"sssit.org\",\"javatpoint.com\",fn)\']','[\'sssit.org develop javatpoint.com\', \'myFun(\"sssit.org\",\"javatpoint.com\",{org,portal->\"$org develop $portal\"})\']','[]','[]'),(24,'[\'Inline Function\']','[\'An inline function is declare with a keyword inline. The use of inline function enhances the performance of higher order function. The inline function tells the compiler to copy parameters and functions to the call site. \']','[\'https://www.javatpoint.com/kotlin-array\', \'https://www.javatpoint.com/kotlin-higher-order-function\', \'https://www.javatpoint.com/kotlin-array\', \'https://www.javatpoint.com/kotlin-higher-order-function\', \'https://www.javatpoint.com/kotlin-array\']','[]','[]','[]','[\'Non local control flow\', \'crossinline annotation\', \'noinline modifier\']','[]','[\"Let\'s see the basic example of inline function:\", \'If an inline function does not contain any noinline function parameter and no reified type parameters then compiler will generate a warning.\']','[\'The virtual function or local function cannot be declared as inline. Following are some expressions and declarations which are not supported anywhere inside the inline functions:\', \'From inline function, we can return from lambda expression itself. This will also lead to exit from the function in which inline function was called. The function literal is allowed to have non local return statements in such case.\', \'To prevent return from lambda expression and inline function itself, we can mark the lambda expression as crossinline. This will throw a compiler error if it found a return statement inside that lambda expression.\', \'In inline function, when we want some of lambdas passed in inline function to be an inlined, mark other function parameter with noinline modifier. This is used to set expressions not to be inlined in the call.\']','[]','[\'fun main(args: Array<String>) {\', \'inlineFunction({ println(\"calling inline functions\")})\', \'inline fun inlineFunction(myFun: () -> Unit ) {\', \'print(\"code inside inline function\")\', \'fun main(args: Array<String>) {\', \'inlineFunction({ println(\"calling inline functions\")\', \'return},{ println(\"next parameter in inline functions\")})\', \'inline fun inlineFunction(myFun: () -> Unit, nxtFun: () -> Unit) {\', \'nxtFun()\', \'print(\"code inside inline function\")\', \'fun main(args: Array<String>) {\', \'inlineFunction({ println(\"calling inline functions\")\', \'return // compile time error\', \'},{ println(\"next parameter in inline functions\")})\', \'inline fun inlineFunction(crossline myFun: () -> Unit, nxtFun: () -> Unit) {\', \'nxtFun()\', \'print(\"code inside inline function\")\', \'fun main(args: Array<String>) {\', \'inlineFunctionExample({  println(\"calling inline functions\")},\', \'{  println(\"next parameter in inline functions\")} )\', \'println(\"this is main function closing\")\', \'inline fun inlineFunctionExample(myFun: () -> Unit, noinline nxtFun: () -> Unit  ) {\', \'nxtFun()\', \'println(\"code inside inline function\")\']','[\'calling inline functions\ncode inside inline function\', \'calling inline functions\', \'calling inline functions\nnext parameter in inline functions\ncode inside inline function\nthis is main function closing\']','[]','[\'|||Declaration of local classes|||Declaration of inner nested classes|||Function expressions|||Declarations of local function|||Default value for optional parameters|||\']'),(25,'[\'Kotlin Array\']','[\'Array is collection of similar data types either of Int, String etc. Array in Kotlinis mutable in nature with fixed size which means we can perform both read and write operations on elements of array. \']','[\'https://www.javatpoint.com/kotlin-string\', \'https://www.javatpoint.com/kotlin-inline-function\', \'https://www.javatpoint.com/kotlin-string\', \'https://www.javatpoint.com/kotlin-inline-function\', \'https://www.javatpoint.com/kotlin-string\']','[]','[]','[\'Constructor of array:\', \'Kotlin array declaration - using arrayOf() function\', \'Kotlin array declaration - using intArrayOf() function\', \'Modify and access elements of array\', \'Kotlin array get() function example\']','[\'Kotlin array set() function example\', \'Kotlin Array Example 1:\', \'Kotlin Array Example 2:\', \'Kotlin Array Example 3 - using arrayOf() and intArrayOf() function:\', \'Kotlin Array Example 4\', \'Kotlin Array Example 5 - traversing using range:\']','[]','[\'Array constructor is declared with specified size and init function. The init function is used to returns the elements of array with their index.\', \'Kotlin Array can be created using arrayOf(), intArrayOf(), charArrayOf(), booleanArrayOf(), longArrayOf(), shortArrayOf(), byteArrayOf() functions.\', \'Kotlin has set() and get() functions that can direct modify and access the particular element of array respectively.\', \'For example:\', \'Suppose when we try to insert an element at index position greater than array size then what will happen?\']','[\'The set() function is used to set element at particular index location. This is also done with assigning element at array index. Array get() function is used to get element from specified index.\', \'We can also rewrite the value of array using its index value. Since, we can able to modify the value of array, so array is called as mutable property.\', \"Array in Kotlin can also be declared using library functions such as arrayOf(), intArrayOf(), etc. Let\'s see the example of array using arrayOf() and intArrayOf() function.\", \'It will throw an ArrayIndexOutOfBoundException. This is because the index value is not present at which we tried to insert element. Due to this, array is called fixed size length. For example:\', \"The Kotlin\'s array elements are also traversed using index range (minValue..maxValue) or (maxValue..minValue). Let\'s see an example of array traversing using range.\"]','[\'In this example, we are simply initialize an array of size 5 with default value as 0 and traverse its elements. The index value of array starts from 0. First element of array is placed at index value 0 and last element at one less than the size of array.\']','[\'Array(size: Int, init: (Int) -> T)\', \'var myArray1 = arrayOf(1,10,4,6,15)\', \'var myArray2 = arrayOf<Int>(1,10,4,6,15)\', \'val myArray3 = arrayOf<String>(\"Ajay\",\"Prakesh\",\"Michel\",\"John\",\"Sumit\")\', \'var myArray4= arrayOf(1,10,4, \"Ajay\",\"Prakesh\")\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'fun main(args: Array<String>) {\', \'val array1 = arrayOf(1,2,3,4)\', \'val array2 = arrayOf<Long>(11,12,13,14)\', \'array1.set(0,5)\', \'array1[2] = 6\', \'array2.set(2,10)\', \'array2[3] = 8\', \'for(element in array1){\', \'println(element)\', \'println()\', \'for(element in array2){\', \'println(element)\', \'fun main(args: Array<String>) {\', \'val array1 = arrayOf(1,2,3,4)\', \'val array2 = arrayOf<Long>(11,12,13,14)\', \'println(array1.get(0))\', \'println(array1[2])\', \'println()\', \'println(array2.get(2))\', \'println(array2[3])\', \'fun main(args: Array<String>){\', \'var myArray = Array<Int>(5){0}\', \'for(element in myArray){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var myArray = Array<Int>(5){0}\', \'myArray[1]= 10\', \'myArray[3]= 15\', \'for(element in myArray){\', \'println(element)\', \'fun main(args: Array<String>){\', \'val name = arrayOf<String>(\"Ajay\",\"Prakesh\",\"Michel\",\"John\",\"Sumit\")\', \'var myArray2 = arrayOf<Int>(1,10,4,6,15)\', \'var myArray3 = arrayOf(5,10,20,12,15)\', \'var myArray4= arrayOf(1,10,4, \"Ajay\",\"Prakesh\")\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'for(element in name){\', \'println(element)\', \'println()\', \'for(element in myArray2){\', \'println(element)\', \'println()\', \'for(element in myArray3){\', \'println(element)\', \'println()\', \'for(element in myArray4){\', \'println(element)\', \'println()\', \'for(element in myArray5){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'myArray5[6]=18 // ArrayIndexOutOfBoundsException\', \'for(element in myArray5){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'for (index in 0..4){\', \'println(myArray5[index])\', \'println()\', \'for (index in 0..myArray5.size-1){\', \'println(myArray5[index])\']','[\'5\', \'2\', \'6\', \'4\', \'11\', \'12\', \'10\', \'8\', \'1\', \'3\', \'13\', \'14\', \'0\', \'0\', \'0\', \'0\', \'0\', \'0\', \'10\', \'0\', \'15\', \'0\', \'Ajay\', \'Prakesh\', \'Michel\', \'John\', \'Sumit\', \'1\', \'10\', \'4\', \'6\', \'15\', \'5\', \'10\', \'20\', \'12\', \'15\', \'1\', \'10\', \'4\', \'Ajay\', \'Prakesh\', \'5\', \'10\', \'15\', \'20\', \'25\', \'Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 6\', \'at ArrayListKt.main(Array.kt:4)\', \'5\', \'10\', \'20\', \'12\', \'15\', \'5\', \'10\', \'20\', \'12\', \'15\']','[]','[]'),(26,'[\'Kotlin String\']','[\'The String class represents an array of char types. Strings are immutable which means the length and elements cannot be changed after their creation.\']','[\'https://www.javatpoint.com/kotlin-exception-handling\', \'https://www.javatpoint.com/kotlin-array\', \'https://www.javatpoint.com/kotlin-exception-handling\', \'https://www.javatpoint.com/kotlin-array\', \'https://www.javatpoint.com/kotlin-exception-handling\']','[]','[]','[\'Kotlin String Property\', \'String Function\', \'String elements and templates\', \'Kotlin String Literals\', \'String trimMargin() function\', \'Kotlin String Equality\']','[\'String elements\', \'String templates\', \'Escaped String\', \'Raw String\', \'Structural equality (==)\', \'Referential equality (===)\']','[]','[\'Example of accessing string element\', \'String template as variable name:\', \'String template as arbitrary expression in curly braces:\', \'String template is also used in arbitrary expression in curly braces to evaluate a string expression. This is done by using dollar sign $.\', \'String template in raw string:\', \'Kotlin has two types of string literals:\', \'Escape String is declared within double quote (\" \") and may contain escape characters like \'\\n\', \'\\t\', \'\\b\' ,\'\\r\',\'\\$\'etc.\', \'While using raw string with new line, it generates a | as margin prefix. For example:\', \'Leading whitespace can be removed with trimMargin() function. By default, trimMargin() function uses | as margin prefix. \', \'However, it can be change by passing a new string inside trimMargin() function.\', \'In Kotlin, strings equality comparisons are done on the basis of structural equality (==) and referential equality (===).\', \'In structural equality two objects have separate instances in memory but contain same value. \', \'Referential equality specifies that two different references point the same instance in memory.\', \'To check the two objects containing the same value, we use == operator or != operator for negation. It is equivalent to equals() in java.\']','[\'Unlike Java, Kotlin does not require a new keyword to instantiate an object of a String class. A String can be simply declared within double quote (\" \") known as escaped string or triple quote(\"\"\" \"\"\") known as raw string.\', \'Row String is declared within triple quote (\"\"\" \"\"\").It provides facility to declare String in new lines and contain multiple lines. Row String cannot contain any escape character.\', \'To check the two different references point to the same instance, we use === operator. The !== operator is used for negation. a === b specifies true if and only if a and b both point to the same object.\', \"Let\'s see an example of referential equality to check different reference contains same instance or not. For creating string we are using a helper method buildString rather than using quotes.\"]','[\"The characters which are present in string are known as elements of string. Element of string are accessed by indexing operation string[index]. String\'s index value starts from 0 and ends at one less than the size of string string[string.length-1]. Index 0 represent first element, index 1 represent second element and so on. \", \'String template expression is a piece of code which is evaluated and its result is returned into string. Both string types (escaped and raw string) contain template expressions. String templates starts with a dollar sign $ which consists either a variable name or an arbitrary expression in curly braces.\']','[\"val ch = charArrayOf(\'h\', \'e\', \'l\', \'l\', \'o\')\", \'val st = String(ch)\', \'val str1 = \"Hello, javaTpoint\"\', \'val str2 = \"\"\"Welcome To JavaTpoint\"\"\"\', \'val str =\"Hello, javatpoint\"\', \'println(str[0]) //prints H\', \'fun main(args: Array<String>) {\', \'val str = \"Hello, javatpoint!\"\', \'println(str[0])\', \'println(str[1])\', \'println(str[str.length-1])\', \'val i =10\', \'print(\"i = $i\") //i=10\', \'fun main(args: Array<String>) {\', \'val i =10\', \'print(\"i = $i\")//i=10\', \'fun main(args: Array<String>) {\', \'val str = \"abc\"\', \'println(\"$str is a string which length is ${str.length}\")\', \'fun main(args: Array<String>) {\', \'val a = 10\', \'val b = 5\', \'val myString = \"\"\"value $a\', \'|is greater than value $b\', \'\"\"\".trimMargin()\', \'println(\"${myString.trimMargin()}\")\', \'val text1 =\"Hello, JavaTpoint\"\', \'val text2 =\"Hello, JavaTpoint\\n\"\', \'val text3 =\"Hello, \\nJavaTpoint\"\', \'val text1 =\"\"\"\', \'Welcome\', \'To\', \'JavaTpoint\', \'\"\"\"\', \'fun main(args: Array<String>) {\', \'val text = \"\"\"Kotlin is official language\', \'|announce by Google for\', \'|android application development\', \'\"\"\"\', \'println(text)\', \'fun main(args: Array<String>) {\', \'val text = \"\"\"Kotlin is official language\', \'|announce by Google for\', \'|android application development\', \'\"\"\".trimMargin()\', \'println(text)\', \'fun main(args: Array<String>) {\', \'val text = \"\"\"Kotlin is official language\', \'#announce by Google for\', \'#android application development\', \'\"\"\".trimMargin(\"#\")\', \'println(text)\', \'fun main(args: Array<String>) {\', \'val str1 = \"Hello, World!\"\', \'val str2 = \"Hello, World!\"\', \'println(str1==str2) //true\', \'println(str1!=str2) //false\', \'fun main(args: Array<String>) {\', \'val str1 = buildString { \"string value\" }\', \'val str2 = buildString { \"string value\" }\', \'println(str1===str2)\', \'println(str1!==str2)\']','[\'H\', \'e\', \'!\', \'i=10\', \'abc is a string which length is 3\', \'value 10\', \'is greater than value 5\', \'Kotlin is official language\', \'|announce by Google for\', \'|android application development\', \'Kotlin is official language\', \'announce by Google for\', \'android application development\', \'Kotlin is official language\', \'announce by Google for\', \'android application development\', \'true\', \'false\', \'false\', \'true\']','[\'Property|||Description&&&length: Int|||It returns the length of string sequence.&&&indices: IntRange|||It returns the ranges of valid character indices from current char sequence.&&&lastIndex: Int|||It returns the index of last character from char sequence.\', \'Functions|||Description&&&compareTo(other: String): Int|||It compares the current object with specified object for order. It returns zero if current is equals to specified other object.&&&get(index: Int): Char|||It returns the character at given index from the current character sequence.&&&plus(other: Any?): String|||It returns the concatenate string with the string representation of the given other string.&&&subSequence(startIndex: Int,endIndex: Int): CharSequence|||It returns the new character sequence from current character sequence, starting from startIndex to endIndex.&&&CharSequence.contains(other: CharSequence, ignoreCase: Boolean = false):Boolean|||It returns true if the character sequence contains the other specified character sequence. &&&CharSequence.count(): Int|||It returns the length of char sequence.&&&String.drop(n: Int): String|||It returns a string after removing the first n character.&&&String.dropLast(n: Int): String|||It returns a string after removing the last n character.&&&String.dropWhile(predicate: (Char) -> Boolean): String|||It returns a character sequence which contains all the characters, except first characters which satisfy the given predicate.&&&CharSequence.elementAt(index: Int): Char|||It returns a character at the given index or throws an IndexOutOfBoundsException if the index does not exist in character sequence.&&&CharSequence.indexOf(char: Char, startIndex: Int = 0, ignoreCase: Boolean = false): Int|||It returns the index of first occurrence of the given character, starting from the given index value.&&&CharSequence.indexOfFirst(predicate: (Char) -> Boolean): Int|||It returns the index of first character which match the given predicate, or -1 if the character sequence not contains any such character. &&&CharSequence.indexOfLast(|||predicate: (Char) -> Boolean|||): Int|||It returns the index of last character which match the given predicate, or -1 if the character sequence not contains any such character.&&&CharSequence.getOrElse(index: Int, defaultValue: (Int) ->Char): Char|||It returns the character at specified index or the result of calling the defaultValue function if the index is out of bound of current character sequence.&&&CharSequence.getOrNull(index: Int): Char?|||It returns a character at the given index or returns null if the index is out of bound from character sequence.\']','[\'|||Escaped String|||Raw String|||\']'),(27,'[\'Kotlin Exception Handling\']','[\'Exception is a runtime problem which occurs in the program and leads to program termination. This may be occure due to running out of memory space, array out of bond, condition like divided by zero. To handle this type of problem during program execution the technique of exception handling is used.\']','[\'https://www.javatpoint.com/kotlin-try-catch\', \'https://www.javatpoint.com/kotlin-string\', \'https://www.javatpoint.com/kotlin-try-catch\', \'https://www.javatpoint.com/kotlin-string\', \'https://www.javatpoint.com/kotlin-try-catch\']','[]','[]','[\'Kotlin Unchecked Exception\', \'Checked Exception in Java\']','[]','[\'Note: Kotlin does not support checked exception.\']','[\'Exception handling is a technique which handles the runtime problems and maintains the flow of program execution.\', \'In Kotlin, all exception classes are descendants of class Throwable. To throw an exception object, Kotlin uses the throw expression.\', \'There are four different keywords used in exception handling. These are:\', \'try: try block contains set of statements which might generate an exception. It must be followed by either catch or finally or both.\', \'catch: catch block is used to catch the exception thrown from try block.\', \'finally: finally block always execute whether exception is handled or not. So it is used to execute important code statement.\', \'throw: throw keyword is used to throw an exception explicitly.\', \'Checked exception is checked at compile time. This exception type extends the Throwable class.\', \'Following are some example of unchecked exception:\']','[\'Unchecked exception is that exception which is thrown due to mistakes in our code. This exception type extends RuntimeException class. The Unchecked exception is checked at run time. Following are some example of unchecked exception:\']','[]','[\'throw MyException(\"this throws an exception\")\']','[]','[]','[\'|||try|||catch|||finally|||throw||||||ArithmeticException: thrown when we divide a number by zero.|||ArrayIndexOutOfBoundExceptions: thrown when an array has been tried to access with incorrect index value.|||SecurityException: thrown by the security manager to indicate a security violation.|||NullPointerException: thrown when invoking a method or property on a null object.||||||IOException.|||SQLException etc.|||\']'),(28,'[\'Kotlin try catch\']','[\'Kotlin try-catch block is used for exception handling in the code. The try block encloses the code which may throw an exception and the catch block is used to handle the exception. This block must be written within the method. Kotlin try block must be followed by either catch block or finally block or both.\']','[\'https://www.javatpoint.com/kotlin-multiple-catch-block\', \'https://www.javatpoint.com/kotlin-exception-handling\', \'https://www.javatpoint.com/kotlin-multiple-catch-block\', \'https://www.javatpoint.com/kotlin-exception-handling\', \'https://www.javatpoint.com/kotlin-multiple-catch-block\']','[]','[]','[\'Problem without Exception Handling\', \'Solution by exception handling\', \'Kotlin try block as an Expression\']','[\'Syntax of try with catch block\', \'\', \'Syntax of try catch with finally block\', \'Kotlin try as an expression example\']','[]','[\"Lets\'s see an example which causes exception which is not handled.\", \'This above program generates an exception, which causes rest of code below the exception not executable.\', \"Let\'s see the solution of above problem by using try-catch block.\", \'In the above program after implementing try - catch block, rest of code below exception executes.\', \"Let\'s modify the above code which generate an exception and return the last statement of catch block.\"]','[\'We can use try block as an expression which returns a value. The value returned by try expression is either the last expression of try block or the last expression of catch. Contents of the finally block do not affect the result of the expression.\', \"Let\'s see an example of try-catch block as an expression which returns a value. In this example String value to Int which does not generate any exception and returns last statement of try block.\"]','[]','[\'}catch(e: SomeException){\', \'Syntax of try with finally block\', \'}finally{\', \'catch (e: SomeException) {\', \'finally {\', \'fun main(args: Array<String>){\', \'val data = 20 / 0   //may throw exception\', \'println(\"code below exception ...\")\', \'fun main(args: Array<String>){\', \'try {\', \'val data = 20 / 0  //may throw exception\', \'} catch (e: ArithmeticException) {\', \'println(e)\', \'println(\"code below exception...\")\', \'fun main(args: Array<String>){\', \'val str = getNumber(\"10\")\', \'println(str)\', \'fun getNumber(str: String): Int{\', \'return try {\', \'Integer.parseInt(str)\', \'} catch (e: ArithmeticException) {\', \'0\', \'fun main(args: Array<String>){\', \'val str = getNumber(\"10.5\")\', \'println(str)\', \'fun getNumber(str: String): Int{\', \'return try {\', \'Integer.parseInt(str)\', \'} catch (e: NumberFormatException) {\', \'0\']','[\'Exception in thread \"main\" java.lang.ArithmeticException: / by zero\', \'at ExceptionHandlingKt.main(ExceptionHandling.kt:2)\', \'java.lang.ArithmeticException: / by zero\', \'code below exception...\', \'10\', \'0\']','[]','[]'),(29,'[\'Kotlin Multiple catch Block\']','[\'We can use multiple catch block in our code. Kotlin multiple catch blocks are used when we are using different types of operation in try block which may causes different exceptions in try block.\']','[\'https://www.javatpoint.com/kotlin-nested-try-block\', \'https://www.javatpoint.com/kotlin-try-catch\', \'https://www.javatpoint.com/kotlin-nested-try-block\', \'https://www.javatpoint.com/kotlin-try-catch\', \'https://www.javatpoint.com/kotlin-nested-try-block\']','[]','[]','[]','[\'Kotlin multiple catch block example 1\', \'What happen when we catch from general exception to specific exception?\']','[\'Note: At a time only one exception is occured and at a time only one catch block is executed.\']','[\'Rule: All catch blocks must be placed from most specific to general i.e. catch for ArithmeticException must come before catch for Exception.\', \'It will generate warning. For example:\', \"Let\'s modify above code and place catch block from general exception to specific exception.\", \'Output at compile time\', \'Output at run time\']','[\"Let\'s see an example of multiple catch blocks. In this example we will are performing different types of operation. These different types of operation may generate different types of exceptions.\"]','[]','[\'fun main(args: Array<String>){\', \'try {\', \'val a = IntArray(5)\', \'a[5] = 10 / 0\', \'} catch (e: ArithmeticException) {\', \'println(\"arithmetic exception catch\")\', \'} catch (e: ArrayIndexOutOfBoundsException) {\', \'println(\"array index outofbounds exception\")\', \'} catch (e: Exception) {\', \'println(\"parent exception class\")\', \'println(\"code after try catch...\")\', \'fun main(args: Array<String>){\', \'try {\', \'val a = IntArray(5)\', \'a[5] = 10 / 0\', \'catch (e: Exception) {\', \'println(\"parent exception catch\")\', \'catch (e: ArithmeticException) {\', \'println(\"arithmetic exception catch\")\', \'} catch (e: ArrayIndexOutOfBoundsException) {\', \'println(\"array index outofbounds exception\")\', \'println(\"code after try catch...\")\']','[\'arithmetic exception catch\', \'code after try catch...\', \'warning : division by zero\', \'a[5] = 10/0\', \'parent exception catch\', \'code after try catch...\']','[]','[]'),(30,'[\'Kotlin Nested try-catch block\']','[\'We can also able to use nested try block whenever required. Nested try catch block is such block in which one try catch block is implemented into another try block.\']','[\'https://www.javatpoint.com/kotlin-finally-block\', \'https://www.javatpoint.com/kotlin-multiple-catch-block\', \'https://www.javatpoint.com/kotlin-finally-block\', \'https://www.javatpoint.com/kotlin-multiple-catch-block\', \'https://www.javatpoint.com/kotlin-finally-block\']','[]','[]','[]','[\'Syntax of nested try block\']','[]','[\'Kotlin nested try block example\']','[\'The requirement of nested try catch block is arises when a block of code generates an exception and within that block another code statements also generates another exception.\']','[]','[\'try\', \'{\', \'}\', \'catch(e: SomeException)\', \'{\', \'}\', \'catch(e: SomeException)\', \'fun main(args: Array<String>) {\', \'val nume = intArrayOf(4, 8, 16, 32, 64, 128, 256, 512)\', \'val deno = intArrayOf(2, 0, 4, 4, 0, 8)\', \'try {\', \'for (i in nume.indices) {\', \'try {\', \'println(nume[i].toString() + \" / \" + deno[i] + \" is \" + nume[i] / deno[i])\', \'} catch (exc: ArithmeticException) {\', \'println(\"Can\'t divided by Zero!\")\', \'}\', \'}\', \'} catch (exc: ArrayIndexOutOfBoundsException) {\', \'println(\"Element not found.\")\']','[\'4 / 2 is 2\', \"Can\'t divided by Zero!\", \'16 / 4 is 4\', \'32 / 4 is 8\', \"Can\'t divided by Zero!\", \'128 / 8 is 16\', \'Element not found.\']','[]','[]'),(31,'[\'Kotlin finally Block\']','[\'Kotlin finally block such block which is always executes whether exception is handled or not. So it is used to execute important code statement.\']','[\'https://www.javatpoint.com/kotlin-throw-keyword\', \'https://www.javatpoint.com/kotlin-nested-try-block\', \'https://www.javatpoint.com/kotlin-throw-keyword\', \'https://www.javatpoint.com/kotlin-nested-try-block\', \'https://www.javatpoint.com/kotlin-throw-keyword\']','[]','[]','[]','[\'Kotlin finally Block Example 1\', \'Kotlin finally Block Example 2\', \'\nKotlin finally Block Example 3\']','[\'Note: The finally block will not be executed if program exits (either by calling exitProcess(Int) or any error that causes the process to abort).\']','[\"Let\'s see an example of exception handling in which exception does not occur.\", \"Let\'s see an example of exception handling in which exception occurs but not handled.\", \"Let\'s see an example of exception handling in which exception occurs and handled.\"]','[]','[]','[\'fun main (args: Array<String>){\', \'try {\', \'val data = 10 / 5\', \'println(data)\', \'} catch (e: NullPointerException) {\', \'println(e)\', \'} finally {\', \'println(\"finally block always executes\")\', \'println(\"below codes...\")\', \'fun main (args: Array<String>){\', \'try {\', \'val data = 5 / 0\', \'println(data)\', \'} catch (e: NullPointerException) {\', \'println(e)\', \'} finally {\', \'println(\"finally block always executes\")\', \'println(\"below codes...\")\', \'fun main (args: Array<String>){\', \'try {\', \'val data = 5 / 0\', \'println(data)\', \'} catch (e: ArithmeticException) {\', \'println(e)\', \'} finally {\', \'println(\"finally block always executes\")\', \'println(\"below codes...\")\']','[\'2\', \'finally block always executes\', \'below codes...\', \'finally block always executes\', \'Exception in thread \"main\" java.lang.ArithmeticException: / by zero\', \'java.lang.ArithmeticException: / by zero\', \'finally block always executes\', \'below codes...\']','[]','[]'),(32,'[\'Kotlin throw keyword\']','[\'Kotlin throw keyword is used to throw an explicit exception. It is used to throw a custom exception.\']','[\'https://www.javatpoint.com/kotlin-nullable-and-non-nullable-types\', \'https://www.javatpoint.com/kotlin-finally-block\', \'https://www.javatpoint.com/kotlin-nullable-and-non-nullable-types\', \'https://www.javatpoint.com/kotlin-finally-block\', \'https://www.javatpoint.com/kotlin-nullable-and-non-nullable-types\']','[]','[]','[]','[\'Syntax of throw keyword\']','[]','[\'To throw an exception object we will use the throw-expression.\', \'Kotlin throw example\', \"Let\'s see an example of throw keyword in which we are validating age limit for driving license. \"]','[]','[]','[\'throw SomeException()\', \'fun main(args: Array<String>) {\', \'validate(15)\', \'println(\"code after validation check...\")\', \'fun validate(age: Int) {\', \'if (age < 18)\', \'throw ArithmeticException(\"under age\")\', \'else\', \'println(\"eligible for drive\")\']','[\'Exception in thread \"main\" java.lang.ArithmeticException: under age\']','[]','[]'),(33,'[\'Kotlin Null Safety\']','[\'Kotlin null safety is a procedure to eliminate the risk of null reference from the code. Kotlin compiler throws NullPointerException immediately if it found any null argument is passed without executing any other statements. \']','[\'https://www.javatpoint.com/kotlin-smart-cast\', \'https://www.javatpoint.com/kotlin-throw-keyword\', \'https://www.javatpoint.com/kotlin-smart-cast\', \'https://www.javatpoint.com/kotlin-throw-keyword\', \'https://www.javatpoint.com/kotlin-smart-cast\']','[]','[]','[\'Kotlin Nullable Types and Non-Nullable Types\']','[\'Nullable Types\', \'Non Nullable Types\', \'Checking for null in conditions\']','[]','[\"Kotlin\'s type system is aimed to eliminate NullPointerException form the code. NullPointerException can only possible on following causes:\", \'Nullable types are declared by putting a ? behind the String as:\', \'Kotlin example of nullable types\', \'Non nullable types are normal strings which are declared as String types as:\', \'What happens when we assign null value to non nullable string?\', \'It will generate a compile time error.\', \"Kotlin\'s If expression is used for checking condition and returns value. \"]','[]','[\'Kotlin types system differentiates between references which can hold null (nullable reference) and which cannot hold null (non null reference). Normally,types of String are not nullable. To make string which holds null value, we have to explicitly define them by putting a ? behind the String as: String?\']','[\'var str1: String? = \"hello\"\', \'str1 = null // ok\', \'fun main(args: Array<String>){\', \'var str: String? = \"Hello\" // variable is declared as nullable\', \'str = null\', \'print(str)\', \'val str: String = null // compile error\', \'str = \"hello\" // compile error Val cannot be reassign\', \'var str2: String = \"hello\"\', \'str2 = null // compile error\', \'fun main(args: Array<String>){\', \'var str: String = \"Hello\"\', \'str = null // compile error\', \'print(str)\', \'fun main(args: Array<String>){\', \'var str: String? = \"Hello\"     // variable is declared as nullable\', \'var len = if(str!=null) str.length else -1\', \'println(\"str is : $str\")\', \'println(\"str length is : $len\")\', \'str = null\', \'println(\"str is : $str\")\', \'len = if(str!=null) str.length else -1\', \'println(\"b length is : $len\")\']','[\'null\', \'Error:(3, 11) Kotlin: Null can not be a value of a non-null type String\', \'str is : Hello\', \'str length is : 5\', \'str is : null\', \'b length is : -1\']','[]','[\'|||An forcefully call to throw NullPointerException();|||An uninitialized of this operator which is available in a constructor passed and used somewhere.|||Use of external java code as Kotlin is Java interoperability.|||\']'),(34,'[\'Smart cast\']','[\'We have seen in previous tutorial Kotlin Nullable Types and Non-Nullable Types how nullable type is declared. To use this nullable types we have an option to use smart casts. Smart cast is a feature in which Kotlin compiler tracks conditions inside if expression. If compiler founds a variable is not null of type nullable then the compiler will allow to access the variable.\']','[\'https://www.javatpoint.com/kotlin-unsafe-and-safe-cast-operator\', \'https://www.javatpoint.com/kotlin-nullable-and-non-nullable-types\', \'https://www.javatpoint.com/kotlin-unsafe-and-safe-cast-operator\', \'https://www.javatpoint.com/kotlin-nullable-and-non-nullable-types\', \'https://www.javatpoint.com/kotlin-unsafe-and-safe-cast-operator\']','[]','[]','[\'Use of is for smart cast\', \'Use of !is for smart cast\n\r\nfun main(args: Array<String>){\r\nval obj: Any = \"The variable obj is automatically cast to a String in this scope\"\r\n    if(obj !is String) {\r\nprintln(\"obj is not string\")\r\n\r\n    } else\r\n    // No Explicit Casting needed.\r\nprintln(\"String length is ${obj.length}\")\r\n}\r\n\nOutput:\nString length is 64\r\n\nSmart cast work according to the following conditions:\n\nA val variable always aspect for local properties.\nIf a val property is private or internal the check is performed in the same module where the property is declared.\nIf the local var variable is not modified between the check and the usage, is not captured in a lambda that modifies it.\n\n\n\nNext TopicKotlin Unsafe and Safe Cast Operator\n\n\n\n← prev\nnext →\n\n\n\']','[\'For example: \']','[]','[\'When we try to access a nullable type of String without safe cast it will generate a compile error.\', \'To solve the above expression we use a safe cast as:\', \'Smart cast work according to the following conditions:\']','[\'While using is or !is for checking the variable, the compiler tracks this information and internally cast the variable to target type. This is done inside the scope if is or !is returns true.\']','[]','[\'var string: String? = \"Hello!\"\', \'print(string.length) // Compile error\', \'fun main(args: Array<String>){\', \'var string: String? = \"Hello!\"\', \'if(string != null) { // smart cast\', \'print(string.length) // It works now!\', \'fun main(args: Array<String>){\', \'val obj: Any = \"The variable obj is automatically cast to a String in this scope\"\', \'if(obj is String) {\', \'println(\"String length is ${obj.length}\")\', \'fun main(args: Array<String>){\', \'val obj: Any = \"The variable obj is automatically cast to a String in this scope\"\', \'if(obj !is String) {\', \'println(\"obj is not string\")\', \'} else\', \'println(\"String length is ${obj.length}\")\']','[\'6\', \'String length is 64\', \'String length is 64\']','[]','[\'|||A val variable always aspect for local properties.|||If a val property is private or internal the check is performed in the same module where the property is declared.|||If the local var variable is not modified between the check and the usage, is not captured in a lambda that modifies it.||||||||||||Next TopicKotlin Unsafe and Safe Cast Operator||||||||||||← prev|||next →|||||||||\']'),(35,'[\'Unsafe and Safe Cast Operator\']','[\'Sometime it is not possible to cast variable and it throws an exception, this is called as unsafe cast. The unsafe cast is performed by the infix operator as.\']','[\'https://www.javatpoint.com/kotlin-elvis-operator\', \'https://www.javatpoint.com/kotlin-smart-cast\', \'https://www.javatpoint.com/kotlin-elvis-operator\', \'https://www.javatpoint.com/kotlin-smart-cast\', \'https://www.javatpoint.com/kotlin-elvis-operator\']','[]','[]','[\'Unsafe cast operator: as\', \'Kotlin Safe cast operator: as?\']','[]','[]','[\'A nullable string (String?) cannot be cast to non nullabe string (String), this throw an exception.\', \'The above program throw an exception:\', \'While try to cast integer value of Any type into string type lead to generate a ClassCastException.\', \'Source and target variable need to nullable for casting to work:\']','[\'Kotlin provides a safe cast operator as? for safely cast to a type. It returns a null if casting is not possible rather than throwing an ClassCastException exception.\']','[\"Let\'s see an example, trying to cast Any type of string value which is initially known by programmer not by compiler into nullable string and nullable int. It cast the value if possible or return null instead of throwing exception even casting is not possible.\"]','[\'fun main(args: Array<String>){\', \'val obj: Any? = null\', \'val str: String = obj as String\', \'println(str)\', \'Exception in thread \"main\" kotlin.TypeCastException: null cannot be cast to non-null type kotlin.String\', \'at TestKt.main(Test.kt:3)\', \'val obj: Any = 123\', \'val str: String = obj as String\', \'fun main(args: Array<String>){\', \'val obj: String? = \"String unsafe cast\"\', \'val str: String? = obj as String? // Works\', \'println(str)\', \'fun main(args: Array<String>){\', \'val location: Any = \"Kotlin\"\', \'val safeString: String? = location as? String\', \'val safeInt: Int? = location as? Int\', \'println(safeString)\', \'println(safeInt)\']','[\'String unsafe cast\', \'Kotlin\', \'null\']','[]','[]'),(36,'[\'Elvis Operator (?:)\']','[\'Elvis operator (?:) is used to return the not null value even the conditional expression is null. It is also used to check the null safety of values.\']','[\'https://www.javatpoint.com/kotlin-mutable-array\', \'https://www.javatpoint.com/kotlin-unsafe-and-safe-cast-operator\', \'https://www.javatpoint.com/kotlin-mutable-array\', \'https://www.javatpoint.com/kotlin-unsafe-and-safe-cast-operator\', \'https://www.javatpoint.com/kotlin-mutable-array\']','[]','[]','[\'Kotlin Elvis Operatorusing throw and return expression\']','[\'Kotlin Elvis Operator example\']','[]','[]','[\'In above code, the String str contains a null value, before accessing the value of str we need to perform safety check, whether string contain value or not. In conventional method we perform this safety check using if ... else statement.\', \'Kotlin provides advance operator known as Elvis operator(?:) which return the not null value even the conditional expression is null. The above if . . . else operator can be expressed using Elvis operator as bellow:\', \'Elvis operator returns expression left to ?: i.e -1. (str?. length) if it is not null otherwise it returns expression right to (?:)i.e(-1). The expression right side of Elvis operator evaluated only if the left side returns null.\', \'As Kotlin throw and return an expression, they can also be used on the right side of the Elvis operator. This can be used for checking functional arguments:\']','[\'In some cases, we can declare a variable which can hold a null reference. Suppose that a variable str which contains null reference, before using str in program we will check it nullability. If variable str found as not null then its property will use otherwise use some other non-null value.\']','[\'var str: String? = null\', \'var str2: String? = \"May be declare nullable string\"\', \'var len1: Int = if (str != null) str.length else -1\', \'var len2:  Int = if (str2 != null) str.length else -1\', \'fun main(args: Array<String>){\', \'var str: String? = null\', \'var str2: String? = \"May be declare nullable string\"\', \'var len1:  Int = if (str != null) str.length else -1\', \'var len2:  Int = if (str2 != null) str2.length else -1\', \'println(\"Length of str is ${len1}\")\', \'println(\"Length of str2 is ${len2}\")\', \'var len1:  Int = str?.length ?: -1\', \'var len2:  Int = str2?.length ?:  -1\', \'fun main(args: Array<String>){\', \'var str: String? = null\', \'var str2: String? = \"May be declare nullable string\"\', \'var len1:  Int = str ?.length ?: -1\', \'var len2:  Int = str2 ?.length ?:  -1\', \'println(\"Length of str is ${len1}\")\', \'println(\"Length of str2 is ${len2}\")\', \'funfunctionName(node: Node): String? {\', \'val parent = node.getParent() ?: return null\', \'val name = node.getName() ?: throw IllegalArgumentException(\"name expected\")\', \'fun main(args: Array<String>){\', \'val fruitName: String = fruits()\', \'println(fruitName)\', \'fun fruits(): String{\', \'val str: String? =\"abc\"\', \'val strLength: Int = if(str!= null) str.length else -1\', \'val strLength2: Int = str?.length ?: -1\', \'var string = \"str = $str\\n\"+\', \'\"strLength = $strLength\\n\"+\', \'\"strLength2 = $strLength2\\n\\n\"\', \'fun check(textOne: String?, textTwo: String?): String?{\', \'val textOne = textOne ?: return null\', \'val textTwo = textTwo ?: IllegalArgumentException(\"text exception\")\', \'return \"\\ntextOne = $textOne\\n\"+\', \'\"textTwo = $textTwo\\n\"\', \'string += \"check(null,\\\"mango\\\") = ${check(null,\"mango\")}\\n\" +\', \'\"check(\\\"apple\\\",\\\"orange\\\") = ${check(\"apple\",\"orange\")}\\n\"\', \'return string\']','[\'Length of str is -1\nLength of str2 is 30\', \'Length of str is -1\nLength of str2 is 30\', \'str = abc\nstrLength = 3\nstrLength2 = 3\n\ncheck(null,\"mango\") = null\ncheck(\"apple\",\"orange\") = \ntextOne = apple\ntextTwo = orange\']','[]','[]'),(37,'[\'Kotlin Array\']','[\'Array is a collection of similar data either of types Int, String etc. Array in Kotlin has mutable in nature with fixed size. Which means we can perform both read and writes operations on elements of array. \']','[\'https://www.javatpoint.com/kotlin-collections\', \'https://www.javatpoint.com/kotlin-elvis-operator\', \'https://www.javatpoint.com/kotlin-collections\', \'https://www.javatpoint.com/kotlin-elvis-operator\', \'https://www.javatpoint.com/kotlin-collections\']','[]','[]','[]','[\'Syntax of array decleration:\', \'Kotlin array declaration - using arrayOf function\', \'Kotlin array declaration - using arrayOf function\', \'Kotlin Array Example 1:\', \'Kotlin Array Example 2:\', \'Kotlin Array Example 3 - using arrayOf() and intArrayOf() function:\', \'Kotlin Array Example 4\', \'Kotlin Array Example 5 - traversing using range:\']','[]','[\'It initializes the element of array of int type with size 5 with all elements as 0 (zero).\', \"Let\'s see an example of array in Kotlin. In this example we will see how to initialize and traverse its elements.\"]','[\'In this example, we are simply initialize an array of size 5 with default value as 0. The index value of array starts with 0. First element of array is placed at index 0 and last element at one less than the size of array.\', \'We can also able to rewrite the value of array using its index value. Since we can able to modify the value of array, so it is called as mutable in nature. For example:\', \"Array in Kotlin also declare using different functions such as arrayOf(), intArrayOf(), etc. Let\'s see the example arrayOf() and intArrayOf() function.\", \"The Kotlin\'s array elements are also traverse using index range (minValue..maxValue) or (maxValue..minvalue). Let\'s see an example of array traversing using range.\"]','[\"Suppose that when we try to insert an element at index position greater than array size than what happen? It will throw an ArrayIndexOutOfBoundException. This is because the index value is not present where we want to insert the element. Due to this array is called fixed size length. Let\'s see the example:\"]','[\'var myArray = Array<Int>(5){0}\', \'var myArray1 = arrayOf(1,10,4,6,15)\', \'var myArray2 = arrayOf<Int>(1,10,4,6,15)\', \'val myArray3 = arrayOf<String>(\"Ajay\",\"Prakesh\",\"Michel\",\"John\",\"Sumit\")\', \'var myArray4= arrayOf(1,10,4, \"Ajay\",\"Prakesh\")\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'fun main(args: Array<String>){\', \'var myArray = Array<Int>(5){0}\', \'for(element in myArray){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var myArray = Array<Int>(5){0}\', \'myArray[1]= 10\', \'myArray[3]= 15\', \'for(element in myArray){\', \'println(element)\', \'fun main(args: Array<String>){\', \'val name = arrayOf<String>(\"Ajay\",\"Prakesh\",\"Michel\",\"John\",\"Sumit\")\', \'var myArray2 = arrayOf<Int>(1,10,4,6,15)\', \'var myArray3 = arrayOf(5,10,20,12,15)\', \'var myArray4= arrayOf(1,10,4, \"Ajay\",\"Prakesh\")\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'for(element in name){\', \'println(element)\', \'println()\', \'for(element in myArray2){\', \'println(element)\', \'println()\', \'for(element in myArray3){\', \'println(element)\', \'println()\', \'for(element in myArray4){\', \'println(element)\', \'println()\', \'for(element in myArray5){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'myArray5[6]=18 // ArrayIndexOutOfBoundsException\', \'for(element in myArray5){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var myArray5: IntArray = intArrayOf(5,10,20,12,15)\', \'for (index in 0..4){\', \'println(myArray5[index])\', \'println()\', \'for (index in 0..myArray5.size-1){\', \'println(myArray5[index])\']','[\'0\', \'0\', \'0\', \'0\', \'0\', \'0\', \'10\', \'0\', \'15\', \'0\', \'Ajay\', \'Prakesh\', \'Michel\', \'John\', \'Sumit\', \'1\', \'10\', \'4\', \'6\', \'15\', \'5\', \'10\', \'20\', \'12\', \'15\', \'1\', \'10\', \'4\', \'Ajay\', \'Prakesh\', \'5\', \'10\', \'15\', \'20\', \'25\', \'Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 6\', \'at ArrayListKt.main(Array.kt:4)\', \'5\', \'10\', \'20\', \'12\', \'15\', \'5\', \'10\', \'20\', \'12\', \'15\']','[]','[]'),(38,'[\'Kotlin Collections\']','[\'Collections in Kotlin are used to store group of related objects in a single unit. By using collection, we can store, retrieve manipulate and aggregate data.\']','[\'https://www.javatpoint.com/kotlin-list\', \'https://www.javatpoint.com/kotlin-mutable-array\', \'https://www.javatpoint.com/kotlin-list\', \'https://www.javatpoint.com/kotlin-mutable-array\', \'https://www.javatpoint.com/kotlin-list\']','[]','[]','[\'Types of Kotlin Collections\']','[\'Immutable Collection:\', \'Mutable Collection:\']','[]','[\'Kotlin collections are broadly categories into two different forms. These are:\', \'Mutable collections supports both read and write functionalities. Methods of mutable collections that supports read and write functionalities are:\']','[\'Immutable collection also called Collection supports read only functionalities. Methods of immutable collection that supports read functionalities are:\']','[]','[]','[]','[\'Collection Types|||Methods of Immutable Collection&&&List|||listOf()|||listOf<T>()&&&Map|||mapOf()&&&Set|||setOf()\', \'Collection Types|||Methods of Mutable Collection&&&List|||ArrayList<T>()|||arrayListOf()|||mutableListOf()&&&Map|||HashMap|||hashMapOf()|||mutableMapOf()&&&Set|||hashSetOf()|||mutableSetOf()\']','[\'|||Immutable Collection (or Collection)|||Mutable Collection|||\']'),(39,'[\'Kotlin List Interface\']','[\'Kotlin List is an interface and generic collection of elements. The List interface inherits form Collection<T> class. It is immutable and its methods supports only read functionalities.\']','[\'https://www.javatpoint.com/kotlin-mutablelist-mutablelistof\', \'https://www.javatpoint.com/kotlin-collections\', \'https://www.javatpoint.com/kotlin-mutablelist-mutablelistof\', \'https://www.javatpoint.com/kotlin-collections\', \'https://www.javatpoint.com/kotlin-mutablelist-mutablelistof\']','[]','[]','[\'List Interface Declaration\', \'Function of Kotlin List Interface\']','[\'Kotlin List Example 1\', \'Kotlin List Example 2\', \'Kotlin List Example 3\', \'Kotlin List Example 4\']','[]','[\'To use the List interface we need to use its function called listOf(), listOf<E>().\', \'The elements of list follow the sequence of insertion order and contains index number same as array.\', \'There are several functions are available in the List interface. Some functions of List interface are mention below.\', \"Let\'s see an example of list using listOf() function.\", \'In the listOf() function we can pass the different types of data at the same time. List can also traverse the list using index range.\', \"For more specific we can provide the generic types of list such as listOf<Int>(), listOf<String>(), listOf<Any>() Let\'s see the example.\", \"Let\'s see the use of different function of Kotlin list interface using listOf<T>() function.\"]','[\'The limitation of List interface is that it is immutable. It cannot add more elements in list after its declaration. To solve this limitation Collection framework provide mutable list.\']','[]','[\'public interface List<out E> : Collection<E> (source)\', \'fun main(args: Array<String>){\', \'var list = listOf(\"Ajay\",\"Vijay\",\"Prakash\")//read only, fix-size\', \'for(element in list){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var list = listOf(1,2,3,\"Ajay\",\"Vijay\",\"Prakash\")//read only, fix-size\', \'for(element in list){\', \'println(element)\', \'println()\', \'for(index in 0..list.size-1){\', \'println(list[index])\', \'fun main(args: Array<String>){\', \'var intList: List<Int> = listOf<Int>(1,2,3)\', \'var stringList: List<String> = listOf<String>(\"Ajay\",\"Vijay\",\"Prakash\")\', \'var anyList: List<Any> = listOf<Any>(1,2,3,\"Ajay\",\"Vijay\",\"Prakash\")\', \'println(\"print int list\")\', \'for(element in intList){\', \'println(element)\', \'println()\', \'println(\"print string list\")\', \'for(element in stringList){\', \'println(element)\', \'println()\', \'println(\"print any list\")\', \'for(element in anyList){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var stringList: List<String> = listOf<String>(\"Ajay\",\"Vijay\",\"Prakash\",\"Vijay\",\"Rohan\")\', \'var list: List<String> = listOf<String>(\"Ajay\",\"Vijay\",\"Prakash\")\', \'for(element in stringList){\', \'print(element+\" \")\', \'println()\', \'println(stringList.get(0))\', \'println(stringList.indexOf(\"Vijay\"))\', \'println(stringList.lastIndexOf(\"Vijay\"))\', \'println(stringList.size)\', \'println(stringList.contains(\"Prakash\"))\', \'println(stringList.containsAll(list))\', \'println(stringList.subList(2,4))\', \'println(stringList.isEmpty())\', \'println(stringList.drop(1))\', \'println(stringList.dropLast(2))\']','[\'Ajay\', \'Vijay\', \'Prakash\', \'1\', \'2\', \'3\', \'Ajay\', \'Vijay\', \'Prakash\', \'1\', \'2\', \'3\', \'Ajay\', \'Vijay\', \'Prakash\', \'print int list\', \'1\', \'2\', \'3\', \'print string list\', \'Ajay\', \'Vijay\', \'Prakash\', \'print any list\', \'1\', \'2\', \'3\', \'Ajay\', \'Vijay\', \'Prakash\', \'Ajay Vijay Prakash Vijay Rohan\', \'Ajay\', \'1\', \'3\', \'5\', \'true\', \'true\', \'[Prakash, Vijay]\', \'false\', \'[Vijay, Prakash, Vijay, Rohan]\', \'[Ajay, Vijay, Prakash]\']','[\'Functions|||Descriptions&&&abstract fun contains(element: E): Boolean|||It checks specified element is contained in this collection.&&&abstract fun containsAll(elements: Collection<E>): Boolean|||It checks all elements specified are contained in this collection.&&&abstract operator fun get(index: Int): E|||It returns the element at given index from the list.&&&abstract fun indexOf(element: E): Int|||Returns the index of first occurrence of specified element in the list, or -1 if specified element is not present in list.&&&abstract fun isEmpty(): Boolean|||It returns the true if list is empty, otherwise false.&&&abstract fun iterator(): Iterator<E>|||It returns an iterator over the elements of this list.&&&abstract fun lastIndexOf(element: E): Int|||It returns the index of last occurrence of specified element in the list, or return -1 if specified element is not present in list.&&&abstract fun listIterator(): ListIterator<E>|||It returns a list iterator over the elements in proper sequence in current list.&&&abstract fun listIterator(index: Int): ListIterator<E>|||It returns a list iterator over the elements in proper sequence in current list, starting at specified index.&&&abstract fun subList(fromIndex: Int, toIndex: Int): List|||It returns a part of list between fromIndex (inclusive) to toIndex (exclusive).\']','[]'),(40,'[\'Kotlin MutableList (mutableListOf())\']','[\'Kotlin MutableList is an interface and generic collection of elements. MutableList interface is mutable in nature. It inherits form Collection<T> class. The methods of MutableList interface supports both read and write functionalities. Once the elements in MutableList have declared, it can be added more elements in it or removed, so it has no fixed size length.\']','[\'https://www.javatpoint.com/kotlin-arraylist\', \'https://www.javatpoint.com/kotlin-list\', \'https://www.javatpoint.com/kotlin-arraylist\', \'https://www.javatpoint.com/kotlin-list\', \'https://www.javatpoint.com/kotlin-arraylist\']','[]','[]','[]','[\'MutableList Interface Declaration\', \'Function of Kotlin MutableList\', \'Kotlin MutableList Example 1\', \'Kotlin MutableList Example 2\', \'Kotlin MutableList Example 3\', \'Kotlin MutableList Example 4\']','[]','[\'To use the MutableList interface we use its function called mutableListOf() or mutableListOf<E>().\', \'The elements of MutableList follow the sequence of insertion order and contains index number same as array.\', \'There are several methods are available in MutableList interface. Some methods of MutableList interface are mention below.\', \"Let\'s see an example of MutableList using mutableListOf() function and traverse its elements.\", \"Let\'s see the use of different function of MutableList interface using mutableListOf<T>() function.\"]','[]','[\'The function mutableListOf() of MutableList interface provides facilities to add elements after its declaration. MutableList can also be declared as empty and added elements later but in this situation we need to define its generic type. For example:\', \"For more specific we can provide the generic types of MutableList interface such as mutableListOf<Int>(), mutableListOf<String>(), mutableListOf<Any>(). The mutableListOf<Int>() takes only integer value, mutableListOf<String>() takes only String value and mutableListOf<Any>() takes different data types value at the same time. Let\'s see the example.\"]','[\'interface MutableList<E> : List<E>, MutableCollection<E> (source)\', \'fun main(args: Array<String>){\', \'var mutableList = mutableListOf(\"Ajay\",\"Vijay\",\"Prakash\",\"Vijay\")\', \'for(element in mutableList){\', \'println(element)\', \'println()\', \'for(index in 0..mutableList.size-1){\', \'println(mutableList[index])\', \'fun main(args: Array<String>){\', \'var mutableList1 = mutableListOf(\"Ajay\",\"Vijay\")\', \'mutableList1.add(\"Prakash\")\', \'mutableList1.add(\"Vijay\")\', \'var mutableList2 = mutableListOf<String>()\', \'mutableList2.add(\"Ajeet\")\', \'mutableList2.add(\"Amit\")\', \'mutableList2.add(\"Akash\")\', \'for(element in mutableList1){\', \'println(element)\', \'println()\', \'for(element in mutableList2){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var mutableListInt: MutableList<Int> = mutableListOf<Int>()\', \'var mutableListString: MutableList<String> = mutableListOf<String>()\', \'var mutableListAny: MutableList<Any> = mutableListOf<Any>()\', \'mutableListInt.add(5)\', \'mutableListInt.add(7)\', \'mutableListInt.add(10)\', \'mutableListInt.add(2,15) //add element 15 at index 2\', \'mutableListString.add(\"Ajeet\")\', \'mutableListString.add(\"Ashu\")\', \'mutableListString.add(\"Mohan\")\', \'mutableListAny.add(\"Sunil\")\', \'mutableListAny.add(2)\', \'mutableListAny.add(5)\', \'mutableListAny.add(\"Raj\")\', \'println(\".....print Int type.....\")\', \'for(element in mutableListInt){\', \'println(element)\', \'println()\', \'println(\".....print String type.....\")\', \'for(element in mutableListString){\', \'println(element)\', \'println()\', \'println(\".....print Any type.....\")\', \'for(element in mutableListAny){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var mutableList = mutableListOf<String>()\', \'mutableList.add(\"Ajay\") // index 0\', \'mutableList.add(\"Vijay\") // index 1\', \'mutableList.add(\"Prakash\") // index 2\', \'var mutableList2 = mutableListOf<String>(\"Rohan\",\"Raj\")\', \'var mutableList3 = mutableListOf<String>(\"Dharmesh\",\"Umesh\")\', \'var mutableList4 = mutableListOf<String>(\"Ajay\",\"Dharmesh\",\"Ashu\")\', \'println(\".....mutableList.....\")\', \'for(element in mutableList){\', \'println(element)\', \'println(\".....mutableList[2].....\")\', \'println(mutableList[2])\', \'mutableList.add(2,\"Rohan\")\', \'println(\"......mutableList.add(2,\\\"Rohan\\\")......\")\', \'for(element in mutableList){\', \'println(element)\', \'mutableList.add(\"Ashu\")\', \'println(\".....mutableList.add(\\\"Ashu\\\")......\")\', \'for(element in mutableList){\', \'println(element)\', \'mutableList.addAll(1,mutableList3)\', \'println(\"... mutableList.addAll(1,mutableList3)....\")\', \'for(element in mutableList){\', \'println(element)\', \'mutableList.addAll(mutableList2)\', \'println(\"...mutableList.addAll(mutableList2)....\")\', \'for(element in mutableList){\', \'println(element)\', \'mutableList.remove(\"Vijay\")\', \'println(\"...mutableList.remove(\\\"Vijay\\\")....\")\', \'for(element in mutableList){\', \'println(element)\', \'mutableList.removeAt(2)\', \'println(\"....mutableList.removeAt(2)....\")\', \'for(element in mutableList){\', \'println(element)\', \'mutableList.removeAll(mutableList2)\', \'println(\"....  mutableList.removeAll(mutableList2)....\")\', \'for(element in mutableList){\', \'println(element)\', \'println(\"....mutableList.set(2,\\\"Ashok\\\")....\")\', \'mutableList.set(2,\"Ashok\")\', \'for(element in mutableList){\', \'println(element)\', \'println(\".... mutableList.retainAll(mutableList4)....\")\', \'mutableList.retainAll(mutableList4)\', \'for(element in mutableList){\', \'println(element)\', \'println(\".... mutableList2.clear()....\")\', \'mutableList2.clear()\', \'for(element in mutableList2){\', \'println(element)\', \'println(\".... mutableList2 after mutableList2.clear()....\")\', \'println(mutableList2)\', \'println(\"....mutableList.subList(1,2)....\")\', \'println(mutableList.subList(1,2))\']','[\'Ajay\', \'Vijay\', \'Prakash\', \'Vijay\', \'Ajay\', \'Vijay\', \'Prakash\', \'Vijay\', \'Ajay\', \'Vijay\', \'Prakash\', \'Vijay\', \'Ajeet\', \'Amit\', \'Akash\', \'.....print Int type.....\', \'5\', \'7\', \'15\', \'10\', \'.....print String type.....\', \'Ajeet\', \'Ashu\', \'Mohan\', \'.....print Any type.....\', \'Sunil\', \'2\', \'5\', \'Raj\', \'.....mutableList.....\', \'Ajay\', \'Vijay\', \'Prakash\', \'.....mutableList[2].....\', \'Prakash\', \'......mutableList.add(2,\"Rohan\")......\', \'Ajay\', \'Vijay\', \'Rohan\', \'Prakash\', \'.....mutableList.add(\"Ashu\")......\', \'Ajay\', \'Vijay\', \'Rohan\', \'Prakash\', \'Ashu\', \'... mutableList.addAll(1,mutableList3)....\', \'Ajay\', \'Dharmesh\', \'Umesh\', \'Vijay\', \'Rohan\', \'Prakash\', \'Ashu\', \'...mutableList.addAll(mutableList2)....\', \'Ajay\', \'Dharmesh\', \'Umesh\', \'Vijay\', \'Rohan\', \'Prakash\', \'Ashu\', \'Rohan\', \'Raj\', \'...mutableList.remove(\"Vijay\")....\', \'Ajay\', \'Dharmesh\', \'Umesh\', \'Rohan\', \'Prakash\', \'Ashu\', \'Rohan\', \'Raj\', \'....mutableList.removeAt(2)....\', \'Ajay\', \'Dharmesh\', \'Rohan\', \'Prakash\', \'Ashu\', \'Rohan\', \'Raj\', \'....  mutableList.removeAll(mutableList2)....\', \'Ajay\', \'Dharmesh\', \'Prakash\', \'Ashu\', \'....mutableList.set(2,\"Ashok\")....\', \'Ajay\', \'Dharmesh\', \'Ashok\', \'Ashu\', \'.... mutableList.retainAll(mutableList4)....\', \'Ajay\', \'Dharmesh\', \'Ashu\', \'.... mutableList2.clear()....\', \'.... mutableList2 after mutableList2.clear()....\', \'[]\', \'....mutableList.subList(1,2)....\', \'[Dharmesh]\']','[\'Function|||Descriptions&&&abstract fun add(element: E): Boolean|||It adds the given element to the collection.&&&abstract fun add(index: Int, element: E)|||It adds the element at specified index.&&&abstract fun addAll(elements: Collection<E>): Boolean|||It adds all the elements of given collection to current collection.&&&abstract fun clear()|||It removes all the elements from this collection.&&&abstract fun listIterator(): MutableListIterator<E>|||It returns a list iterator over the elements in proper sequence in current list.&&&abstract fun listIterator(index: Int): MutableListIterator<E>|||It returns a list iterator starting from specified index over the elements in list in proper sequence.&&&abstract fun remove(element: E): Boolean|||It removes the specified element if it present in current collection.&&&abstract fun removeAll(elements: Collection<E>): Boolean|||It removes all the elements from the current list which are also present in the specified collection.&&&abstract fun removeAt(index: Int): E|||It removes element at given index from the list.&&&abstract fun retainAll(elements: Collection<E>): Boolean|||It retains all the elements within the current collection which are present in given collection.&&&abstract operator fun set(index: Int, element: E): E|||It replaces the element and add new at given index with specified element.&&&abstract fun subList(|||fromIndex: Int, |||toIndex: Int|||): MutableList<E>|||It returns part of list from specified fromIndex (inclusive) to toIndex (exclusive) from current list. The returned list is backed by current list, so non-structural changes in the returned list are reflected in current list, and vice-versa. \']','[]'),(41,'[\'Kotlin ArrayList class\']','[\'Kotlin ArrayList class is used to create a dynamic array. Which means the size of ArrayList class can be increased or decreased according to requirement. ArrayList class provides both read and write functionalities.\']','[\'https://www.javatpoint.com/kotlin-arraylist-arraylistof\', \'https://www.javatpoint.com/kotlin-mutablelist-mutablelistof\', \'https://www.javatpoint.com/kotlin-arraylist-arraylistof\', \'https://www.javatpoint.com/kotlin-mutablelist-mutablelistof\', \'https://www.javatpoint.com/kotlin-arraylist-arraylistof\']','[]','[]','[\'Constructor of Kotlin ArrayList\']','[\'Functions of Kotlin ArrayList\', \'Kotlin ArrayList Example 1- empty ArrayList\', \'Kotlin ArrayList Example 2- initialize ArrayList capacity\', \'Kotlin ArrayList Example 3- filled elements in ArrayList using collection\', \'Kotlin ArrayList Example 4 - get()\', \'Kotlin ArrayList Example 5 - set()\', \'Kotlin ArrayList Example 6 - indexOf()\', \'Kotlin ArrayList Example 7 - lastIndexOf()\', \'Kotlin ArrayList Example 8 - remove()\', \'Kotlin ArrayList Example 9 - removeAt()\', \'Kotlin ArrayList Example 10 - clear()\']','[]','[\"Let\'s create a simple example of ArrayList class define with empty ArrayList of String and add elements later. \", \'The get() function of ArrayList class is used to retrieve the element present at given specified index. For example:\', \'The remove () function of ArrayList class is used to remove the first occurrence of element if it is present in the list. For example:\', \'The removeAt() function of ArrayList class is used to remove the element of specified index from the list. For example:\', \'The clear() function of ArrayList class is used to remove (clear) all the elements of list. For example:\']','[\'Kotlin ArrayList class follows the sequence of insertion order. ArrayList class is non synchronized and it may contains duplicate elements. The elements of ArrayList class are accessed randomly as it works on index basis.\', \"Let\'s create an ArrayList class with initialize its initial capacity. The capacity of ArrayList class is not fixed and it can be change later in program according to requirement.\", \'The elements in Kotlin ArratList class can also be added using other collection. For more specific in ArrayList class it is declared by its generic types. Elements of ArrayList class also be traverse using iterator() function. For example:\', \'The set() function of ArrayList class is used to set the given element at specified index and replace if any element present at specified index. For example:\', \'The indexOf() function of ArrayList class is used to retrieve the index value of first occurrence of element or return -1 if the specified element in not present in the list. For example:\', \'The lastindexOf() function of ArrayList class is used to retrieve the index value of last occurrence of element or return -1 if the specified element in not present in the list. For example:\']','[]','[\'fun main(args: Array<String>){\', \'val arrayList = ArrayList<String>()//Creating an empty arraylist\', \'arrayList.add(\"Ajay\")//Adding object in arraylist\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'fun main(args: Array<String>){\', \'val arrayList1 = ArrayList<String>(5)\', \'arrayList1.add(\"Ajay\")//Adding object in arraylist\', \'arrayList1.add(\"Vijay\")\', \'arrayList1.add(\"Prakash\")\', \'arrayList1.add(\"Rohan\")\', \'arrayList1.add(\"Vijay\")\', \'println(\".......print ArrayList1......\")\', \'for (i in arrayList1) {\', \'println(i)\', \'println(\"size of arrayList1 = \"+arrayList1.size)\', \'val arrayList2 = ArrayList<Int>(5)\', \'arrayList2.add(14)\', \'arrayList2.add(20)\', \'arrayList2.add(80)\', \'println(\"......print ArrayList2......\")\', \'for (i in arrayList2) {\', \'println(i)\', \'println(\"size of arrayList2 = \"+arrayList2.size)\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<String> = ArrayList<String>(5)\', \'var list: MutableList<String> = mutableListOf<String>()\', \'list.add(\"Ajay\")\', \'list.add(\"Vijay\")\', \'list.add(\"Prakash\")\', \'arrayList.addAll(list)\', \'println(\"......print ArrayList......\")\', \'val itr = arrayList.iterator()\', \'while(itr.hasNext()) {\', \'println(itr.next())\', \'println(\"size of arrayList = \"+arrayList.size)\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<String> = ArrayList<String>(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.get(2).......\")\', \'println( arrayList.get(2))\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<String> = ArrayList<String>(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.set(2,\\\"Ashu\\\").......\")\', \'arrayList.set(2,\"Ashu\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<String> = ArrayList<String>(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.indexOf(\\\"Vijay\\\").......\")\', \'println(arrayList.indexOf(\"Vijay\"))\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<String> = ArrayList<String>(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.lastIndexOf(\\\"Vijay\\\").......\")\', \'println(arrayList.lastIndexOf(\"Vijay\"))\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<String> = ArrayList<String>(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.remove(\\\"Vijay\\\").......\")\', \'arrayList.remove(\"Vijay\")\', \'for (i in arrayList) {\', \'println(i)\', \'fun main(args: Array){\', \'val arrayList: ArrayList = ArrayList(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.remove(3).......\")\', \'arrayList.removeAt(3)\', \'for (i in arrayList) {\', \'println(i)\', \'fun main(args: Array){\', \'val arrayList: ArrayList = ArrayList(5)\', \'arrayList.add(\"Ajay\")\', \'arrayList.add(\"Vijay\")\', \'arrayList.add(\"Prakash\")\', \'arrayList.add(\"Rohan\")\', \'arrayList.add(\"Vijay\")\', \'println(\".......print ArrayList.......\")\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.clear().......\")\', \'arrayList.clear()\', \'for (i in arrayList) {\', \'println(i)\', \'println(\".......arrayList.......\")\', \'println(arrayList)\']','[\'......print ArrayList......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......print ArrayList1......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'size of arrayList1 = 5\', \'......print ArrayList2......\', \'14\', \'20\', \'80\', \'size of arrayList2 = 3\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'size of arrayList = 3\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.get(2).......\', \'Prakash\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.set(2,\"Ashu\").......\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Ashu\', \'Rohan\', \'Vijay\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.indexOf(\"Vijay\").......\', \'1\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.lastIndexOf(\"Vijay\").......\', \'4\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.remove(\"Vijay\").......\', \'Ajay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.remove(3).......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Vijay\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......arrayList.clear().......\', \'.......arrayList.......\', \'[]\']','[\'Constructor|||Description&&&ArrayList<E>()|||It is used to create an empty ArrayList&&&ArrayList(capacity: Int)|||It is used to create an ArrayList of specified capacity.&&&ArrayList(elements: Collection<E>)|||It is used to create an ArrayList filled from the elements of collection.\', \'Function|||Description&&&open fun add(element: E): Boolean|||It is used to add the specific element into the collection.&&&open fun add(index: Int, element: E)|||It is used to insert an element at specific index.&&&open fun addAll(elements: Collection<E>): Boolean|||It is used to add all the elements in the specified collection to current collection.&&&open fun addAll(index: Int, elements: Collection<E>): Boolean|||It is used to add all the elements of specified collection into the current list at the specified index.&&&open fun clear()|||It is used to removes all elements from the collection.&&&open fun get(index: Int): E|||It is used to return the element at specified index in the list.&&&open fun indexOf(element: E): Int|||It is used to return the index of first occurrence of specified element in the list or return -1 if the specified element in not present in the list.&&&open fun lastIndexOf(element: E): Int|||It is used to return the last occurrence of given element from the list or it returns -1 if the given element is not present in the list.&&&open fun remove(element: E): Boolean|||It is used to remove a single instance of the specific element from current collection, if it is available.&&&open fun removeAt(index: Int): E|||It is used to remove the specific index element from the list.&&&open fun removeRange(startIndex: Int, endIndex: Int)|||Its remove the range of elements starting from startIndex to endIndex in which endIndex is not includes.&&&open fun set(index: Int, element: E): E|||It is used to replaces the element from the specified position from current list with the specified element.&&&open fun toArray(): Array<Any?>|||It is used to return new array of type Array<Any?> with the elements of this collection.&&&open fun toString(): String|||It is used to returns a string representation of the object.&&&fun trimToSize()|||It does nothing in this ArrayList implementation.\']','[]'),(42,'[\'Kotlin ArrayList: arrayListOf()\']','[\'An arrayListOf() is a function of ArrayList class. ArrayList is mutable which means it provides both read am write functionalities. The arrayListOf() function returns an ArrayList type.\']','[\'https://www.javatpoint.com/kotlin-map\', \'https://www.javatpoint.com/kotlin-arraylist\', \'https://www.javatpoint.com/kotlin-map\', \'https://www.javatpoint.com/kotlin-arraylist\', \'https://www.javatpoint.com/kotlin-map\']','[]','[]','[\'Syntax of arrayListOf() function\']','[\'Function of Kotlin ArrayList\', \'Kotlin arrayListOf() Example 1\', \'Kotlin arrayListOf() Example 2\', \'Kotlin arrayListOf() Example 3- iterator() function\', \'Kotlin arrayListOf() Example 4 - get()\', \'Kotlin arrayListOf() Example 5 - set()\', \'Kotlin arrayListOf() Example - add and print Employee data\']','[]','[\"Let\'s create a simple example of arrayListOf() function.\", \'The elements of ArrayList class is also be traverse using inbuilt iterator() function. For example:\', \'The get() function of arrayListOf() is used to retrieve the element present at specified index. For example:\']','[\"For more specific we can define the generic types of arrayListOf() function such as arrayListOf<Int>(), arrqayListOf<String>(),arrayListOf<Any>(). Let\'s see the example.\", \'The set() function of arrayListOf() is used to set the given element at specified index and replace if any element already present at that index. For example:\', \"Let\'s create an another example of arrayListOf() function of ArrayList class. In this example we are adding and traversing Employee class data. Here Employee class is bean class which defines the property of Employee.\"]','[]','[\'inline fun <T> arrayListOf(): ArrayList<T> (source)\', \'fun <T> arrayListOf(vararg elements: T): ArrayList<T> (source)\', \'fun main(args: Array<String>){\', \'var arrayList = arrayListOf<Int>(4,7,12)\', \'for(element in arrayList){\', \'println(element)\', \'fun main(args: Array){\', \'var intArrayList: ArrayList = arrayListOf(1,2,3)\', \'var stringArrayList: ArrayList = arrayListOf(\"Ajay\",\"Vijay\",\"Prakash\")\', \'var anyArrayList: ArrayList = arrayListOf(1,2,3,\"Ajay\",\"Vijay\",\"Prakash\")\', \'println(\"print int ArrayList\")\', \'for(element in intArrayList){\', \'println(element)\', \'println()\', \'println(\"print string ArrayList\")\', \'for(element in stringArrayList){\', \'println(element)\', \'println()\', \'println(\"print any ArrayList\")\', \'for(element in anyArrayList){\', \'println(element)\', \'fun main(args: Array<String>){\', \'val list: ArrayList<String> = arrayListOf<String>()\', \'list.add(\"Ajay\")\', \'list.add(\"Vijay\")\', \'list.add(\"Prakash\")\', \'println(\".......print ArrayList.......\")\', \'val itr = list.iterator()\', \'while(itr.hasNext()) {\', \'println(itr.next())\', \'fun main(args: Array<String>){\', \'val list: ArrayList<String> = arrayListOf<String>()\', \'list.add(\"Ajay\")\', \'list.add(\"Vijay\")\', \'list.add(\"Prakash\")\', \'list.add(\"Rohan\")\', \'list.add(\"Vijay\")\', \'println(\".......print list.......\")\', \'for (i in list) {\', \'println(i)\', \'println(\".......list.get(2).......\")\', \'println( list.get(2))\', \'fun main(args: Array<String>){\', \'val list: ArrayList<String> = arrayListOf<String>()\', \'list.add(\"Ajay\")\', \'list.add(\"Vijay\")\', \'list.add(\"Prakash\")\', \'println(\".......print list.......\")\', \'for (i in list) {\', \'println(i)\', \'println(\".......arrayList.set(2,\\\"Rohan\\\").......\")\', \'list.set(2,\"Rohan\")\', \'println(\".......print ArrayList.......\")\', \'for (i in list) {\', \'println(i)\', \'class Employee(var id: Int, var name: String, var phone: Int, var city: String)\', \'fun main(args: Array<String>){\', \'val arrayList: ArrayList<Employee> = arrayListOf<Employee>()\', \'val e1 = Employee(101, \"Ajay\", 55555, \"Delhi\")\', \'val e2 = Employee(102, \"Rahul\", 44443, \"Mumbai\")\', \'val e3 = Employee(103, \"Sanjay\", 45422, \"Noida\")\', \'arrayList.add(e1)\', \'arrayList.add(e2)\', \'arrayList.add(e3)\', \'for (e in arrayList) {\', \'println(\"${e.id} ${e.name} ${e.phone} ${e.city}\")\']','[\'4\', \'7\', \'12\', \'print int ArrayList\', \'1\', \'2\', \'3\', \'print string ArrayList\', \'Ajay\', \'Vijay\', \'Prakash\', \'print any ArrayList\', \'1\', \'2\', \'3\', \'Ajay\', \'Vijay\', \'Prakash\', \'.......print ArrayList.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'.......print list.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'Rohan\', \'Vijay\', \'.......list.get(2).......\', \'Prakash\', \'.......print list.......\', \'Ajay\', \'Vijay\', \'Prakash\', \'.......list.set(2,\"Rohan\").......\', \'.......print list.......\', \'Ajay\', \'Vijay\', \'Rohan\', \'101 Ajay 55555 Delhi\', \'102 Rahul 44443 Mumbai\', \'103 Sanjay 45422 Noida\']','[\'Function|||Description&&&open fun add(element: E): Boolean|||It is used to add the specific element into the collection.&&&open fun add(index: Int, element: E)|||It is used to insert an element at specific index.&&&open fun addAll(elements: Collection<E>): Boolean|||It is used to add all the elements in the specified collection to current collection.&&&open fun addAll(index: Int, elements: Collection<E>): Boolean|||It is used to add all the elements of specified collection into the current list at the specified index.&&&open fun clear()|||It is used to removes all elements from the collection.&&&open fun get(index: Int): E|||It is used to return the element at specified index in the list.&&&open fun indexOf(element: E): Int|||It is used to return the index of first occurrence of specified element in the list or return -1 if the specified element in not present in the list.&&&open fun lastIndexOf(element: E): Int|||It is used to return the last occurrence of given element from the list or it returns -1 if the given element is not present in the list.&&&open fun remove(element: E): Boolean|||It is used to remove a single instance of the specific element from current collection, if it is available.&&&open fun removeAt(index: Int): E|||It is used to remove the specific index element from the list.&&&open fun removeRange(startIndex: Int, endIndex: Int)|||Its remove the range of elements starting from startIndex to endIndex in which endIndex is not includes.&&&open fun set(index: Int, element: E): E|||It is used to replaces the element from the specified position from current list with the specified element.&&&open fun toArray(): Array<Any?>|||It is used to return new array of type Array<Any?> with the elements of this collection.&&&open fun toString(): String|||It is used to returns a string representation of the object.&&&fun trimToSize()|||It does nothing in this ArrayList implementation.\']','[]'),(43,'[\'Kotlin Map Interface\']','[\'Kotlin Map is an interface and generic collection of elements. Map interface holds data in the form of key and value pair. Map key are unique and holds only one value for each key. The key and value may be of different pairs such as <Int, Int>,<Int, String>, <Char, String>etc. This interface is immutable, fixed size and its methods support read only access.\']','[\'https://www.javatpoint.com/kotlin-hashmap\', \'https://www.javatpoint.com/kotlin-arraylist-arraylistof\', \'https://www.javatpoint.com/kotlin-hashmap\', \'https://www.javatpoint.com/kotlin-arraylist-arraylistof\', \'https://www.javatpoint.com/kotlin-hashmap\']','[]','[]','[]','[\'Map Interface Declaration\', \'Properties of Map Interface\', \'Functions of Map Interface\', \'Kotlin Map Interface Example 1\', \'Kotlin Map Interface Example 2 - generic\', \'Kotlin Map Interface Example 3 - non generic\', \'Kotlin Map Interface Example 4 - mapOf().getValue()\', \'Kotlin Map Interface Example 5 - mapOf().contains()\', \'\nKotlin Map Interface Example 6 - mapOf().containsKey()\', \'Kotlin Map Interface Example 7 - mapOf().containsValue ()\', \'Kotlin Map Interface Example 8 - mapOf().get()\', \'Kotlin Map Interface Example 9 - mapOf().getOrDefault ()\', \'Kotlin Map Interface Example 10 - mapOf().asIterable ()\', \'Kotlin Map Interface Example 11 - mapOf().iterator()\', \'Kotlin Map Interface Example 12 - mapOf().minus()\', \'Kotlin Map Interface Example 13 - mapOf().plus()\']','[]','[\'To use the Map interface we need to use its function called mapOf() or mapOf<k,v>().\', \'There are several functions are available in Map interface. Some functions of Map interface are mention below.\', \'For more specific we can provide generic type Map such as myMap: Map<k, v> = mapOf<k,v>().\']','[\"Let\'s create an example of declaring and traversing the value of map using mapOf<k,v>() function. In this example, we create key of Int and value of String types.\", \'If we cannot specify any types of key and value of Map Interface then it can take different types of key and value. This is because all class internally uses <Any, Any> types. For example:\']','[]','[\'interface Map<K, out V> (source)\', \'fun main(args: Array<String>){\', \'val myMap = mapOf<Int,String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(myMap[key])\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int, String> = mapOf<Int,String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'fun main(args: Array<String>){\', \'val myMap = mapOf(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\",\"ram\" to \"Ram\", \"two\" to 2)\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\".....myMap.getValue(4).......\")\', \'println(myMap.getValue(4))\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\".....myMap.contains(3).......\")\', \'println( myMap.contains(3))\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\"......myMap.containsKey(2)......\")\', \'println(myMap.containsKey(2))\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\"......myMap.containsValue(\\\"Ajay\\\")......\")\', \'println(myMap.containsValue(\"Ajay\"))\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\".....myMap.get(1).......\")\', \'println(myMap.get(1))\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\"......myMap.getOrDefault(3, \\\"Vijay\\\")......\")\', \'println(myMap.getOrDefault(3, \"Vijay\"))\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\".......myMap.asIterable().....\")\', \'for(itr in myMap.asIterable()){\', \'println(\"key = ${itr.key} value = ${itr.value}\")\', \'}\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\"......myMap.iterator()......\")\', \'for(itr1 in myMap.iterator()){\', \'println(\"key = ${itr1.key} value = ${itr1.value}\")\', \'}\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\"......myMap.minus(4)......\")\', \'for(m in myMap.minus(4)){\', \'println(myMap[m.key])\', \'}\', \'fun main(args: Array<String>){\', \'val myMap: Map<Int,String> = mapOf<Int, String>(1 to \"Ajay\", 4 to \"Vijay\", 3 to \"Prakash\")\', \'for(key in myMap.keys){\', \'println(\"Element at key $key = ${myMap.get(key)}\")\', \'println(\"......myMap.plus(Pair(5, \\\"Rohan\\\"))......\")\', \'for(p in myMap.plus(Pair(5, \"Rohan\"))){\', \'println(\"Element at key ${p.key} = ${p.value}\")\', \'}\']','[\'Ajay\', \'Vijay\', \'Prakash\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'Element at key ram = Ram\', \'Element at key two = 2\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'.....myMap.getValue(4).......\', \'Vijay\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'.....myMap.contains(3).......\', \'true\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'......myMap.containsKey(2)......\', \'false\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'......myMap.containsValue(\"Ajay\")......\', \'true\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'.....myMap.get(1).......\', \'Ajay\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'......myMap.getOrDefault(3, \"Vijay\")......\', \'Prakash\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'.......myMap.asIterable().....\', \'key = 1 value = Ajay\', \'key = 4 value = Vijay\', \'key = 3 value = Prakash\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'......myMap.iterator()......\', \'key = 1 value = Ajay\', \'key = 4 value = Vijay\', \'key = 3 value = Prakash\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'......myMap.minus(4)......\', \'Ajay\', \'Prakash\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'......myMap.plus(Pair(5, \"Rohan\"))......\', \'Element at key 1 = Ajay\', \'Element at key 4 = Vijay\', \'Element at key 3 = Prakash\', \'Element at key 5 = Rohan\']','[\'Properties|||Description&&&abstract val entries: Set<Entry<K, V>>|||It returns only read all key and value pair of Set Interface in current map.&&&abstract val keys: Set<K>|||It returns only read all key of Set Interface in current map.&&&abstract val keys: Set<K>|||It returns the number of key and value pair in current map.&&&abstract val values: Collection<V>|||It returns only read Collection of all valued in current map. This collection may contain duplicate values.\', \'Functions|||Description&&&fun <K, V> Map<key, value>.getValue(key: K): V|||It returns a value of given key or throws an exception if no such key is available in the map.&&&operator fun <V, V1 : V> Map<in String,|||V>.getValue(|||thisRef: Any?,|||property: KProperty<*>|||): V1|||It returns the value of the property for the given object from current read- only map.&&&operator fun <K, V> Map<out K, V>.contains(key: K): Boolean|||It checks is the given key contains in map.&&&fun <K> Map<out K, *>.containsKey(key: K): Boolean|||If map contains the specified key it returns true.&&&fun <K, V> Map<K, V>.containsValue(value: V): Boolean|||If map maps one or more keys to specified value it returns true.&&&fun <K, V> Map<out K, V>.getOrDefault(|||key: K,|||defaultValue: V|||): V|||It returns the value which is given by key in mapped, or returns default value if map dose not contains mapping for the given key.&&&fun <K, V> Map<out K, V>.asIterable(): Iterable<Entry<K, V>>|||It creates an instance of Iterable interface which wraps the original map returning its entries when being iterated.&&&fun <K, V> Map<out K, V>.asIterable(): Iterable<Entry<K, V>>|||It creates an instance of Iterable interface which wraps the original map returning its entries when being iterated.&&&fun <K, V> Map<out K, V>.asSequence(): Sequence<Entry<K, V>>|||It creates a Sequence interface instance which wraps the current map and returning its entries when it has iterated.&&&operator fun <K, V> Map<out K, V>.iterator(): Iterator<Entry<K, V>>|||It returns an Iterator over the entries in the Map.&&&operator fun  Map.minus(key: K): Map|||It returns a map which contains all the entries of original map except the entry of mention key.&&&operator fun <K, V> Map<out K, V>.minus(|||keys: Iterable<K>|||): Map<K, V>|||It returns a map which contains all the entries of original map except those entries key which are contained in the mention key collection.&&&operator fun <K, V> Map<out K, V>.minus(|||keys: Sequence<K>|||): Map<K, V>|||It returns a map which contains all the entries of original map except those entries key which are contained in the given key sequence.&&&operator fun <K, V> Map<out K, V>.plus(|||pair: Pair<K, V>|||): Map<K, V>|||It creates a new read only map by adding or replacing an entry to current map from a given key-value pair.&&&operator fun <K, V> Map<out K, V>.plus(|||pairs: Iterable<Pair<K, V>>|||): Map<K, V>|||It creates a new read only map by adding or replacing entries to current map from a given collection of key-value pairs.&&&operator fun <K, V> Map<out K, V>.plus(|||pairs: Sequence<Pair<K, V>>|||): Map<K, V>|||It creates a new read only map by adding or replacing entries to current map from a given sequence of key-value pairs.\']','[]'),(44,'[\'Kotlin HashMap class\']','[\'Kotlin HashMap is class of collection based on MutableMap interface. Kotlin HashMap class implements the MutableMap interface using Hash table. It store the data in the form of key and value pair. It is represented as HashMap<key, value> or HashMap<K, V>.\']','[\'https://www.javatpoint.com/kotlin-hashmap-hashmapof\', \'https://www.javatpoint.com/kotlin-map\', \'https://www.javatpoint.com/kotlin-hashmap-hashmapof\', \'https://www.javatpoint.com/kotlin-map\', \'https://www.javatpoint.com/kotlin-hashmap-hashmapof\']','[]','[]','[]','[\'Constructor of Kotlin HashMap class\', \'Functions of Kotlin HashMap class\', \'Kotlin HashMap Example 1- empty HashMap\', \'Kotlin HashMap Example 2- HashMap initial capacity\', \'Kotlin HashMap Example 3- remove() and put()\', \'Kotlin HashMap Example 4 - containsKey(key) and containsValue(value)\', \'Kotlin HashMap Example 5 - clear()\']','[]','[\'The implementation of HashMap class does not make guarantees about the order of data of key, value and entries of collections.\', \'HashMap can also be initialize with its initial capacity. The capacity can be changed by adding and replacing its element.\', \'The Function containsKey() returns true if the specified key is present in HashMap or returns false if no such key exist.\', \'The clear() function is used to clear all the data from the HashMap.\']','[\"Let\'s create a simple example of HashMap class define with empty HashMap of <Int, String> and add elements later. To print the value of HashMap we will either use HashMap[key] or HashMap.get(key).\", \'The Function containsValue() is used to check whether the specified value is exist in HashMap or not. If value exists in HashMap, it will returns true else returns false. \']','[\'The function remove() is used to replace the existing value at specified key with specified value. The put() function add a new value at specified key and replace the old value. If put() function does not found any specified key, it put a new value at specified key.\']','[\'fun main(args: Array<String>){\', \'val hashMap:HashMap<Int,String> = HashMap<Int,String>() //define empty hashmap\', \'hashMap.put(1,\"Ajay\")\', \'hashMap.put(3,\"Vijay\")\', \'hashMap.put(4,\"Praveen\")\', \'hashMap.put(2,\"Ajay\")\', \'println(\".....traversing hashmap.......\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap[key]}\")\', \'fun main(args: Array<String>){\', \'val hashMap:HashMap<String,String> = HashMap<String,String>(3)\', \'hashMap.put(\"name\",\"Ajay\")\', \'hashMap.put(\"city\",\"Delhi\")\', \'hashMap.put(\"department\",\"Software Development\")\', \'println(\".....traversing hashmap.......\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap[key]}\")\', \'println(\".....hashMap.size.......\")\', \'println(hashMap.size)\', \'hashMap.put(\"hobby\",\"Travelling\")\', \'println(\".....hashMap.size  after adding hobby.......\")\', \'println(hashMap.size)\', \'println(\".....traversing hashmap.......\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap.get(key)}\")\', \'fun main(args: Array<String>){\', \'val hashMap:HashMap<Int,String> = HashMap<Int,String>()\', \'hashMap.put(1,\"Ajay\")\', \'hashMap.put(3,\"Vijay\")\', \'hashMap.put(4,\"Prakash\")\', \'hashMap.put(2,\"Rohan\")\', \'println(\".....traversing hashmap.......\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap[key]}\")\', \'hashMap.replace(3,\"Ashu\")\', \'hashMap.put(2,\"Raj\")\', \'println(\".....hashMap.replace(3,\\\"Ashu\\\")... hashMap.replace(2,\\\"Raj\\\").......\")....\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap[key]}\")\', \'fun main(args: Array<String>){\', \'val hashMap:HashMap<Int,String> = HashMap<Int,String>()\', \'hashMap.put(1,\"Ajay\")\', \'hashMap.put(3,\"Vijay\")\', \'hashMap.put(4,\"Prakash\")\', \'hashMap.put(2,\"Rohan\")\', \'println(\".....traversing hashmap.......\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap[key]}\")\', \'println(\".....hashMap.containsKey(3).......\")\', \'println(hashMap.containsKey(3))\', \'println(\".....hashMap.containsValue(\\\"Rohan\\\").......\")\', \'println(hashMap.containsValue(\"Rohan\"))\', \'fun main(args: Array<String>){\', \'val hashMap:HashMap<Int,String> = HashMap<Int,String>()\', \'hashMap.put(1,\"Ajay\")\', \'hashMap.put(3,\"Vijay\")\', \'hashMap.put(4,\"Prakash\")\', \'hashMap.put(2,\"Rohan\")\', \'println(\".....traversing hashmap.......\")\', \'for(key in hashMap.keys){\', \'println(\"Element at key $key = ${hashMap[key]}\")\', \'println(\".....hashMap.clear().......\")\', \'hashMap.clear()\', \'println(\".....print hashMap after clear().......\")\', \'println(hashMap)\']','[\'.....traversing hashmap.......\', \'Element at key 1 = Ajay\', \'Element at key 2 = Ajay\', \'Element at key 3 = Vijay\', \'Element at key 4 = Praveen\', \'.....traversing hashmap.......\', \'Element at key name = Ajay\', \'Element at key department = Software Development\', \'Element at key city = Delhi\', \'.....hashMap.size.......\', \'3\', \'.....hashMap.size  after adding hobby.......\', \'4\', \'.....traversing hashmap.......\', \'Element at key name = Ajay\', \'Element at key department = Software Development\', \'Element at key city = Delhi\', \'Element at key hobby = Travelling\', \'.....traversing hashmap.......\', \'Element at key 1 = Ajay\', \'Element at key 2 = Rohan\', \'Element at key 3 = Vijay\', \'Element at key 4 = Prakash\', \'.....hashMap.replace(3,\"Ashu\")...hashMap.put(2,\"Raj\")....\', \'Element at key 1 = Ajay\', \'Element at key 2 = Raj\', \'Element at key 3 = Ashu\', \'Element at key 4 = Prakash\', \'.....traversing hashmap.......\', \'Element at key 1 = Ajay\', \'Element at key 2 = Rohan\', \'Element at key 3 = Vijay\', \'Element at key 4 = Prakash\', \'.....hashMap.containsKey(3).......\', \'true\', \'.....hashMap.containsValue(\"Rohan\").......\', \'true\', \'.....traversing hashmap.......\', \'Element at key 1 = Ajay\', \'Element at key 2 = Rohan\', \'Element at key 3 = Vijay\', \'Element at key 4 = Prakash\', \'.....hashMap.clear().......\', \'.....print hashMap after clear().......\', \'{}\']','[\'Constructor|||Description&&&HashMap()|||It constructs an empty HashMap instance&&&HashMap(initialCapacity: Int, loadFactor: Float = 0f)|||It is used to constructs a HashMap of specified capacity.&&&HashMap(original: Map<out K, V>)|||It constructs a HashMap instance filled with contents of specified original map.\', \'Functions|||Description&&&open fun put(key: K, value: V): V?|||It puts the specified key and value in the map&&&open operator fun get(key: K): V?|||It returns the value of specified key, or null if no such specified key is available in map.&&&open fun containsKey(key: K): Boolean|||It returns true if map contains specifies key.&&&open fun containsValue(value: V): Boolean|||It returns true if map maps one of more keys to specified value.&&&open fun clear()|||It removes all elements from map.&&&open fun remove(key: K): V?|||It removes the specified key and its corresponding value from map\']','[]'),(45,'[\'Kotlin HashMap: hashMapOf()\']','[\'A hashMapOf() is a function of HashMap class. It returns a new HashMap with the specified contents. It contains pairs of data in the form of key and value. HashMap is mutable collection which provides both read am write functionalities.\']','[\'https://www.javatpoint.com/kotlin-mutablemap\', \'https://www.javatpoint.com/kotlin-hashmap\', \'https://www.javatpoint.com/kotlin-mutablemap\', \'https://www.javatpoint.com/kotlin-hashmap\', \'https://www.javatpoint.com/kotlin-mutablemap\']','[]','[]','[\'Syntax of hashMapOf() function\']','[\'Functions of Kotlin HashMap class\', \'Kotlin hashMapOf() Example 1\', \'Kotlin hashMapOf() Example 2 - containsKey()\', \'Kotlin hashMapOf() Example 3 - containsValue()\', \'Kotlin hashMapOf() Example 4 - contains()\', \'Kotlin hashMapOf() Example 5 - replace(key, value)\', \'Kotlin hashMapOf() Example 6 - replace(key, oldValue, newValue)\', \'Kotlin hashMapOf() Example 7 - hashMapOf().size, hashMapOf().key\', \'Kotlin hashMapOf() Example 8 - getValue(key), getOrDefault(key, defaultValue) \', \'Kotlin hashMapOf() Example 9 - remove(key) \', \'Kotlin hashMapOf() Example 10 - remove(key, value) \', \'Kotlin hashMapOf() Example 11 - set(key, value) \', \'Kotlin hashMapOf() Example 12 - clear() \']','[]','[\'The containsKey() function returns true if it contains the mention key in the HashMap, otherwise it returns false.\', \'The containsValue() function returns true if it contains the mention value in the HashMap, otherwise it returns false.\', \'The contains() function returns true if it contains the mention key in the HashMap, otherwise it returns false.\', \'The size property of hashMapOf() function returns total size of HashMap and the key property returns all keys of HashMap.\', \'The remove(key) function is used to remove the specified key along with its corresponding value. The remove(key) function returns the removed value.\', \'The clear() function is used to clear (or remove) all the key, value pair from the HashMap.\']','[\'The hashMapOf() function of HashMap can be declared as different generic types such as hashMapOf<Int, String>(), hashMapOf<String, String>(), hashMapOf<Any, Any>() etc.\', \'The replace(key, value) function is used to replace the existing value at specified key with new specified value. The replace(key, value) function returns the replaced value.\', \'The replace(key, oldValue, newValue) function is used to replace the existing old value at specified key with new specified value. The replace(key, newValue, oldValue) function returns true if it replace old value with new else it returns false.\', \'The getValue() function returns value of specified key of the HashMap. Whereas getOrDefault() function returns corresponding value of specified key if it exist in the HashMap or it returns mentioned default value if no such key exists in HashMap.\', \'The remove(key, value) function is used to remove the specified key along with its corresponding value. The remove(key, value) function returns true if it remove the specified key along with its value else it returns false.\', \'The set(key, value) function is used to set the given value at specified key if it exist. If the key does not exist in the HashMap it will add new key and set the given value corresponding to it. \']','[]','[\'inline fun <K, V> hashMapOf(): HashMap<K, V> (source)\', \'fun <K, V> hashMapOf(vararg pairs: Pair<K, V>): HashMap<K, V> (source)\', \'fun main(args: Array<String>){\', \'val intMap: HashMap<Int, String> = hashMapOf<Int,String>(1 to \"Ashu\",4 to \"Rohan\", 2 to \"Ajeet\", 3 to \"Vijay\")\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>(\"name\" to \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'val anyMap: HashMap<Any, Any> = hashMapOf<Any, Any>(1 to \"Ashu\", \"name\" to \"Rohsan\", 2 to 200)\', \'println(\".....traverse intMap........\")\', \'for(key in intMap.keys){\', \'println(intMap[key])\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(stringMap[key])\', \'println(\"......traverse anyMap.......\")\', \'for(key in anyMap.keys){\', \'println(anyMap[key])\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\"......stringMap.containsKey(\\\"name\\\").......\")\', \'println(stringMap.containsKey(\"name\"))\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\".......stringMap.containsValue(\\\"Delhi\\\")......\")\', \'println(stringMap.containsValue(\"Delhi\"))\', \'println(stringMap.containsValue(\"Mumbai\"))\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\"......stringMap.contains(\\\"city\\\").......\")\', \'println(stringMap.contains(\"city\"))\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\"......stringMap.replace(\\\"city\\\",\\\"Mumbai\\\").......\")\', \'println(stringMap.replace(\"city\",\"Mumbai\"))\', \'println(\"......traverse stringMap after stringMap.replace(\\\"city\\\",\\\"Mumbai\\\").......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\".......stringMap.replace(\\\"department\\\", \\\"Development\\\",\\\"Management\\\")......\")\', \'println(stringMap.replace(\"department\", \"Development\",\"Management\"))\', \'println(\"......traverse stringMap after stringMap.replace(\\\"department\\\", \\\"Development\\\",\\\"Management\\\").......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\".....stringMap.size........\")\', \'println(stringMap.size)\', \'println(\".......stringMap.keys......\")\', \'println(stringMap.keys)\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\".......stringMap.getValue(\\\"department\\\")......\")\', \'println(stringMap.getValue(\"department\"))\', \'println(\".......stringMap.getOrDefault(\\\"name\\\", \\\"Default Value\\\")......\")\', \'println(stringMap.getOrDefault(\"name\", \"Default Value\"))\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\"......stringMap.remove(\\\"city\\\").......\")\', \'println(stringMap.remove(\"city\"))\', \'println(\"......traverse stringMap after stringMap.remove(\\\"city\\\").......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\".......stringMap.remove(\\\"hobby\\\",\\\"Playing\\\")......\")\', \'println(stringMap.remove(\"hobby\",\"Playing\"))\', \'println(\"......traverse stringMap after stringMap.remove(\\\"hobby\\\",\\\"Playing\\\").......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'stringMap.set(\"name\",\"Ashutosh\")\', \'stringMap.set(\"skill\",\"Kotlin\")\', \'println(\"......traverse stringMap after stringMap.set(\\\"name\\\",\\\"Ashutosh\\\") and   stringMap.set(\\\"skill\\\",\\\"Kotlin\\\").......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'fun main(args: Array<String>){\', \'val stringMap: HashMap<String,String> = hashMapOf<String,String>()\', \'stringMap.put(\"name\", \"Ashu\")\', \'stringMap.put(\"city\", \"Delhi\")\', \'stringMap.put(\"department\", \"Development\")\', \'stringMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse stringMap.......\")\', \'for(key in stringMap.keys){\', \'println(\"Key = ${key} , value = ${stringMap[key]}\")\', \'println(\"......stringMap.clear().......\")\', \'println(stringMap.clear())\', \'println(stringMap)\']','[\'.....traverse intMap........\', \'Ashu\', \'Ajeet\', \'Vijay\', \'Rohan\', \'......traverse stringMap.......\', \'Ashu\', \'Development\', \'Delhi\', \'Playing\', \'......traverse anyMap.......\', \'Rohsan\', \'Ashu\', \'200\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......stringMap.containsKey(\"name\").......\', \'true\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'.......stringMap.containsValue(\"Delhi\")......\', \'true\', \'false\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......stringMap.contains(\"city\").......\', \'true\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......stringMap.replace(\"city\",\"Mumbai\").......\', \'Delhi\', \'......traverse stringMap after stringMap.replace(\"city\",\"Mumbai\").......\', \'Key = city , value = Mumbai\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'.......stringMap.replace(\"department\", \"Development\",\"Management\")......\', \'true\', \'......traverse stringMap after stringMap.replace(\"department\", \"Development\",\"Management\").......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Management\', \'Key = hobby , value = Playing\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'.....stringMap.size........\', \'4\', \'.......stringMap.keys......\', \'[city, name, department, hobby]\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'.......stringMap.getValue(\"department\")......\', \'Development\', \'.......stringMap.getOrDefault(\"name\", \"Default Value\")......\', \'Ashu\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......stringMap.remove(\"city\").......\', \'Delhi\', \'......traverse stringMap after stringMap.remove(\"city\").......\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'.......stringMap.remove(\"hobby\",\"Playing\")......\', \'true\', \'......traverse stringMap after stringMap.remove(\"hobby\",\"Playing\").......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......stringMap.set(\"name\",\"Ashutosh\").......\', \'......traverse stringMap after stringMap.set(\"name\",\"Ashutosh\") and stringMap.set(\"skill\",\"Kotlin\").......\', \'Key = city , value = Delhi\', \'Key = skill , value = Kotlin\', \'Key = name , value = Ashutosh\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......traverse stringMap.......\', \'Key = city , value = Delhi\', \'Key = name , value = Ashu\', \'Key = department , value = Development\', \'Key = hobby , value = Playing\', \'......stringMap.clear().......\', \'kotlin.Unit\', \'{}\']','[\'Function|||Description&&&open fun put(key: K, value: V): V?|||It puts the specified key and value in the map&&&open operator fun get(key: K): V?|||It returns the value of specified key, or null if no such specified key is available in map.&&&open fun containsKey(key: K): Boolean|||It returns true if map contains specifies key.&&&open fun containsValue(value: V): Boolean|||It returns true if map maps one of more keys to specified value.&&&open fun clear()|||It removes all elements from map.&&&open fun remove(key: K): V?|||It removes the specified key and its corresponding value from map\']','[]'),(46,'[\'Kotlin MutableMap Interface\']','[\'Kotlin MutableMap is an interface of collection framework that holds the object in the form of key and value pair. The values of MutableMap interface are retrieved by using their corresponding keys. The key and value may be of different pairs such as <Int, Int>,<Int, String>, <Char, String> etc. Each key of MutableMap holds only one value.\']','[\'https://www.javatpoint.com/kotlin-set\', \'https://www.javatpoint.com/kotlin-hashmap-hashmapof\', \'https://www.javatpoint.com/kotlin-set\', \'https://www.javatpoint.com/kotlin-hashmap-hashmapof\', \'https://www.javatpoint.com/kotlin-set\']','[]','[]','[]','[\'Kotlin MutableMap Interface Declaration\', \'Properties of MutableMap\', \'Function of Kotlin MutableMap\', \'Kotlin MutableMap Example - 1 traversing MutableMap\', \'Kotlin MutableMap Example - 2 put() and putAll()\', \'Kotlin MutableMap Example - 3 containsKey()\', \'Kotlin MutableMap Example - 4 containsValue()\', \'Kotlin MutableMap Example - 5 contains()\', \'Kotlin MutableMap Example - 6 get(key)\', \'Kotlin MutableMap Example - 7 getValue(key)\', \'Kotlin MutableMap Example - 8 getOrDefault()\', \'Kotlin MutableMap Example - 9 count()\', \'Kotlin MutableMap Example - 10 remove(key) and remove(key, value)\', \'Kotlin MutableMap Example - 11 clear()\']','[]','[\'To use the MutableMap interface we need to use its function called mutableMapOf() or mutableMapOf <k,v>().\', \'The count() function is used to returns the total number of elements present in the MutableMap. For example:\', \'The clear() function is used to removes all the elements from the MutableMap. For example:\']','[\'The function put() and putAll() are used to add the elements in the MutableMap. put() function adds the single element at a time where as putAll() function adds the collection type elements in the MutableMap. For example:\', \'The containsKey() function is used to check the specified key is present in MutableMap or not. If it contains the specified key, it returns true otherwise it returns false. For example:\', \'The containsValue() function is used to check the specified value is present in MutableMap or not. This function returns true if the map maps one or more keys for the given value else it returns false. For example:\', \'The contains() function is used to check either specified key of value is present in the MutableMap or not. If the specified key or value is present in the MutableMap then it will returns true else it returns false. For example:\', \'The get(key) function is used to retrieve the corresponding value of specified key in the MutableMap. If no such key is present in the MutableMap it returns null. For example:\', \'The getValue() function used to returns corresponding value of specified key of the MutableMap or it throws an exception if no key found in map. For example:\', \'The getOrDefault() function returns corresponding value of specified key of MutableMap. If no such key exists in the MutableMap then it returns default mention value. For example:\']','[\"Let\'s create an example to create a MutableMap using mutablemapOf() function and traverse it. In this example we create three different types (MutableMap<Int, String>, MutableMap<String, String> and MutableMap<Any, Any>) of MutableMap with different ways.\", \'The remove(key) function is used to remove value corresponding to its mention key. Whereas remove(key,value) function removes element containing key and value. The remove(key, value) function returns true if it remove the specified key along with its value else it returns false. For example:\']','[\'interface MutableMap<K, V> : Map<K, V> (source)\', \'fun main(args: Array<String>) {\', \'val mutableMap1: MutableMap<Int, String> = mutableMapOf<Int, String>(1 to \"Ashu\", 4 to \"Rohan\", 2 to \"Ajeet\", 3 to \"Vijay\")\', \'val mutableMap2: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap2.put(\"name\", \"Ashu\")\', \'mutableMap2.put(\"city\", \"Delhi\")\', \'mutableMap2.put(\"department\", \"Development\")\', \'mutableMap2.put(\"hobby\", \"Playing\")\', \'val mutableMap3: MutableMap<Any, Any> = mutableMapOf<Any, Any>(1 to \"Ashu\", \"name\" to \"Rohsan\", 2 to 200)\', \'println(\".....traverse mutableMap1........\")\', \'for (key in mutableMap1.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap1[key]}\")\', \'println(\"......traverse mutableMap2.......\")\', \'for (key in mutableMap2.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap2[key])\', \'println(\"......traverse mutableMap3......\")\', \'for (key in mutableMap3.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap3[key]}\")\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'val hashMap: HashMap<String,String> = hashMapOf<String,String>()\', \'hashMap.put(\"department\", \"Development\")\', \'hashMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap[key])\', \'mutableMap.putAll(hashMap)\', \'println(\"......traverse mutableMap after mutableMap.putAll(hashMap).......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap[key])\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap[key])\', \'println(\"......mutableMap.containsKey(\\\"city\\\").......\")\', \'println(mutableMap.containsKey(\"city\"))\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap[key])\', \'println(\".......mutableMap.containsValue(\\\"Delhi\\\")......\")\', \'println(mutableMap.containsValue(\"Delhi\"))\', \'println(\".......mutableMap.containsValue(\\\"Mumbai\\\")......\")\', \'println(mutableMap.containsValue(\"Mumbai\"))\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap[key])\', \'println(\"......mutableMap.contains(\\\"city\\\").......\")\', \'println(mutableMap.contains(\"city\"))\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = \"+key +\", \"+\"Value = \"+mutableMap[key])\', \'println(\".......mutableMap.get(\\\"department\\\")......\")\', \'println(mutableMap.get(\"department\"))\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap[key]}\")\', \'println(\".......mutableMap.getValue(\\\"department\\\")......\")\', \'println(mutableMap.getValue(\"department\"))\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap[key]}\")\', \'println(\".......mutableMap.getOrDefault(\\\"name\\\", \\\"Default Value\\\")......\")\', \'println(mutableMap.getOrDefault(\"name\", \"default value\"))\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap[key]}\")\', \'println(\".....mutableMap.count()........\")\', \'println(mutableMap.count())\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap[key]}\")\', \'println(\"......mutableMap.remove(\\\"city\\\").......\")\', \'println(mutableMap.remove(\"city\"))\', \'println(\".......mutableMap.remove(\\\"hobby\\\",\\\"Playing\\\")......\")\', \'println(mutableMap.remove(\"hobby\",\"Playing\"))\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap[key]}\")\', \'fun main(args: Array<String>) {\', \'val mutableMap: MutableMap<String, String> = mutableMapOf<String, String>()\', \'mutableMap.put(\"name\", \"Ashu\")\', \'mutableMap.put(\"city\", \"Delhi\")\', \'mutableMap.put(\"department\", \"Development\")\', \'mutableMap.put(\"hobby\", \"Playing\")\', \'println(\"......traverse mutableMap.......\")\', \'for (key in mutableMap.keys) {\', \'println(\"Key = ${key}, Value = ${mutableMap[key]}\")\', \'println(\"......mutableMap.clear().......\")\', \'println(mutableMap.clear())\', \'println(mutableMap)\']','[\'.....traverse mutableMap1........\', \'Key = 1, Value = Ashu\', \'Key = 4, Value = Rohan\', \'Key = 2, Value = Ajeet\', \'Key = 3, Value = Vijay\', \'......traverse mutableMap2.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'......traverse mutableMap3......\', \'Key = 1, Value = Ashu\', \'Key = name, Value = Rohsan\', \'Key = 2, Value = 200\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'......traverse mutableMap after mutableMap.putAll(hashMap).......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'......mutableMap.containsKey(\"city\").......\', \'true\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'.......mutableMap.containsValue(\"Delhi\")......\', \'true\', \'.......mutableMap.containsValue(\"Mumbai\")......\', \'false\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'......mutableMap.contains(\"city\").......\', \'true\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'.......mutableMap.get(\"department\")......\', \'Development\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'.......mutableMap.getValue(\"department\")......\', \'Development\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'.......mutableMap.getOrDefault(\"name\", \"Default Value\")......\', \'Ashu\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'.....mutableMap.count()........\', \'4\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'......mutableMap.remove(\"city\").......\', \'Delhi\', \'.......mutableMap.remove(\"hobby\",\"Playing\")......\', \'true\', \'......traverse mutableMap after remove.......\', \'Key = name, Value = Ashu\', \'Key = department, Value = Development\', \'......traverse mutableMap.......\', \'Key = name, Value = Ashu\', \'Key = city, Value = Delhi\', \'Key = department, Value = Development\', \'Key = hobby, Value = Playing\', \'......mutableMap.clear().......\', \'kotlin.Unit\', \'{}\']','[\'Properties|||Description&&&abstract val entries: MutableSet<MutableEntry<K, V>>|||This returns a MutableSet of all its key and value pairs in the map.&&&abstract val keys: MutableSet<K>|||This returns all the keys of MutableSet in this map. &&&abstract val values: MutableCollection<V>|||This returns all the values of MutableCollection in the current map. This collection may contain duplicate values. \', \'Function|||Description&&&abstract fun put(key: K, value: V): V?|||It adds the given value with the specified key in the map.&&&abstract fun putAll(from: Map<out K, V>)|||This updates the current map with key/value pairs from the mentioned map.&&&abstract fun remove(key: K): V?|||It removes the specified key with its corresponding value from the map.&&&open fun remove(key: K, value: V): Boolean|||It removes the key and value entities from the map only if it exist in the map.&&&abstract fun clear()|||This function is used to removes all the elements from the map.&&&operator fun <K, V> Map<out K, V>.contains(key: K): Boolean|||It checks the given key in the map.&&&abstract fun containsKey(key: K): Boolean|||It returns the true if map contains the specified key.&&&fun <K> Map<out K, *>.containsKey(key: K): Boolean|||It returns the true if map contains the specified key.&&&abstract fun containsValue(value: V): Boolean|||It returns true if the map maps one or more keys for the given value.&&&fun <K, V> Map<K, V>.containsValue(value: V): Boolean|||It returns true if the map maps one or more keys for the given value.&&&fun <K, V> Map<out K, V>.count(): Int|||It returns the total number of entities of the map&&&operator fun <K, V> Map<out K, V>.get(key: K): V?|||It returns the value corresponding to mention key, or null if no such key found in the map.&&&fun <K, V> Map<out K, V>.getOrDefault(|||key: K, |||defaultValue: V|||): V|||It returns the value with corresponding mention key, or it returns default value if no such mapping for the key in the map.&&&fun <K, V> Map<K, V>.getOrElse(|||key: K, |||defaultValue: () -> V|||): V|||It returns the value for the mention key in the map, or it returns the default value function if no such entry found for the given key.&&&fun <K, V> Map<K, V>.getValue(key: K): V|||It returns the value corresponding to given key, or it throws an exception if no key found in the map. \']','[]'),(47,'[\'Kotlin Set Interface\']','[\'Kotlin Set interface is a generic unordered collection of elements. Set interface does not support duplicate elements. This interface is immutable in nature its methods supports read-only functionality of the set.\']','[\'https://www.javatpoint.com/kotlin-mutableset\', \'https://www.javatpoint.com/kotlin-mutablemap\', \'https://www.javatpoint.com/kotlin-mutableset\', \'https://www.javatpoint.com/kotlin-mutablemap\', \'https://www.javatpoint.com/kotlin-mutableset\']','[]','[]','[]','[\'Set Interface declaration\', \'Properties of Set Interface\', \'Functions of Set Interface\', \'Kotlin Set Interface Example 1\', \'Kotlin Set Interface Example 2 - contains() and containsAll()\', \'Kotlin Set Interface Example 3 - isEmpty() and isNotEmpty()\', \'Kotlin Set Interface Example 4 - drop()\', \'Kotlin Set Interface Example 5 - elementAt() and elementAtOrNull()\']','[]','[\'Set interface uses setOf() function to create the list of object of set interface which contains list of elements.\', \'Kotlin Set interface has several functions. Some of its functions are mention below.\', \'The drop() function returns all the element except the first n elements of collection.\']','[\'Let create an example of declaring and traversing set element using setOf() function. In this example we create a set of Int type non generic and another generic set of Any type. \', \'In the above example we declare element 4 twice in both intSet and mySet but while traversing them they print the element 4 only once. This is because the set interface does not support duplicate elements.\', \'The elementAt() function return element at given index and elementAtOrNull() function also return the element at given index , but if specified index does not contain element it returns null.\']','[\'The contains() function checks the given element is present in current set or not. If it is contains in the set, the set returns true else returns false. Whereas containsAll() function checks all the elements of collection type are present in the current set or not. If the set contains all elements of collection type it returns true else false. \', \'The isEmpty() function checks the current set is empty. If the set is empty the isEmpty() function returns true otherwise it returns false. And isNotEmpty() checks the current set is not empty. If the set is not empty the isNotEmpty() function returns true else return false.\']','[\'interface Set<out E> : Collection<E> (source)\', \'fun main(args: Array<String>){\', \'val intSet = setOf(2,6,4,29,4,5)\', \'val mySet: Set<Any> = setOf(2,6,4,29,4,5,\"Ashu\",\"Ajay\")\', \'println(\".......print Int set.........\")\', \'for(element in intSet){\', \'println(element)\', \'println(\".......print Any set.........\")\', \'for(element in mySet){\', \'println(element)\', \'fun main(args: Array<String>){\', \'val mySet: Set<Any> = setOf(2,6,4,29,5,\"Ashu\",\"Ajay\")\', \'val intSet = setOf(6,4,29)\', \'println(\".......print Any set.........\")\', \'for(element in mySet){\', \'println(element)\', \'println(\"...mySet.contains\\\"Ashu\\\"...\")\', \'println(mySet.contains(\"Ashu\"))\', \'println(\"...mySet.contains(20)...\")\', \'println(mySet.contains(20))\', \'println(\"...mySet.containsAll(intSet)...\")\', \'println(mySet.containsAll(intSet))\', \'fun main(args: Array<String>){\', \'val mySet: Set<Any> = setOf(2,6,4,29,5,\"Ashu\",\"Ajay\")\', \'println(\".......print Any set.........\")\', \'for(element in mySet){\', \'println(element)\', \'println(\"...mySet.isEmpty()...\")\', \'println(mySet.isEmpty())\', \'println(\"...mySet.isNotEmpty()...\")\', \'println(mySet.isNotEmpty())\', \'fun main(args: Array<String>){\', \'val mySet: Set<Any> = setOf(2,6,4,29,4,5,\"Ajay\",\"Ashu\",\"Ajay\")\', \'println(\".......print Any set.........\")\', \'for(element in mySet){\', \'println(element)\', \'val remainList= mySet.drop(4)\', \'println(\".......print Set after mySet.drop(4).........\")\', \'for(element in remainList){\', \'println(element)\', \'fun main(args: Array<String>){\', \'val mySet: Set<Any> = setOf(2,6,4,29,4,5,\"Ajay\",\"Ashu\",\"Ajay\")\', \'println(\".......print Any set.........\")\', \'for(element in mySet){\', \'println(element)\', \'println(\".......print mySet.elementAt(3).........\")\', \'println(mySet.elementAt(3))\', \'println(\".......print mySet.elementAtOrNull(5).........\")\', \'println(mySet.elementAtOrNull(5))\']','[\'.......print Int set.........\', \'2\', \'6\', \'4\', \'29\', \'5\', \'.......print Any set.........\', \'2\', \'6\', \'4\', \'29\', \'5\', \'Ashu\', \'Ajay\', \'.......print Any set.........\', \'2\', \'6\', \'4\', \'29\', \'5\', \'Ashu\', \'Ajay\', \'...mySet.contains\"Ashu\"...\', \'true\', \'...mySet.contains(20)...\', \'false\', \'...mySet.containsAll(intSet)...\', \'true\', \'.......print Any set.........\', \'2\', \'6\', \'4\', \'29\', \'5\', \'Ashu\', \'Ajay\', \'...mySet.isEmpty()...\', \'false\', \'...mySet.isNotEmpty()...\', \'true\', \'.......print Any set.........\', \'2\', \'6\', \'4\', \'29\', \'5\', \'Ajay\', \'Ashu\', \'.......print Set after mySet.drop(4).........\', \'5\', \'Ajay\', \'Ashu\', \'.......print Any set.........\', \'2\', \'6\', \'4\', \'29\', \'5\', \'Ajay\', \'Ashu\', \'.......print mySet.elementAt(3).........\', \'29\', \'.......print mySet.elementAtOrNull(5).........\', \'Ajay\']','[\'Properties|||Description&&&abstract val size: Int|||It returns the size of collection.\', \'Functions|||Description&&&abstract fun contains(element: E): Boolean|||It checks the mention element is present in this collection. If it contains element, it returns true else returns false.&&&abstract fun containsAll(elements: Collection<E>): Boolean|||It checks all the mention elements of specified collection are present in this collection. If it contains element, it returns true else returns false.&&&abstract fun isEmpty(): Boolean|||It returns true if the collection is empty (contains no elements) otherwise it returns false.&&&abstract fun iterator(): Iterator<E>|||It returns an iterator over the elements of set object. &&&fun <T> Iterable<T>.all(predicate: (T) -> Boolean): Boolean|||It returns true if all the elements matches with given predicate.&&&fun <T> Iterable<T>.any(): Boolean|||It returns true if the collection contains at least one element.&&&fun <T> Iterable<T>.count(predicate: (T) -> Boolean): Int|||It returns the total number of elements matching with given predicate.&&&fun <T> Iterable<T>.distinct(): List<T>|||It returns a list which contains only distinct elements from the given collection.&&&fun <T> Iterable<T>.drop(n: Int): List<T>|||It returns a list which contains all elements except first n elements.&&&fun <T> Iterable<T>.elementAtOrElse(|||index: Int, |||defaultValue: (Int) -> T|||): T|||It returns an element at given index or result of calling the defaultValue function if the index is out bounds in current collection.&&&fun <T> Iterable<T>.filter(|||predicate: (T) -> Boolean|||): List<T>|||It returns a list which contains only those elements matches with given predicate.&&&fun <T> Iterable<T>.filterIndexed(|||predicate: (index: Int, T) -> Boolean|||): List<T>|||It returns a list which contains only those elements matches with given predicate.&&&fun <T> Iterable<T>.filterNot(|||predicate: (T) -> Boolean|||): List<T>|||It returns a list which contains only those elements which does not matches with given predicate.&&&fun <T> Iterable<T>.find(predicate: (T) -> Boolean): T?|||It returns the first element which matches with given predicate, or null if no such element was found.&&&fun <T> Iterable<T>.findLast(predicate: (T) -> Boolean): T?|||It returns the last element which matches with given predicate, or null if no such element was found.&&&fun <T> Iterable<T>.first(): T|||It returns the first element.&&&fun <T> Iterable<T>.first(predicate: (T) -> Boolean): T|||It returns the first element which matches the given predicate.&&&fun <T> Iterable<T>.firstOrnull(): T?|||It returns the first element or null if collection is empty.&&&fun <T> Iterable<T>.indexOf(element: T): Int|||It returns the first index of given element, or -1 if element does not contains in collection.&&&fun <T> Iterable<T>.indexOfFirst(|||predicate: (T) -> Boolean|||): Int|||It returns the index of first element which matches the given predicate, or -1 if the element does not contains in collection.&&&fun <T> Iterable<T>.indexOfLast(|||predicate: (T) -> Boolean|||): Int|||It returns the index of last element which matches the given predicate, or -1 if the element does not contains in collection.&&&infix fun <T> Iterable<T>.intersect(|||other: Iterable<T>|||): Set<T>|||It returns a set which contains all elements present in both this set and given collection.&&&fun <T> Collection<T>.isNotEmpty(): Boolean|||It returns true if is not empty.&&&fun <T> Iterable<T>.last(): T|||It returns the last element.&&&fun <T> Iterable<T>.last(predicate: (T) -> Boolean): T|||It returns the last element which matches with given predicate.&&&fun <T> Iterable<T>.lastIndexOf(element: T): Int|||It returns the last index of given element, or -1 if element does not exist in collection.&&&fun <T> Iterable<T>.lastOrnull(): T?|||It returns the last element of collection, or null if collection is empty.&&&fun <T> Iterable<T>.lastOrnull(predicate: (T) -> Boolean): T?|||It returns the last element after matching the given predicate, or returns null if no such element found in collection.&&&fun <T : Comparable<T>> Iterable<T>.max(): T?|||It returns the largest element or null if no elements in collection.&&&fun <T, R : Comparable<R>> Iterable<T>.maxBy(|||selector: (T) -> R|||): T?|||It returns the first element yielding the largest value of the given function, or it returns null if there are no elements in collection.&&&fun <T : Comparable<T>> Iterable<T>.min(): T?|||It returns the smallest element or null if there is no element in the collection.&&&fun <T, R : Comparable<R>> Iterable<T>.minBy(|||selector: (T) -> R|||): T?|||It returns the first element which gives the smallest value of the given function or null if there are no elements.&&&operator fun <T> Set<T>.minus(element: T): Set<T>|||It returns a set which contains all the elements of original set except those given element.&&&operator fun <T> Set<T>.minus(elements: Iterable<T>): Set<T>|||It returns a set which contains all the elements of original set except those given elements collection.&&&operator fun <T> Iterable<T>.minus(element: T): List<T>|||It returns a list which contains all the elements of original collection except those contained in the given elements array.&&&fun <T> Set<T>.minusElement(element: T): Set<T>|||It returns a set which contains all the elements of original set except those given element.&&&fun <T> Iterable<T>.minusElement(element: T): List<T>|||It returns a list which contains all the elements of original collection except the first occurrence of the given element.&&&operator fun <T> Set<T>.plus(element: T): Set<T>|||It returns a set of all elements of original set as well as the given element if it is not already present in the set.&&&operator fun <T> Set<T>.plus(elements: Iterable<T>): Set<T>|||It returns a set which contains all the elements of original set as well as the given elements collection which are not already present in the set. The returned set preserves the iteration of element in the same order of the original set.&&&operator fun <T> Iterable<T>.plus(element: T): List<T>|||It returns a list which contains all the elements of the original collection as well as the given element.&&&fun <T> Set<T>.plusElement(element: T): Set<T>|||It returns a set which contains all the elements of the original set as well as the given element.&&&fun <T> Iterable<T>.plusElement(element: T): List<T>|||It returns a list which contains all the elements of the original collection as well as the given element.&&&fun <T> Iterable<T>.reversed(): List<T>|||It returns a list with elements in the reverse order.&&&fun <T> Iterable<T>.single(): T|||It returns the single element, or it throws an exception if the collection has more than one elements or empty.&&&fun <T> Iterable<T>.singleOrnull(): T?|||It returns a single element, or null if the collection has more than one element or it is empty.\']','[]'),(48,'[\'Kotlin MutableSet Interface\']','[\'Kotlin MutableSet interface is a generic unordered collection of elements. MutableSet interface does not support duplicate elements. This interface is mutable so its methods support read-write functionality supports adding and removing elements.\']','[\'https://www.javatpoint.com/kotlin-hashset\', \'https://www.javatpoint.com/kotlin-set\', \'https://www.javatpoint.com/kotlin-hashset\', \'https://www.javatpoint.com/kotlin-set\', \'https://www.javatpoint.com/kotlin-hashset\']','[]','[]','[]','[\'MutableSet Interface declaration\', \'Inherited Properties of MutableSet Interface\', \'Functions of MutableSet Interface\', \'Kotlin MutableSet Interface Example 1\', \'Kotlin MutableSet Interface Example 2 - add() and addAll()\', \'Kotlin MutableSet Interface Example 3 - remove() and removeAll()\', \'Kotlin MutableSet Interface Example 4 - contains() and containsAll()\', \'Kotlin MutableSet Interface Example 5 - isEmpty() and any()\', \'Kotlin MutableSet Interface Example 6 - first(), indexOf() and drop()\']','[]','[\'Set interface uses mutableSetOf() function to create the list of object of set interface which contains list of elements.\', \'Kotlin MutableSet interface has several functions. Some of its functions are mention below.\', \"Let\'s create an example of MutableSet declaring and traversing its elements.\"]','[\'In the above example, elements \"4\" and \"Ajay\" are declared twice. But while traversing these MutableSet they are printed only once, this is because MutableSet interface does not support duplicate elements.\']','[]','[\'interface MutableSet<E> : Set<E>, MutableCollection<E> (source)\', \'fun main(args: Array<String>) {\', \'val intmutableSet = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)\', \'val anymutableSet: Set<Any> = setOf(2, 6, 4, 29, 4, 5, \"Ajay\", \"Ashu\", \"Ajay\")\', \'println(\"....intmutableSet....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'println(\"....anymutableSet......\")\', \'for(element in anymutableSet){\', \'println(element)\', \'fun main(args: Array<String>) {\', \'val intmutableSet = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)\', \'val mutableSet: MutableSet<Int> = mutableSetOf<Int>(6,8,11,22)\', \'println(\"....intmutableSet....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'intmutableSet.add(10)\', \'println(\"....intmutableSet.add(10)....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'intmutableSet.addAll(mutableSet)\', \'println(\"....intmutableSet.addAll(mutableSet)....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'fun main(args: Array<String>) {\', \'val intmutableSet = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)\', \'val mutableSet: MutableSet<Int> = mutableSetOf<Int>(6,8,11,22)\', \'println(\"....intmutableSet....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'intmutableSet.remove(29)\', \'println(\"....intmutableSet.remove(29)....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'intmutableSet.removeAll(mutableSet)\', \'println(\"....intmutableSet.removeAll(mutableSet)....\")\', \'for(element in intmutableSet){\', \'println(element)\', \'fun main(args: Array<String>) {\', \'val mutableSet1 = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)\', \'val mutableSet2: MutableSet<Int> = mutableSetOf<Int>(6,8,11,22)\', \'val mutableSet3: MutableSet<Int> = mutableSetOf<Int>(2,4,6)\', \'println(\"....mutableSet1....\")\', \'for(element in mutableSet1){\', \'println(element)\', \'println(\"....mutableSet2....\")\', \'println(mutableSet2)\', \'println(\"....mutableSet3....\")\', \'println(mutableSet3)\', \'println(\"....mutableSet1.contains(29)....\")\', \'println(mutableSet1.contains(29))\', \'println(\"....mutableSet1.containsAll(mutableSet2))....\")\', \'println(mutableSet1.containsAll(mutableSet2))\', \'println(\"....mutableSet1.containsAll(mutableSet3))....\")\', \'println(mutableSet1.containsAll(mutableSet3))\', \'fun main(args: Array<String>) {\', \'val mutableSet1 = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)\', \'println(\"....mutableSet1....\")\', \'for(element in mutableSet1){\', \'println(element)\', \'println(\"....mutableSet1.isEmpty()....\")\', \'if(mutableSet1.isEmpty())\', \'println(\"mutableSet1 is empty, not contain any element\")\', \'else\', \'println(\"mutableSet1 is not empty, contains element\")\', \'println(\"....mutableSet1.any()....\")\', \'if(mutableSet1.any())\', \'println(\"mutableSet1 contain at least one or more elements\")\', \'else\', \'println(\"mutableSet1 not contain any element\")\', \'fun main(args: Array<String>) {\', \'val mutableSet1 = mutableSetOf<Int>(2, 6, 4, 29, 4, 5)\', \'println(\"....mutableSet1....\")\', \'for(element in mutableSet1){\', \'println(element)\', \'println(\"....mutableSet1.first()....\")\', \'println(mutableSet1.first())\', \'println(\"...mutableSet1.indexOf(4)...\")\', \'println(mutableSet1.indexOf(4))\', \'println(\"...mutableSet1.drop(3)...\")\', \'println(mutableSet1.drop(3))\']','[\'....intmutableSet....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'....anymutableSet......\', \'2\', \'6\', \'4\', \'29\', \'5\', \'Ajay\', \'Ashu\', \'....intmutableSet....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'....intmutableSet.add(10)....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'10\', \'....intmutableSet.addAll(mutableSet)....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'10\', \'8\', \'11\', \'22\', \'....intmutableSet....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'....intmutableSet.remove(29)....\', \'2\', \'6\', \'4\', \'5\', \'....intmutableSet.removeAll(mutableSet)....\', \'2\', \'4\', \'5\', \'....mutableSet1....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'....mutableSet2....\', \'[6, 8, 11, 22]\', \'....mutableSet3....\', \'[2, 4, 6]\', \'....mutableSet1.contains(29)....\', \'true\', \'....mutableSet1.containsAll(mutableSet2))....\', \'false\', \'....mutableSet1.containsAll(mutableSet3))....\', \'true\', \'....mutableSet1....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'....mutableSet1.isEmpty()....\', \'mutableSet1 is not empty, contains element\', \'....mutableSet1.any()....\', \'mutableSet1 contain at least one or more elements\', \'....mutableSet1....\', \'2\', \'6\', \'4\', \'29\', \'5\', \'....mutableSet1.first()....\', \'2\', \'...mutableSet1.indexOf(4)...\', \'2\', \'...mutableSet1.drop(3)...\', \'[29, 5]\']','[\'Properties|||Description&&&abstract val size: Int|||It returns the size of collection.\', \'Functions|||Description&&&abstract fun add(element: E): Boolean|||It adds the given element to the collection.&&&abstract fun addAll(elements: Collection<E>): Boolean|||It adds all the elements given collection to the current collection.&&&abstract fun clear()|||It removes all the elements from this collection.&&&abstract fun iterator(): MutableIterator<E>|||It returns an iterator over the elements of this object.&&&abstract fun remove(element: E): Boolean|||It removes a single specified element from this collection, if it is present in collection.&&&abstract fun removeAll(elements: Collection<E>): Boolean|||It removes all the elements from current collection which are given in collection.&&&abstract fun retainAll(elements: Collection<E>): Boolean|||It retains only those elements in current collection which are present in specified collection.&&&abstract fun contains(element: E): Boolean|||It checks the specified element is contained in current collection.&&&abstract fun containsAll(elements: Collection<E>): Boolean|||It checks all the elements of specified collection are present in current collection.&&&abstract fun isEmpty(): Boolean|||If collection is empty (not containing any element) it returns true, otherwise it returns false.&&&fun <T> Iterable<T>.any(): Boolean|||It returns true if collection contains at least one element.&&&fun <T> Iterable<T>.any(predicate: (T) -> Boolean): Boolean|||It returns true if at least element matches the given the given predicate.&&&fun <T> Iterable<T>.distinct(): List<T>|||It returns a list which contains only distinct elements from the given collection.&&&fun <T> Iterable<T>.drop(n: Int): List<T>|||It returns a list which contains all elements except first n elements.&&&fun <T> Iterable<T>.elementAt(index: Int): T|||It returns an element at given index or throw an IndexOutOfBoundException if given index is not present in collection.&&&fun <T> Iterable<T>.elementAtOrElse(|||index: Int, |||defaultValue: (Int) -> T|||): T|||It returns an element at given index or result of calling the defaultValue function if the index is out bounds in current collection.&&&fun <T : Comparable<T>> Iterable<T>.max(): T?|||It returns the largest element or null if there is no element in the collection.&&&fun <T : Comparable<T>> Iterable<T>.min(): T?|||It returns the smallest element or null if there is no element in the collection.&&&fun <T> MutableCollection<out T>.remove(element: T): Boolean|||It removes the single specified element if it in present in current collection.&&&fun <T> MutableCollection<out T>.removeAll(|||elements: Collection<T>|||): Boolean|||It removes all the elements of current collection which are contained in specified collection.&&&fun <T> MutableCollection<out T>.retainAll(|||elements: Collection<T>|||): Boolean|||It retains all the elements in current collection which are contained in specified collection.&&&fun <T> Iterable<T>.reversed(): List<T>|||It returns the elements in reversed order.\']','[]'),(49,'[\'Kotlin HashSet class\']','[\'Kotlin HashSet is class of collection which extends AbstractMutableSet class and implements Set interface. The HashSet class store elements using hashing mechanism. It support both read and write functionality. It does not support duplicate value and does not make guarantees about the order sequence of element.\']','[\'https://www.javatpoint.com/kotlin-annotations\', \'https://www.javatpoint.com/kotlin-mutableset\', \'https://www.javatpoint.com/kotlin-annotations\', \'https://www.javatpoint.com/kotlin-mutableset\', \'https://www.javatpoint.com/kotlin-annotations\']','[]','[]','[\'HashSet class declaration\']','[\'Constructor of Kotlin HashSet class\', \'Functions of Kotlin HashSet class\', \'Property of Kotlin HashSet class\', \'Kotlin HashSet Example 1- capacity\', \'Kotlin HashSet Example 2 - generic\', \'Kotlin HashSet Example 3 - add() and addAll()\', \'Kotlin HashSet Example 4 - size, contains() and containsAll()\', \'Kotlin HashSet Example 5 - remove() and removeAll()\', \'Kotlin HashSet Example 6 - isEmpty() and isNotEmpty()\']','[]','[\'For more specific we can provide the generic types of HashSet class using its method hashSetOf<T>().\', \'The isEmpty() function checks the current collection is empty whereas isNotEmpty() function checks the current collection is not empty.\']','[\"Let\'s create an example of HashSet defining it capacity. Capacity defines the total number of element to be added in the HashSet. It can be increase of decrease later according to need.\", \'The add() function is used to add the element in the HashSet instance whereas addAll() function add all the elements of specified collection to HashSet.\', \'The remove() function removes the specified element from the collection if it is present whereas removeAll() function removes all the specified elements from current collection if they are present.\']','[\'The size property returns a total elements present in HashMap. The contains() function returns true if the mention element in it is contained in collection whereas containsAll() function checks all the elements of specified collection is contained in this collection.\']','[\'open class HashSet<E> : AbstractMutableSet<E> (source)\', \'fun main(args: Array<String>){\', \'var hashSet = HashSet<Int>(6)\', \'hashSet.add(2)\', \'hashSet.add(13)\', \'hashSet.add(6)\', \'hashSet.add(5)\', \'hashSet.add(2)\', \'hashSet.add(8)\', \'println(\"......traversing hashSet......\")\', \'for (element in hashSet){\', \'println(element)\', \'}\', \'fun main(args: Array<String>){\', \'var hashSetOf1 = hashSetOf<Int>(2,13,6,5,2,8)\', \'var hashSetOf2: HashSet<String> = hashSetOf<String>(\"Vijay\",\"Ashu\" ,\"Vijay\",\"Roshan\")\', \'println(\"......traversing hashSetOf1......\")\', \'for (element in hashSetOf1){\', \'println(element)\', \'println(\"......traversing hashSetOf2......\")\', \'for (element in hashSetOf2){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var hashSet = HashSet<Int>(3)\', \'val intSet = setOf(6,4,29)\', \'hashSet.add(2)\', \'hashSet.add(13)\', \'hashSet.add(6)\', \'hashSet.add(5)\', \'hashSet.add(2)\', \'hashSet.add(8)\', \'println(\"......traversing hashSet......\")\', \'for (element in hashSet){\', \'println(element)\', \'hashSet.addAll(intSet)\', \'println(\"......traversing hashSet after hashSet.addAll(intSet)......\")\', \'for (element in hashSet){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var hashSetOf1: HashSet<Int> = hashSetOf<Int>(2,6,13,4,29,15)\', \'val mySet = setOf(6,4,29)\', \'println(\"......traversing hashSetOf1......\")\', \'for (element in hashSetOf1){\', \'println(element)\', \'println(\".....hashSetOf1.size.....\")\', \'println(hashSetOf1.size)\', \'println(\".....hashSetOf1.contains(13).....\")\', \'println(hashSetOf1.contains(13))\', \'println(\"....hashSetOf1.containsAll(mySet)...\")\', \'println(hashSetOf1.containsAll(mySet))\', \'fun main(args: Array<String>){\', \'var hashSetOf1: HashSet<Int> = hashSetOf<Int>(2,6,13,4,29,15)\', \'val mySet = setOf(6,4,29)\', \'println(\"......traversing hashSetOf1......\")\', \'for (element in hashSetOf1){\', \'println(element)\', \'println(\".....hashSetOf1.remove(6)......\")\', \'println(hashSetOf1.remove(6))\', \'println(\"......traversing hashSetOf1 after remove(6)......\")\', \'for (element in hashSetOf1){\', \'println(element)\', \'println(\"......hashSetOf1.removeAll(mySet)......\")\', \'println(hashSetOf1.removeAll(mySet))\', \'println(\"......traversing hashSetOf1 after removeAll(mySet)......\")\', \'for (element in hashSetOf1){\', \'println(element)\', \'fun main(args: Array<String>){\', \'var hashSetOf1: HashSet<Int> = hashSetOf<Int>(2,6,13,4,29,15)\', \'println(\"......traversing hashSetOf1......\")\', \'for (element in hashSetOf1){\', \'println(element)\', \'println(\".....hashSetOf1.isEmpty()....\")\', \'if(hashSetOf1.isEmpty()){\', \'println(\"hash set is empty\")\', \'else{\', \'println(\"hash set is not empty\")\', \'println(\".....hashSetOf1.isNotEmpty()....\")\', \'if(hashSetOf1.isNotEmpty()){\', \'println(\"hash set is not empty\")\', \'else{\', \'println(\"hash set is empty\")\']','[\'......traversing hashSet......\', \'8\', \'2\', \'13\', \'5\', \'6\', \'......traversing hashSetOf1......\', \'8\', \'2\', \'13\', \'5\', \'6\', \'......traversing hashSetOf2......\', \'Ashu\', \'Roshan\', \'Vijay\', \'......traversing hashSet......\', \'8\', \'2\', \'13\', \'5\', \'6\', \'......traversing hashSet after hashSet.addAll(intSet)......\', \'2\', \'4\', \'5\', \'6\', \'8\', \'13\', \'29\', \'......traversing hashSetOf1......\', \'2\', \'4\', \'13\', \'29\', \'6\', \'15\', \'.....hashSetOf1.size.....\', \'6\', \'.....hashSetOf1.contains(13).....\', \'true\', \'....hashSetOf1.containsAll(mySet)...\', \'true\', \'......traversing hashSetOf1......\', \'2\', \'4\', \'13\', \'29\', \'6\', \'15\', \'.....hashSetOf1.remove(6)......\', \'true\', \'......traversing hashSetOf1 after remove(6)......\', \'2\', \'4\', \'13\', \'29\', \'15\', \'......hashSetOf1.removeAll(mySet)......\', \'true\', \'......traversing hashSetOf1 after removeAll(mySet)......\', \'2\', \'13\', \'15\', \'......traversing hashSetOf1......\', \'2\', \'4\', \'13\', \'29\', \'6\', \'15\', \'.....hashSetOf1.isEmpty()....\', \'hash set is not empty\', \'.....hashSetOf1.isNotEmpty()....\', \'hash set is not empty\']','[\'Constructor|||Description&&&HashSet()|||It constructs an empty HashSet instance&&&HashSet(initialCapacity: Int, loadFactor: Float = 0f)|||It is used to constructs a HashSet of specified capacity.&&&HashSet(elements: Collection<E>)|||It constructs a HashSet instance using elements of specified collection.\', \'Functions|||Description&&&open fun add(element: E): Boolean|||It adds the given element to the collection.&&&open operator fun contains(element: E): Boolean|||It checks the specified element is present in current collection.&&&open fun isEmpty(): Boolean|||It checks the current collection is empty (not contain any element). If found collection is empty returns true otherwise false.&&&open fun iterator(): MutableIterator<E>|||It returns an iterator over the elements of current object.&&&open fun remove(element: E): Boolean|||It removes the mention element if present in current collection. It returns true if it removes otherwise false.&&&open fun clear()|||It deletes all the elements from this collection.\', \'Property|||Description&&&open val size: Int|||This property is used to return the size of HashSet collection.\']','[]'),(50,'[\'Kotlin Annotations\']','[\'Annotations are used to attach metadata to classes, interface, parameters, and so on at compile time. Annotation can be used by compiler which reflects at runtime. We can change the meaning of the data or program according to annotation values. \']','[\'https://www.javatpoint.com/kotlin-reflection\', \'https://www.javatpoint.com/kotlin-hashset\', \'https://www.javatpoint.com/kotlin-reflection\', \'https://www.javatpoint.com/kotlin-hashset\', \'https://www.javatpoint.com/kotlin-reflection\']','[]','[]','[\'Kotlin Meta-annotations\', \'Example of using annotation\', \'Declaring an annotation\', \'Annotate a constructor\', \'Annotate property assessors\', \'Using constructor as annotation\', \'Example of using TYPE annotation\']','[]','[]','[\'We can add meta-info while declaring annotation. Following are some meta-annotations:\', \'Annotation is declared by placing annotation modifier in front of a class.\', \'We can also use constructor as an annotation. Using constructor as annotation takes parameters.\', \'We can also use one annotation as a parameter to another annotation, at such situation it cannot takes the prefix @ character. Forexample:\', \'Creating a java annotation interface Ann.java\', \'Create a MyClass.kt class which uses the annotation interface Ann.\']','[\'It is also possible to annotate the constructor of a class. This is done by adding the constructor keyword for constructor declaration and placing the annotation before it.\', \'The parameters which are used as an annotation cannot be nullable types. This is because the JVM does not support null as a value for an annotation attribute.\', \'Kotlin also specifies that a class can takean argument of an annotation by using a KClass. The Kotlin compiler automatically converts it into java class, which leads to see the annotations and arguments normally.\']','[]','[\'@Target(AnnotationTarget.CLASS, AnnotationTarget.FUNCTION,\', \'AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.EXPRESSION)\', \'@Retention(AnnotationRetention.SOURCE)\', \'@MustBeDocumented\', \'annotation class MyClass\', \'annotation class MyClass\', \'class MyClass@Inject constructor( dependency: MyDependency){\', \'class MyClass{\', \'var a: MyDependency? = null\', \'@Inject set\', \'annotation class MyClass(val why: String)\', \'@MyClass(\"parameter\") class Foo{\', \'annotation class ReplaceWith(val expression: String)\', \'annotation class Deprecated(\', \'val message: String,\', \'val replaceWith: ReplaceWith = ReplaceWith(\"\"))\', \'@Deprecated(\"This function is deprecated, use === instead\", ReplaceWith(\"this === other\"))\', \'import kotlin.reflect.KClass\', \'annotation class MyClass(val arg1: KClass<*>, val arg2: KClass<out Any>)\', \'@MyClass(String::class, Int::class) class Foo\', \'import java.lang.annotation.ElementType;\', \'import java.lang.annotation.Retention;\', \'import java.lang.annotation.RetentionPolicy;\', \'import java.lang.annotation.Target;\', \'@Target(ElementType.TYPE)\', \'@Retention(RetentionPolicy.RUNTIME)\', \'@interface  Ann{\', \'int value();\', \'@Ann(value = 10)\', \'class MyClass{\', \'fun main (args: Array){\', \'var c = MyClass()\', \'var x = c.javaClass.getAnnotation(Ann::class.java)\', \'if(x!=null){\', \'println(\"Value:\"+x?.value)\']','[\'Value: 10\']','[\'Annotation Name|||Usage&&&@Target|||It targets all the possible kinds of elements which can be annotated with the annotation.&&&@Retention|||It specifies whether the annotation is stored in the compiled class files or whether it is visible through reflection at run time.&&&@Repeatable|||This meta-annotation determines that an annotation is applicable twice or more on a single code element.&&&@MustBeDocumented|||This meta-document specifies that the annotation is the part of the public API and should be included in the class or method.\']','[]'),(51,'[\'Kotlin Reflection\']','[\'Reflection is a set of language and library features that examines the structure of program at runtime. Kotlin makes functions and properties as first-class citizen in the language and examine these functions and properties at runtime.\']','[\'https://www.javatpoint.com/kotlin-class-and-object\', \'https://www.javatpoint.com/kotlin-annotations\', \'https://www.javatpoint.com/kotlin-class-and-object\', \'https://www.javatpoint.com/kotlin-annotations\', \'https://www.javatpoint.com/kotlin-class-and-object\']','[]','[]','[\'Class Reference\', \'Functional Reference\', \'Overloaded function reference operator (::) \', \'Property Reference\', \'Access the property of member class:\']','[\'Kotlin functional reference example\']','[\'Note: KClass represents a class and provides examination capabilities. To obtain the instance of this class use syntax ::class.\']','[\'Syntax of class reference:\', \'In the above program ::isPositive is a value of function type (Int) -> Boolean.\', \'The operator :: can be used with overload function when the expected type is known from the context. For example:\', \'Create a function isPositive() which takes two different types Int and String and call this function with different type parameter. \', \'We can also access the properties as first-class object in Kotlin, to access object property we can use :: operator:\', \'To reset the value of mutable type property, reference property has set() method. \', \'Property reference also access the property of other member of class. For example:\']','[\'Class reference is used to obtain the reference of KClass object. To obtain the reference of statically Kclass, we should use the class literal(i.e. use double colons).\', \'The reference value is a class type of KClass. KClass class reference is not the same as a Java class reference. We obtain the Java class reference by using .java property on a KClass instance.\', \'Kotlin functional is used to obtain the reference of function using double colons. The reference of function can be used in another function as a parameter. To use this reference in another function we use the :: operator:\', \'To evaluate the property object of type KProperty<Int> we use the expression ::variableName. The expression ::variableName allow to retrieve its property name by using name and readits value using get() function.\']','[]','[\'val c1 = String::class\', \'val c2 = MyClass::class\', \'fun isPositive(x: Int) = x> 0\', \'fun isPositive(x: Int) = x> 0\', \'val number = listOf(-10,-5,0,5,10)\', \'print(number.filter(::isPositive))\', \'fun main(args: Array<String>) {\', \'fun isPositive(x: Int) = x > 0\', \'val numbers = listOf(-10, -5, 0, 5, 10)\', \'println(numbers.filter(::isPositive))\', \'fun main(args: Array<String>) {\', \'fun isPositive(x: Int) = x > 0\', \'fun isPositive(s: String) = s== \"kotlin\" || s == \"Kotlin\"\', \'val numbers = listOf(-10,-5,0,5,10)\', \'val strings = listOf(\"kotlin\", \"program\")\', \'println(numbers.filter(::isPositive))\', \'println(strings.filter(::isPositive))\', \'fun main(args: Array<String>) {\', \'println(::x.get())\', \'println(::x.name)\', \'println(::y.set(10))\', \'val x = 5\', \'var y = 5\', \'class A(val x: Int)\', \'fun main(args: Array<String>) {\', \'val prop = A::x\', \'println(prop.get(A(5)))\']','[\'[5,10]\', \'[5, 10]\', \'[kotlin]\', \'5\', \'x\', \'10\', \'5\']','[]','[]'),(52,'[\'Kotlin Class and Object\']','[\'Kotlin supports both object oriented programming (OOP) as well as functional programming. Object oriented programming is based on real time objects and classes. Kotlin also support pillars of OOP language such as encapsulation, inheritance and polymorphism.\']','[\'https://www.javatpoint.com/kotlin-nested-class-and-inner-class\', \'https://www.javatpoint.com/kotlin-reflection\', \'https://www.javatpoint.com/kotlin-nested-class-and-inner-class\', \'https://www.javatpoint.com/kotlin-reflection\', \'https://www.javatpoint.com/kotlin-nested-class-and-inner-class\']','[]','[]','[\'Kotlin Class\', \'Kotlin Object\']','[\'Syntax of Kotlin class declaration\', \'Example of Kotlin class\', \'Create an object\', \'Access class property and member function\']','[]','[\'The account class has three properties acc_no, name, amount and three member functions deposit(), withdraw(),checkBalance().\', \'In Kotlin, property must be initialize or declare as abstract. In above class, properties acc_no initialize as 0, name as null and amount as 0f.\', \'Object is real time entity or may be a logical entity which has state and behavior. It has the characteristics:\', \'Object is used to access the properties and member function of a class. Kotlin allows to create multiple object of a class.\', \'Kotlin object is created in two steps, the first is to create reference and then create an object.\', \'Creating multiple object\', \'Here obj1 and obj2 are reference and className() is an object.\', \'Properties and member function of class are accessed by . operator using object. For example:\', \"Let\'s create an example, which access the class property and member function using . operator.\"]','[\'In above example, class className is an empty constructor. It is generated by compiler automatically but if we want to provide a constructor, we need to write a constructor keyword followed by class name as:\']','[\'Kotlin class is similar to Java class, a class is a blueprint for the objects which have common properties. Kotlin classes are declared using keyword class. Kotlin class has a class header which specifies its type parameters, constructor etc. and the class body which is surrounded by curly braces.\']','[\'class className{   // class header\', \'class className constructor(){   // class header\', \'class account {\', \'var acc_no: Int = 0\', \'var name: String? = null\', \'var amount: Float = 0f\', \'fun deposit() {\', \'fun withdraw() {\', \'fun checkBalance() {\', \'var obj1 = className()\', \'var obj1 = className()\', \'var obj2 = className()\', \'obj.deopsit()\', \'obj.name = Ajay\', \'class Account {\', \'var acc_no: Int = 0\', \'var name: String =  \"\"\', \'var amount: Float = 0.toFloat()\', \'fun insert(ac: Int,n: String, am: Float ) {\', \'acc_no=ac\', \'name=n\', \'amount=am\', \'println(\"Account no: ${acc_no} holder :${name} amount :${amount}\")\', \'fun deposit() {\', \'fun withdraw() {\', \'fun checkBalance() {\', \'fun main(args: Array<String>){\', \'Account()\', \'var acc= Account()\', \'acc.insert(832345,\"Ankit\",1000f) //accessing member function\', \'println(\"${acc.name}\") //accessing class property\']','[\'Account no: 832345 holder :Ankit amount :1000.0\', \'Ankit\']','[]','[\'|||state: it represents value of an object.|||behavior: it represent the functionality of an object.|||\']'),(53,'[\'Kotlin Nested class and Inner class\']','[\'Nested class is such class which is created inside another class. In Kotlin, nested class is by default static, so its data member and member function can be accessed without creating an object of class. Nested class cannot be able to access the data member of outer class.\']','[\'https://www.javatpoint.com/kotlin-constructor\', \'https://www.javatpoint.com/kotlin-class-and-object\', \'https://www.javatpoint.com/kotlin-constructor\', \'https://www.javatpoint.com/kotlin-class-and-object\', \'https://www.javatpoint.com/kotlin-constructor\']','[]','[]','[\'Kotlin Nested class\', \'Kotlin Inner class\']','[\'Kotlin Nested Class Example\', \'Kotlin Inner Class Example\']','[]','[\'Inner class cannot be declared inside interfaces or non-inner nested classes.\']','[\'Inner class is a class which is created inside another class with keyword inner. In other words, we can say that a nested class which is marked as \"inner\" is called inner class. \', \'The advantage of inner class over nested class is that, it is able to access members of outer class even it is private. Inner class keeps a reference to an object of outer class.\']','[]','[\'class outerClass{\', \'class nestedClass{\', \'class outerClass{\', \'private var name: String = \"Ashu\"\', \'class nestedClass{\', \'var description: String = \"code inside nested class\"\', \'private var id: Int = 101\', \'fun foo(){\', \'println(\"Id is ${id}\")\', \'}\', \'fun main(args: Array<String>){\', \'println(outerClass.nestedClass().description) // accessing property\', \'var obj = outerClass.nestedClass() // object creation\', \'obj.foo() // access member function\', \'class outerClass{\', \'inner class innerClass{\', \'class outerClass{\', \'private  var name: String = \"Ashu\"\', \'inner class  innerClass{\', \'var description: String = \"code inside inner class\"\', \'private var id: Int = 101\', \'fun foo(){\', \'println(\"name is ${name}\") // access the outer class member even private\', \'println(\"Id is ${id}\")\', \'}\', \'fun main(args: Array<String>){\', \'println(outerClass().innerClass().description) // accessing property\', \'var obj = outerClass().innerClass() // object creation\', \'obj.foo() // access member function\']','[\'code inside nested class\', \'Id is 101\', \'code inside inner class\', \'name is Ashu\', \'Id is 101\']','[]','[]'),(54,'[\'Kotlin Constructor\']','[\"In Kotlin, constructor is a block of code similar to method. Constructor is declared with the same name as the class followed by parenthesis \'()\'. Constructor is used to initialize the variables at the time of object creation. \"]','[\'https://www.javatpoint.com/kotlin-visibility-modifier\', \'https://www.javatpoint.com/kotlin-nested-class-and-inner-class\', \'https://www.javatpoint.com/kotlin-visibility-modifier\', \'https://www.javatpoint.com/kotlin-nested-class-and-inner-class\', \'https://www.javatpoint.com/kotlin-visibility-modifier\']','[]','[]','[\'Kotlin primary constructor\', \'Kotlin secondary constructor\', \'Calling one secondary constructor from another secondary constructor of same class\', \'Calling supper class secondary constructor from derived class secondary constructor\']','[\'Types of Kotlin constructors\', \'Primary constructor with initializer block\']','[]','[\'There are two types of constructors in Kotlin:\', \'There is only one primary constructor in a Kotlin class whereas secondary constructor may be one or more. \', \'When the object of myClasss is created, it initializes name and id with \"Ashu\" and \"101\" respectively.\', \"Let\'s rewrite the above code using initialize block:\", \'When object of myClass class is created, it executes initializer block which initializese_name and e_id.\', \'In Kotlin, secondary constructor can be created one or more in class. The secondary constructor is created using \"constructor\" keyword. \', \"Let\'s see an example of secondary constructor assigning the value while object of class is created.\", \'For example:\', \'In Kotlin, one secondary constructor can call another secondary constructor of same class. This is done by using this() keyword.\', \'For example:\']','[\'Primary constructor is used to initialize the class. It is declared at class header. Primary constructor code is surrounded by parentheses with optional parameter. \', \"Let\'s see an example of declaration of primary constructor. In the below code, we declare a constructor myClass with two parameter name and id. Parameter name is only read property whereas id is read and write property.\", \'In above code, parameters name and id accept values \"Ashu\" and \"101\" when myclass object is created. The properties name and id are used without \"val\" or \"var\", so they are not properties of myClass class. \', \"Let\'s see an example of declaration of secondary constructor. In the below code, we declare two constructor of myClass with two parameter name and id. \", \'In Kotlin, one derived class secondary constructor can call the base class secondary constructor. This is done using super keyword, this is the concept of inheritance.\']','[\'The primary constructor does not contain any code. Initializer blocks are used to initialization of code. This block is prefixed with init keyword. At the period of instance initialization, the initialized blocks are executed in the same order as they appear in class body.\', \'We can also use both primary as well as secondary constructor in a same class. By using primary as well secondary constructor in same class, secondary constructor needs to authorize to primary constructor. Authorization to another constructor in same class is done using this() keyword.\']','[\'class myClass(valname: String,varid: Int) {\', \'class myClass(val name: String, var id: Int) {\', \'fun main(args: Array<String>){\', \'val myclass = myClass (\"Ashu\", 101)\', \'println(\"Name = ${ myclass.name}\")\', \'println(\"Id = ${ myclass.id}\")\', \'class myClass(name: String, id: Int) {\', \'val e_name: String\', \'var e_id: Int\', \'e_name = name.capitalize()\', \'e_id = id\', \'println(\"Name = ${e_name}\")\', \'println(\"Id = ${e_id}\")\', \'fun main(args: Array<String>){\', \'val myclass = myClass (\"Ashu\", 101)\', \'class myClass{\', \'constructor(id: Int){\', \'constructor(name: String, id: Int){\', \'class myClass{\', \'constructor(name: String, id: Int){\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'fun main(args: Array<String>){\', \'val myclass = myClass (\"Ashu\", 101)\', \'class myClass(password: String){\', \'constructor(name: String, id: Int, password: String): this(password){\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'println(\"Password = ${password}\")\', \'fun main(args: Array<String>){\', \'val myclass = myClass (\"Ashu\", 101, \"mypassword\")\', \'class myClass{\', \'constructor(name: String, id: Int): this(name,id, \"mypassword\"){\', \'println(\"this executes next\")\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'constructor(name: String, id: Int,pass: String){\', \'println(\"this executes first\")\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'println(\"Password = ${pass}\")\', \'fun main(args: Array<String>){\', \'val myclass = myClass (\"Ashu\", 101)\', \'open class Parent{\', \'constructor(name: String, id: Int){\', \'println(\"this executes first\")\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'constructor(name: String, id: Int,pass: String){\', \'println(\"this executes third\")\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'println(\"Password = ${pass}\")\', \'class Child: Parent{\', \'constructor(name: String, id: Int): super(name,id){\', \'println(\"this executes second\")\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'constructor(name: String, id: Int,pass: String):super(name,id,\"password\"){\', \'println(\"this executes forth\")\', \'println(\"Name = ${name}\")\', \'println(\"Id = ${id}\")\', \'println(\"Password = ${pass}\")\', \'fun main(args: Array<String>){\', \'val obj1 = Child(\"Ashu\", 101)\', \'val obj2 = Child(\"Ashu\", 101,\"mypassword\")\']','[\'Name = Ashu\', \'Id = 101\', \'Name = Ashu\', \'Id = 101\', \'Name = Ashu\', \'Id = 101\', \'Name = Ashu\', \'Id = 101\', \'Password = mypassword\', \'this executes first\', \'Name = Ashu\', \'Id = 101\', \'Password = mypassword\', \'this executes next\', \'Name = Ashu\', \'Id = 101\', \'this executes first\', \'Name = Ashu\', \'Id = 101\', \'this executes second\', \'Name = Ashu\', \'Id = 101\', \'this executes third\', \'Name = Ashu\', \'Id = 101\', \'Password = password\', \'this executes forth\', \'Name = Ashu\', \'Id = 101\', \'Password = mypassword\']','[]','[\'|||Primary constructor|||Secondary constructor|||\']'),(55,'[\'Kotlin Visibility Modifier\']','[\'Visibility modifiers are the keywords which are used to restrict the use of class, interface, methods, and property of Kotlin in the application. These modifiers are used at multiple places such as class header or method body. \']','[\'https://www.javatpoint.com/kotlin-inheritance\', \'https://www.javatpoint.com/kotlin-constructor\', \'https://www.javatpoint.com/kotlin-inheritance\', \'https://www.javatpoint.com/kotlin-constructor\', \'https://www.javatpoint.com/kotlin-inheritance\']','[]','[]','[\'public modifier\', \'protected modifier\', \'internal modifier\', \'private modifier\']','[\'Overriding of protected types\', \'Example of Visibility Modifier\']','[]','[\'In Kotlin, visibility modifiers are categorized into four different types:\', \'All public declaration can be placed at top of the file. If a member of class is not specified then it is by default public. \', \'In Kotlin, protected modifier cannot be declared at top level.\', \'In above, all the fields are declared as internal which are accessible only inside the module in which they are implemented.\']','[\'A public modifier is accessible from everywhere in the project. It is a default modifier in Kotlin. If any class, interface etc. are not specified with any access modifier then that class, interface etc. are used in public scope. \', \'A protected modifier with class or interface allows visibility to its class or subclass only. A protected declaration (when overridden) in its subclass is also protected modifier unless it is explicitly changed.\', \'The internal modifiers are newly added in Kotlin, it is not available in Java. Declaring anything makes that field marked as internal field. The internal modifier makes the field visible only inside the module in which it is implemented.\', \'In above class Example,val x and function doSomthing() are declared as private. The class \"Example\" is accessible from the same source file, \"val x\" and \"fun doSomthing()\" are accessible within Example class.\']','[\'A private modifier allows the declaration to be accessible only within the block in which properties, fields, etc. are declare. The private modifier declaration does not allow to access the outside the scope. A private package can be accessible within that specific file. \']','[\'public class Example{\', \'class Demo{\', \'public fun hello()\', \'fun demo()\', \'public val x = 5\', \'val y = 10\', \'open class Base{\', \'protected val i = 0\', \'class Derived : Base(){\', \'fun getValue() : Int\', \'return i\', \'open class Base{\', \'open protected val i = 5\', \'class Another : Base(){\', \'fun getValue() : Int\', \'return i\', \'override val i =10\', \'internal class Example{\', \'internal val x = 5\', \'internal fun getValue(){\', \'internal val y = 10\', \'private class Example {\', \'private val x = 1\', \'private valdoSomething() {\', \'open class Base() {\', \'var a = 1 // public by default\', \'private var b = 2 // private to Base class\', \'protected open val c = 3  // visible to the Base and the Derived class\', \'internal val d = 4 // visible inside the same module\', \'protected fun e() { } // visible to the Base and the Derived class\', \'class Derived: Base() {\', \'override val c = 9 // c is protected\', \'fun main(args: Array<String>) {\', \'val base = Base()\', \'val derived = Derived()\']','[]','[]','[\'|||public|||protected|||internal|||private|||\']'),(56,'[\'Kotlin Inheritance\']','[\'Inheritance is an important feature of object oriented programming language. Inheritance allows to inherit the feature of existing class (or base or parent class) to new class (or derived class or child class).\']','[\'https://www.javatpoint.com/kotlin-abstract-class\', \'https://www.javatpoint.com/kotlin-visibility-modifier\', \'https://www.javatpoint.com/kotlin-abstract-class\', \'https://www.javatpoint.com/kotlin-visibility-modifier\', \'https://www.javatpoint.com/kotlin-abstract-class\']','[]','[]','[\'Kotlin open keyword\', \'Kotlin Inheriting fields from a class\', \'Kotlin Inheriting methods from a class\', \'Kotlin Inheritance and primary constructor\', \'Kotlin Inheritance and secondary constructor\', \'Kotlin Method Overriding\', \'Kotlin superclass implementation\', \'Kotlin multiple class implementation\']','[\'Kotlin Inheritance Example\', \'Example of inheritance without overriding\', \'Example of Kotlin method overriding\', \'Example of Kotlin property overriding\']','[]','[\'In Kotlin, the derived class inherits a base class using: operator in the class header (after the derive class name or constructor)\', \'All Kotlin classes have a common superclass \"Any\". It is a default superclass for a class with no supertypes explicitly specified.\', \'For example, a class Example is implicitly inherited from Any.\', \'For example:\', \'For example:\', \'For example:\', \'When an object of derived class is created, it calls its superclass first and executes init block of base class followed by its own.\', \'For example,\', \'Method overriding means providing the specific implementation of method of super (parent) class into its subclass (child) class.\', \'KotlinRules of method overriding\', \'We can override the val property with var property in inheritance but vice-versa is not true.\', \'Derived class can also call its superclass methods and property using super keyword. \', \'For example:\', \'In Kotlin, derived class uses a supertype name in angle brackets, e.gsuper<Base> when it implements same function name provided in multiple classes. \']','[\'The main class is called super class (or parent class) and the class which inherits the superclass is called subclass (or child class). The subclass contains features of superclass as well as its own. \', \'The concept of inheritance is allowed when two or more classes have same properties. It allows code reusability. A derived class has only one base class but may have multiple interfaces whereas a base class may have one or more derived classes.\', \'As Kotlin classes are final by default, they cannot be inherited simply. We use the open keyword before the class to inherit a class and make it to non-final,\', \'When we inherit a class to derive class, all the fields and functionalities are inherited. We can use these fields and functionalities in derived class.\', \'Here, we declare a class Employee is superclass and Programmer and Salesman are their subclasses. The subclasses inherit properties name, age and salary as well as subclasses containtheir own functionalitieslike doProgram() and fieldWork().\', \'When a base and derived class both contains different numbers of parameters in their primary constructor then base class parameters are initialized form derived class object.\', \'If derived class does not contain any primary constructor then it is required to call the base class secondary constructor from derived class using super keyword.\', \'In other words, when subclass redefines or modifies the method of its superclass into subclass, it is known as method overriding. Method overriding is only possible in inheritance.\', \'In above example, a program without overriding the method of base class we found that both derived classes Parrot and Duck perform the same common operation. To overcome with this problem we use the concept of method overriding.\', \'Property of superclass can also be overridden in its subclass as similar to method. A color property of Bird class is overridden in its subclass Parrot and Duck and modified.\']','[\'Suppose that,we have two different classes \"Programmer\" and \"Salesman\" having the common properties \'name\',\'age\', and \'salary\' as well as their own separate functionalitiesdoProgram() and fieldWork(). The feature of inheritance allows that we can inherit (Employee) containing the common features.\', \'If the base and derived class both having primary constructor in that case the parameters are initialized in the primary constructor of base class. In above example of inheritance, all classes contain three parameters \"name\", \"age\" and \"salary\" and all these parameters are initialized in primary constructor of base class.\', \'In above example, when object of Child class is created, it calls its constructor and initializes its parameters with values \"Ashu\", \"101\" and \"Developer\". At the same time Child class constructor calling its supper class constructor using super keyword with values of name and id. Due to the presence of super keyword thebody of superclass constructor executes first and returns to Child class constructor.\', \'In this example, the method fly() of parent class Bird is overridden in its subclass Parrot and Duck. To override the method of parent class, the parent class and its method which is going to override must be declare as open. At the same time method which is overridden in child class must be prefaced with keyword override.\', \'For example, a derived class Parrotextends its superclass Bird and implement Duck interface containing same function fly(). To call particular method of each class and interface we must be mention supertype name in angle brackets as super<Bird>.fly() and super<Duck>.fly() for each method.\']','[\'open class Base(p: Int){\', \'class Derived(p: Int) : Base(p){\', \'open class Employee(name: String, age: Int, salary: Float) {\', \'class Programmer(name: String, age: Int, salary: Float): Employee(name,age,salary) {\', \'class Salesman(name: String, age: Int, salary: Float): Employee(name,age,salary) {\', \'class Example\', \'open class Example{\', \'open class Base{\', \'val x = 10\', \'class Derived: Base() {\', \'fun foo() {\', \'println(\"x is equal to \" + x)\', \'fun main(args: Array<String>) {\', \'val derived = Derived()\', \'derived.foo()\', \'open class Bird {\', \'fun fly() {\', \'println(\"flying...\")\', \'class Duck: Bird() {\', \'fun swim() {\', \'println(\"swimming...\")\', \'fun main(args: Array<String>) {\', \'val duck = Duck()\', \'duck.fly()\', \'duck.swim()\', \'open class Employee(name: String, age: Int, salary: Float) {\', \'println(\"Name is $name.\")\', \'println(\"Age is $age\")\', \'println(\"Salary is $salary\")\', \'class Programmer(name: String, age: Int, salary: Float):Employee(name,age,salary){\', \'fun doProgram() {\', \'println(\"programming is my passion.\")\', \'class Salesman(name: String, age: Int, salary: Float):Employee(name,age,salary){\', \'fun fieldWork() {\', \'println(\"travelling is my hobby.\")\', \'fun main(args: Array<String>){\', \'val obj1 = Programmer(\"Ashu\", 25, 40000f)\', \'obj1.doProgram()\', \'val obj2 = Salesman(\"Ajay\", 24, 30000f)\', \'obj2.fieldWork()\', \'open class Employee(name: String,salary: Float) {\', \'println(\"Name is $name.\")\', \'println(\"Salary is $salary\")\', \'class Programmer(name: String, dept: String, salary: Float):Employee(name,salary){\', \'println(\"Name $name of department $dept with salary $salary.\")\', \'fun doProgram() {\', \'println(\"Programming is my passion.\")\', \'class Salesman(name: String, dept: String, salary: Float):Employee(name,salary){\', \'println(\"Name $name of department $dept with salary $salary.\")\', \'fun fieldWork() {\', \'println(\"Travelling is my hobby.\")\', \'fun main(args: Array<String>){\', \'val obj1 = Programmer(\"Ashu\", \"Development\", 40000f)\', \'obj1.doProgram()\', \'println()\', \'val obj2 = Salesman(\"Ajay\", \"Marketing\", 30000f)\', \'obj2.fieldWork()\', \'open class Patent {\', \'constructor(name: String, id: Int) {\', \'println(\"execute super constructor $name: $id\")\', \'class Child: Patent {\', \'constructor(name: String, id: Int, dept: String): super(name, id) {\', \'print(\"execute child class constructor with property $name, $id, $dept\")\', \'fun main(args: Array<String>) {\', \'val child = Child(\"Ashu\",101, \"Developer\")\', \'open class Bird {\', \'open fun fly() {\', \'println(\"Bird is flying...\")\', \'class Parrot: Bird() {\', \'class Duck: Bird() {\', \'fun main(args: Array<String>) {\', \'val p = Parrot()\', \'p.fly()\', \'val d = Duck()\', \'d.fly()\', \'open class Bird {\', \'open fun fly() {\', \'println(\"Bird is flying...\")\', \'class Parrot: Bird() {\', \'override fun fly() {\', \'println(\"Parrot is flying...\")\', \'class Duck: Bird() {\', \'override fun fly() {\', \'println(\"Duck is flying...\")\', \'fun main(args: Array<String>) {\', \'val p = Parrot()\', \'p.fly()\', \'val d = Duck()\', \'d.fly()\', \'open class Bird {\', \'open var color = \"Black\"\', \'open fun fly() {\', \'println(\"Bird is flying...\")\', \'class Parrot: Bird() {\', \'override var color = \"Green\"\', \'override fun fly() {\', \'println(\"Parrot is flying...\")\', \'class Duck: Bird() {\', \'override var color = \"White\"\', \'override fun fly() {\', \'println(\"Duck is flying...\")\', \'fun main(args: Array<String>) {\', \'val p = Parrot()\', \'p.fly()\', \'println(p.color)\', \'val d = Duck()\', \'d.fly()\', \'println(d.color)\', \'open class Bird {\', \'open var color = \"Black\"\', \'open fun fly() {\', \'println(\"Bird is flying...\")\', \'class Parrot: Bird() {\', \'override var color = \"Green\"\', \'override fun fly() {\', \'super.fly()\', \'println(\"Parrot is flying...\")\', \'fun main(args: Array<String>) {\', \'val p = Parrot()\', \'p.fly()\', \'println(p.color)\', \'open class Bird {\', \'open var color = \"Black\"\', \'open fun fly() {\', \'println(\"Bird is flying...\")\', \'interface Duck {\', \'fun fly() {\', \'println(\"Duck is flying...\")\', \'class Parrot: Bird(),Duck {\', \'override var color = \"Green\"\', \'override fun fly() {\', \'super<Bird>.fly()\', \'super<Duck>.fly()\', \'println(\"Parrot is flying...\")\', \'fun main(args: Array<String>) {\', \'val p = Parrot()\', \'p.fly()\', \'println(p.color)\']','[\'x is equal to 10\', \'flying...\', \'swimming...\', \'Name is Ashu.\', \'Age is 25\', \'Salary is 40000.0\', \'programming is my passion.\', \'Name is Ajay.\', \'Age is 24\', \'Salary is 30000.0\', \'travelling is my hobby.\', \'Name is Ashu.\', \'Salary is 40000.0\', \'Name Ashu of department Development with salary 40000.0.\', \'Programming is my passion.\', \'Name is Ajay.\', \'Salary is 30000.0\', \'Name Ajay of department Marketing with salary 30000.0.\', \'Travelling is my hobby.\', \'execute super constructor Ashu: 101\', \'execute child class constructor with property Ashu, 101, Developer\', \'Bird is flying...\', \'Bird is flying...\', \'Parrot is flying...\', \'Duck is flying...\', \'Parrot is flying...\', \'Green\', \'Duck is flying...\', \'White\', \'Bird is flying...\', \'Parrot is flying...\', \'Green\', \'Bird is flying...\', \'Duck is flying...\', \'Parrot is flying...\']','[]','[\'|||Parent class and its method or property which is to be overridden must be open (non-final).|||Method name of base class and derived class must have same.|||Method must have same parameter as in base class.|||\']'),(57,'[\'Kotlin Abstract class\']','[\'A class which is declared with abstract keyword is known as abstract class. An abstract class cannot be instantiated. Means, we cannot create object of abstract class. The method and properties of abstract class are non-abstract unless they are explicitly declared as abstract.\']','[\'https://www.javatpoint.com/kotlin-interface\', \'https://www.javatpoint.com/kotlin-inheritance\', \'https://www.javatpoint.com/kotlin-interface\', \'https://www.javatpoint.com/kotlin-inheritance\', \'https://www.javatpoint.com/kotlin-interface\']','[]','[]','[\'Declaration of abstract class\']','[\'Example of abstract class that has abstract method\', \'Example of real scenario of abstract class\']','[]','[\'A non-abstract open member function can be over ridden in an abstract class.\']','[\'In this example, there is an abstract class Car that contains an abstract function run(). The implementation of run() function is provided by its subclass Honda.\', \'In this example, an abstract class Bank that contains an abstract function simpleInterest() accepts three parameters p,r,and t. The class SBI and PNB provides the implementation of simpleInterest() function and returns the result. \']','[\'Abstract classes are partially defined classes, methods and properties which are no implementation but must be implemented into derived class. If the derived class does not implement the properties of base class then is also meant to be an abstract class.\', \'Abstract class or abstract function does not need to annotate with open keyword as they are open by default. Abstract member function does not contain its body. The member function cannot be declared as abstract if it contains in body in abstract class. \', \'In above example, An abstract class Honda extends the class Car and its function run(). Honda class override the run() function of Car class. The Honda class did not give the implementation of run() function as it is also declared as abstract. The implementation of abstract function run() of Honda class is provided by City class. \']','[\'abstract class A {\', \'var x = 0\', \'abstract fun doSomething()\', \'abstract class Car{\', \'abstract fun run()\', \'class Honda: Car(){\', \'override fun run(){\', \'println(\"Honda is running safely..\")\', \'fun main(args: Array<String>){\', \'val obj = Honda()\', \'obj.run();\', \'open class Car {\', \'open fun run() {\', \'println(\"Car is running..\")\', \'abstract class Honda : Car() {\', \'override abstract fun run()\', \'class City: Honda(){\', \'override fun run() {\', \'println(\"Honda City is running..\")\', \'fun main(args: Array<String>){\', \'val car = Car()\', \'car.run()\', \'val city = City()\', \'city.run()\', \'abstract class Bank {\', \'abstract fun simpleInterest(p: Int, r: Double, t: Int) :Double\', \'class SBI : Bank() {\', \'override fun simpleInterest(p: Int, r: Double, t: Int): Double{\', \'return (p*r*t)/100\', \'class PNB : Bank() {\', \'override fun simpleInterest(p: Int, r: Double, t: Int): Double{\', \'return (p*r*t)/100\', \'fun main(args: Array<String>) {\', \'var sbi: Bank = SBI()\', \'val sbiint = sbi.simpleInterest(1000,5.0,3)\', \'println(\"SBI interest is $sbiint\")\', \'var pnb: Bank = PNB()\', \'val pnbint = pnb.simpleInterest(1000,4.5,3)\', \'println(\"PNB interest is $pnbint\")\']','[\'Honda is running safely..\', \'Car is running..\', \'Honda City is running..\', \'SBI interest is 150.0\', \'PNB interest is 135.0\']','[]','[]'),(58,'[\'Kotlin Interface\']','[\'An interface is a blueprint of class.Kotlin interface is similar to Java 8. It contains abstract method declarations as well as implementation of method.\']','[\'https://www.javatpoint.com/kotlin-data-class\', \'https://www.javatpoint.com/kotlin-abstract-class\', \'https://www.javatpoint.com/kotlin-data-class\', \'https://www.javatpoint.com/kotlin-abstract-class\', \'https://www.javatpoint.com/kotlin-data-class\']','[]','[]','[\'Defining Interface\', \'Why use Kotlin interface?\', \'Implementing Interfaces\', \'Implementing multiple interface\', \'Resolving different Interfaces having same method overriding conflicts\']','[]','[]','[\'An interface is defined using the keyword interface. For example:\', \'The methods which are only declared without their method body are abstract by default.\', \'Following are the reasons to use interface:\', \"To solve the above problem we need to specify particular method of interface which we are calling. Let\'s see an example below.\"]','[\'Subclass extends only one super class but implements multiple interfaces. Extension of parent class or interface implementation are done using (:) operator in their subclass.\', \'In this example, we are implementing the interface MyInterface in InterfaceImp class. InterfaceImp class provides the implementation of property id and abstract method absMethod() declared in MyInterface interface.\', \'We can implement multiple abstract methods of different interfaces in same class. All the abstract methods must be implemented in subclass. The other non-abstract methods of interface can be called from derived class.\', \'For example, creating two interface MyInterface1 and MyInterface2 with abstract methods doSomthing() and absMethod() respectively. These abstract methods are overridden in derive class MyClass.\']','[\"Let\'s see an example in which interface MyInterface1 and interface MyInterface2 both contains same non-abstract method. A class MyClass provides the implementation of these interfaces. Calling the method of interface using object of MyClass generates an error.\", \'In below example, two interfaces MyInterface1 and MyInterface2 contain two abstract methodsadsMethod() and absMethod(name: String)  and non-abstract method doSomthing() in both respectively. A class MyClass implements both interface and override abstract method absMethod() and absMethod(name: String) . To override the non-abstract method doSomthing() we need to specify interface name with method using super keyword as super<interface_name>.methodName().\']','[\'interface MyInterface {\', \'val id: Int // abstract property\', \'fun absMethod()// abstract method\', \'fun doSomthing() {\', \'interface MyInterface  {\', \'var id: Int            // abstract property\', \'fun absMethod():String    // abstract method\', \'fun doSomthing() {\', \'println(\"MyInterface doing some work\")\', \'class InterfaceImp : MyInterface {\', \'override var id: Int = 101\', \'override fun absMethod(): String{\', \'return \"Implementing abstract method..\"\', \'fun main(args: Array<String>) {\', \'val obj = InterfaceImp()\', \'println(\"Calling overriding id value = ${obj.id}\")\', \'obj.doSomthing()\', \'println(obj.absMethod())\', \'interface MyInterface1 {\', \'fun doSomthing()\', \'interface MyInterface2 {\', \'fun absMethod()\', \'class MyClass : MyInterface1, MyInterface2 {\', \'override fun doSomthing() {\', \'println(\"overriding doSomthing() of MyInterface1\")\', \'override fun absMethod() {\', \'println(\"overriding absMethod() of MyInterface2\")\', \'fun main(args: Array<String>) {\', \'val myClass = MyClass()\', \'myClass.doSomthing()\', \'myClass.absMethod()\', \'interface MyInterface1 {\', \'fun doSomthing(){\', \'println(\"overriding doSomthing() of MyInterface1\")\', \'interface MyInterface2 {\', \'fun doSomthing(){\', \'println(\"overriding doSomthing() of MyInterface2\")\', \'class MyClass : MyInterface1, MyInterface2 {\', \'fun main(args: Array<String>) {\', \'val myClass = MyClass()\', \'myClass.doSomthing()\', \'interface MyInterface1 {\', \'fun doSomthing() {\', \'println(\"MyInterface 1 doing some work\")\', \'fun absMethod()\', \'interface MyInterface2 {\', \'fun doSomthing(){\', \'println(\"MyInterface 2 doing some work\")\', \'fun absMethod(name: String)\', \'class MyClass : MyInterface1, MyInterface2 {\', \'override fun doSomthing() {\', \'super<MyInterface2>.doSomthing()\', \'override fun absMethod() {\', \'println(\"Implements absMethod() of MyInterface1\")\', \'override fun absMethod(n: String) {\', \'println(\"Implements absMethod(name) of MyInterface2 name is  $n\")\', \'fun main(args: Array<String>) {\', \'val myClass = MyClass()\', \'myClass.doSomthing()\', \'myClass.absMethod()\', \'myClass.absMethod(\"Ashu\")\', \'interface MyInterface1 {\', \'fun doSomthing() {\', \'println(\"MyInterface 1 doing some work\")\', \'fun absMethod()\', \'interface MyInterface2 {\', \'fun doSomthing() {\', \'println(\"MyInterface 2 doing some work\")\', \'fun absMethod() {\', \'println(\"MyInterface 2 absMethod\")\', \'class C : MyInterface1 {\', \'override fun absMethod() {\', \'println(\"MyInterface1 absMethod implementation\")\', \'class D : MyInterface1, MyInterface2 {\', \'override fun doSomthing() {\', \'super<MyInterface1>.doSomthing()\', \'super<MyInterface2>.doSomthing()\', \'override fun absMethod() {\', \'super<MyInterface2>.absMethod()\', \'fun main(args: Array<String>) {\', \'val d = D()\', \'val c = C()\', \'d.doSomthing()\', \'d.absMethod()\', \'c.doSomthing()\', \'c.absMethod()\']','[\'Calling overriding id value = 101\', \'MyInterface doing some work\', \'Implementing abstract method..\', \'overriding doSomthing() of MyInterface1\', \'overriding absMethod() of MyInterface2\', \"Kotlin: Class \'MyClass\' must override public open fun doSomthing(): Unit defined in MyInterface1 because it\", \'inherits multiple interface methods of it\', \'MyInterface 2 doing some work\', \'Implements absMethod() of MyInterface1\', \'Implements absMethod(name) of MyInterface2 name is  Ashu\', \'MyInterface 1 doing some work\', \'MyInterface 2 doing some work\', \'MyInterface 2 absMethod\', \'MyInterface 1 doing some work\', \'MyInterface1 absMethod implementation\']','[]','[\'|||Using interface supports functionality of multiple inheritance.|||It can be used achieve to loose coupling.|||It is used to achieve abstraction.|||\']'),(59,'[\'Kotlin Data class\']','[\'Data class is a simple class which is used to hold data/state and contains standard functionality. A data keyword is used to declare a class as a data class.\']','[\'https://www.javatpoint.com/kotlin-sealed-class\', \'https://www.javatpoint.com/kotlin-interface\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com/kotlin-sealed-class\', \'https://www.javatpoint.com/kotlin-interface\', \'https://www.javatpoint.com/kotlin-sealed-class\']','[]','[]','[\'Requirements of data class\', \'Default and named arguments in data class\']','[\'A compression between Java data class and Kotlin data class\', \'Kotlin data class toString() methods\', \'Kotlin data classequals() and hashCode()\', \'Kotlin data class copy() method\']','[]','[\'Declaring a data class must contains at least one primary constructor with property argument (val or var).\', \'Data class internally contains the following functions:\', \'Due to presence of above functions internally in data class, the data class eliminates the boilerplate code.\', \'If we want to create a User entry in Java using data class, it require lots of boilerplate code.\', \'Calling the constructor of above Java data class using the object of User class as\', \'The above Java data class code is rewritten in Kotlin data code in single line as\', \'Calling the constructor of above Kotlin data class using the object of User class as\', \'In order to create a data class, we need to fulfill the following requirements:\', \'Kotlin data class only focuses on data rather than code implementation.\', \"Let\'s see a simple program without data class. In this class, we are trying to print the reference of Product class using its object. \", \'While printing the reference of Product class, it displays the hashCode() with class name of Product. It does not print the data.\', \"For example, let\'s see an example in which a normal class comparing the two references of same class Product having same data. \", \'The above program is rewritten using data class, printing the reference of Product class and displaying the data of object.\', \'The hashCode() method returns hash code for the object. The hashCode() produce same integer result, if two objects are equal. \', \'For example:\', \'We can also assign the default arguments in primary constructor of data class. These default values can be changed later on program if required.\', \'For example:\']','[\'The above program is rewritten using data class and printing the reference of Product class and displaying the data of object. It happens because the data class internally contains the toString() which display the string representation of object .\', \'The equal() method is used to check other object is \"equal to\" current object. While doing comparison between two or more hashCode(), equals() method returns true if the hashCode() are equal, else it returns a false.\', \'In above program, reference p1 and reference p2 has different references. Due to different reference values in p1 and p2, doing comparison displays false.\', \'The data class provides a copy() method which is used to create a copy (or colon) of object. Using copy() method, some or all properties of object can be altered. \']','[]','[\'data class User(val name: String, val age: Int)\', \'import java.util.Objects;\', \'public class User {\', \'private String name;\', \'private int id;\', \'private String email;\', \'public User(String name, int id, String email) {\', \'this.name = name;\', \'this.id = id;\', \'this.email = email;\', \'public String getName() {\', \'return name;\', \'public void setName(String name) {\', \'this.name = name;\', \'public intgetId() {\', \'return id;\', \'public void setId(int id) {\', \'this.id = id;\', \'public String getEmail() {\', \'return email;\', \'public void setEmail(String email) {\', \'this.email = email;\', \'@Override\', \'public boolean equals(Object o) {\', \'if (this == o) return true;\', \'if (!(o instanceof User)) return false;\', \'User user = (User) o;\', \'return getId() == user.getId() &&\', \'Objects.equals(getName(), user.getName()) &&\', \'Objects.equals(getEmail(), user.getEmail());\', \'@Override\', \'public inthashCode() {\', \'return Objects.hash(getName(), getId(), getEmail());\', \'@Override\', \'public String toString() {\', \'return \"User{\" +\', \'\"name=\'\" + name + \'\\\'\' +\', \'\", id=\" + id +\', \'\", email=\'\" + email + \'\\\'\' +\', \"\'}\';\", \'class MyClass{\', \'public static void main(String agrs[]){\', \'User u = new User(\"Ashu\",101,\"mymail@mail.com\");\', \'System.out.println(u);\', \'data class User(var name: String, var id: Int, var email: String)\', \'fun main(agrs: Array<String>) {\', \'val u = User(\"Ashu\", 101, \"mymail@mail.com\")\', \'println(u)\', \'class Product(varitem: String, var price: Int)\', \'fun main(agrs: Array<String>) {\', \'val p = Product(\"laptop\", 25000)\', \'println(p)\', \'data class Product(varitem: String, var price: Int)\', \'fun main(agrs: Array<String>) {\', \'val p = Product(\"laptop\", 25000)\', \'println(p)\', \'class Product(varitem: String, var price: Int)\', \'fun main(agrs: Array<String>) {\', \'val p1 = Product(\"laptop\", 25000)\', \'val p2 = Product(\"laptop\", 25000)\', \'println(p1==p2)\', \'println(p1.equals(p2))\', \'data class Product(varitem: String, var price: Int)\', \'fun main(agrs: Array<String>) {\', \'val p1 = Product(\"laptop\", 25000)\', \'val p2 = Product(\"laptop\", 25000)\', \'println(p1==p2)\', \'println(p1.equals(p2))\', \'data class Product(var item: String, var price: Int)\', \'fun main(agrs: Array<String>) {\', \'val p1 = Product(\"laptop\", 25000)\', \'println(\"p1 object contain data : $p1\")\', \'val p2 = p1.copy()\', \'println(\"p2 copied object contains default data of p1: $p2\")\', \'val p3 = p1.copy(price = 20000)\', \'println(\"p3 contain altered data of p1 : $p3\")\', \'data class Product(var item: String = \"laptop\", var price: Int = 25000)\', \'fun main(agrs: Array<String>) {\', \'val p1 = Product(price = 20000)\', \'println(p1)\']','[\"User{name=\'Ashu\', id=101, email=\'[emailxa0protected]\'}\", \'User(name=Ashu, id=101, [emailxa0protected])\', \'[emailxa0protected]\', \'Product(name=laptop, price=25000)\', \'false\', \'false\', \'true\', \'true\', \'p1 object contain data : Product(item=laptop, price=25000)\', \'p2 copied object contains default data of p1: Product(item=laptop, price=25000)\', \'p3 contain altered data of p1 : Product(item=laptop, price=20000)\', \'Product(item=laptop, price=20000)\']','[]','[\'|||equals(): Boolean|||hashCode(): Int|||toString(): String|||component() functions corresponding to the properties|||copy()||||||Contain primary constructor with at least one parameter.|||Parameters of primary constructor marked as val or var.|||Data class cannot be abstract, inner, open or sealed.|||Before 1.1,data class may only implements interface. After that data classes may extend other classes.|||\']'),(60,'[\'Kotlin Sealed Class\']','[\'Sealed class is a class which restricts the class hierarchy. A class can be declared as sealed class using \"sealed\" keyword before the class name. It is used to represent restricted class hierarchy. \']','[\'https://www.javatpoint.com/kotlin-extension-function\', \'https://www.javatpoint.com/kotlin-data-class\', \'https://www.javatpoint.com/kotlin-extension-function\', \'https://www.javatpoint.com/kotlin-data-class\', \'https://www.javatpoint.com/kotlin-extension-function\']','[]','[]','[\'Declaration of sealed class\', \'Sealed class with when\']','[]','[]','[\'Sealed class is used when the object have one of the types from limited set, but cannot have any other type.\', \'The constructors of sealed classes are private in default and cannot be allowed as non-private.\', \'The subclasses of sealed classes must be declared in the same file in which sealed class itself. \', \'Sealed class ensures the important of type-safety by restricting the set of types at compile time only.\', \'A sealed class is implicitly an abstract class which cannot be instantiated. \', \'For example:\']','[\'Sealed classes are commonly used with when expression. As the sub classes of sealed classes have their own types act as a case. Due to this, when expression in sealed class covers all the cases and avoid to add else clause. \']','[]','[\'sealed class MyClass\', \'sealed class Shape{\', \'class Circle(var radius: Float): Shape()\', \'class Square(var length: Int): Shape()\', \'class Rectangle(var length: Int, var breadth: Int): Shape()\', \'object NotAShape : Shape()\', \'sealed class A{\', \'class B : A()\', \'class E : A() //this works.\', \'class C : A()\', \'println(\"sealed class A\")\', \'class D : A() //this works\', \"class F: A() //This won\'t work,because sealed class is defined in another scope.\", \'sealed class MyClass\', \'fun main(args: Array<String>)\', \'var myClass = MyClass() //compiler error. sealed types cannot be instantiated.\', \'sealed class Shape{\', \'class Circle(var radius: Float): Shape()\', \'class Square(var length: Int): Shape()\', \'class Rectangle(var length: Int, var breadth: Int): Shape()\', \'fun eval(e: Shape) =\', \'when (e) {\', \'is Shape.Circle ->println(\"Circle area is ${3.14*e.radius*e.radius}\")\', \'is Shape.Square ->println(\"Square area is ${e.length*e.length}\")\', \'is Shape.Rectangle ->println(\"Rectagle area is ${e.length*e.breadth}\")\', \'}\', \'fun main(args: Array<String>) {\', \'var circle = Shape.Circle(5.0f)\', \'var square = Shape.Square(5)\', \'var rectangle = Shape.Rectangle(4,5)\', \'eval(circle)\', \'eval(square)\', \'eval(rectangle)\']','[\'Circle area is 78.5\', \'Square area is 25\', \'Rectagle area is 20\']','[]','[]'),(61,'[\'Kotlin Extension Function\']','[\'Kotlin extension function provides a facility to \"add\" methods to class without inheriting a class or using any type of design pattern. The created extension functions are used as a regular function inside that class.\']','[\'https://www.javatpoint.com/kotlin-generics\', \'https://www.javatpoint.com/kotlin-sealed-class\', \'https://www.javatpoint.com/kotlin-generics\', \'https://www.javatpoint.com/kotlin-sealed-class\', \'https://www.javatpoint.com/kotlin-generics\']','[]','[]','[\'Extension Function as Nullable Receiver\', \'Companion Object Extensions\']','[\'Example of extension function declaration and its use\', \'Kotlin extension function example\', \'Example of companion object\', \'Companion object extensions example\']','[]','[\'The extension function is declared with a prefix receiver type with method name.\', \'In the above declaration, <class_name> is a receiver type and the <method_name>() is an extension function.\', \'The above example only demonstrates about how to declare an extension function. \', \"Let\'s rewrite the above program using extension function as nullable receiver.\", \'A class which contains companion object can also be defined as extension function and property for the companion object.\', \'In this example, we call a create() function declared inside companion object using class name (MyClass) as qualifier.\', \"Let\'s see an example of companion object extensions. The companion object extension is also being called using the class name as the qualifier.\"]','[\'In general, we call all methods from outside the class which are already defined inside the class.In below example, a Student class declares a method is Passed() which is called from main() function by creating the object student of Student class. \', \'The extension function can be defined as nullable receiver type. This nullable extension function is called through object variable even the object value is null. The nullability of object is checked using this == null inside the body. \', \'A companion object is an object which is declared inside a class and marked with the companion keyword. Companion object is used to call the member function of class directly using the class name (like static in java).\']','[\'Suppose that we want to call a method (say isExcellent()) of Student class which is not defined in class. In such situation, we create a function (isExcellent()) outside the Student class as Student.isExcellent() and call it from the main() function. The declare Student.isExcellent() function is known as extension function, where Student class is known as receiver type.\', \"Let\'s see the real example of extension function. In this example, we are swapping the elements of MutableList<> using swap() method. However, MutableList<>class does not provide the swap() method internally which swap the elements of it. For doing this we create an extension function for MutableList<> with swap() function.\", \'The list object call the extension function (MutableList<Int>.swap(index1: Int, index2: Int):MutableList<Int>) using list.swap(0,2) function call. The swap(0,2) function pass the index value of list inside MutableList<Int>.swap(index1: Int, index2: Int):MutableList<Int>) sxtension function.\']','[\'fun <class_name>.<method_name>()\', \'class Student{\', \'fun isPassed(mark: Int): Boolean{\', \'return mark>40\', \'fun Student.isExcellent(mark: Int): Boolean{\', \'return mark > 90\', \'fun main(args: Array<String>){\', \'val student = Student()\', \'val passingStatus = student.isPassed(55)\', \'println(\"student passing status is $passingStatus\")\', \'val excellentStatus = student.isExcellent(95)\', \'println(\"student excellent status is $excellentStatus\")\', \'fun MutableList<Int>.swap(index1: Int, index2: Int):MutableList<Int> {\', \"val tmp = this[index1] // \'this\' represents to the list\", \'this[index1] = this[index2]\', \'this[index2] = tmp\', \'return this\', \'fun main(args: Array<String>) {\', \'val list = mutableListOf(5,10,15)\', \'println(\"before swapping the list :$list\")\', \'val result = list.swap(0, 2)\', \'println(\"after swapping the list :$result\")\', \'funMutableList<Int>?.swap(index1: Int, index2: Int): Any {\', \'if (this == null) return \"null\"\', \'else  {\', \"val tmp = this[index1] // \'this\' represents to the list\", \'this[index1] = this[index2]\', \'this[index2] = tmp\', \'return this\', \'fun main(args: Array<String>) {\', \'val list = mutableListOf(5,10,15)\', \'println(\"before swapping the list :$list\")\', \'val result = list.swap(0, 2)\', \'println(\"after swapping the list :$result\")\', \'class MyClass {\', \'companion object {\', \'fun create():String{\', \'return \"calls create method of companion object\"\', \'}\', \'fun main(args: Array<String>){\', \'val instance = MyClass.create()\', \'class MyClass {\', \'companion object {\', \'fun create(): String {\', \'return \"calling create method of companion object\"\', \'}\', \'fun MyClass.Companion.helloWorld() {\', \'println(\"executing extension of companion object\")\', \'fun main(args: Array<String>) {\', \'MyClass.helloWorld() //extension function declared upon the companion object\']','[\'student passing status is true\', \'student excellent status is true\', \'before swapping the list :[5, 10, 15]\', \'after swapping the list :[15, 10, 5]\', \'before swapping the list :[5, 10, 15]\', \'after swapping the list :[15, 10, 5]\', \'calls create method of companion object\', \'executing extension of companion object\']','[]','[]'),(62,'[\'Kotlin Generics\']','[\'Generics are the powerful features that allow to define classes, methods, and properties etc. which can be accessed using different types. The type differences of classes, methods, etc. are checked at compile-time.\']','[\'https://www.javatpoint.com/kotlin-integer-range\', \'https://www.javatpoint.com/kotlin-extension-function\', \'https://www.javatpoint.com/kotlin-integer-range\', \'https://www.javatpoint.com/kotlin-extension-function\', \'https://www.javatpoint.com/kotlin-integer-range\']','[]','[]','[\'Advantage of Generics\']','[\'Kotlin generic example\', \'Kotlin generic extension function example\']','[]','[\'Following are the key advantages of using generics:\', \"Let\'s see a problem without using the generics.\", \'To solve the above problem, we use a generic type class which is a user defined class that accepts different type of parametersin single class.\', \'Syntax of generic class\', \'Syntax of generic method\', \'As extension function allows to add methods to class without inherit a class or any design pattern.\']','[\'The generic type class or method is declared as parameterized type. A parameterized type is an instance of generic type with actual type arguments. The parameterized types are declared using angle brackets <> Generics are mostly used in collections.\', \"Let\'s rewrite the above code using generic type. A class Person of type <T> is a general type class that accepts both Int and String types of parameter.\", \'In other words, the type parameter <T> is a place holder that will be replaced by type argument. It will be replaced when the generic type is instantiated.\', \'In above example, when the object of Person class is created using type Int as Person<Int>(30) and Person<String>(\"40\"), it replaces the Person class of type T with Int and String respectively.\']','[\'In this example, we create a Person class with primary constructor having single parameter. Now, we want to pass the different type of data in object of Person class (say Int type as Person(30) and String type as Person(\"40\")). The primary constructor of Person class accept Int type Person(30) and regrets String type Person(\"40\"). It generates a compile time error as type mismatch.\', \'Let\'s see an example of generic method. In this example, we are accessing the generic method of collection type (ArrayList). For doing this, we create two different objectsof ArrayList class arrayListOf<String>(\"Ashu\",\"Ajay\") and arrayListOf<Float>(10.5f,5.0f,25.5f) of String and Float types respectively. When we call the generic method <T>printValue(list: ArrayList<T>) using printValue(stringList), the type T of method <T>printValue(list: ArrayList<T>)will be replaced by String type. Similarly, when we call the generic method using printValue(floatList), the type T of method <T>printValue(list: ArrayList<T>) will replace by Float type.\', \'In this example, we add a method printValue()to ArrayList class of generic type. This method is called form stringList.printValue() and floatList.printValue()of String and Float types respectively. As \"this\" keyword in extension function represent the current calling instance. When we call the extension function using stringList.printValue(), the this represents stringList instance containing String type values. Similarly, calling the extension function using floatList.printValue(), the this represents floatList instance containing Float type values.\']','[\'class Person (age:Int){\', \'var age: Int = age\', \'this.age= age\', \'println(age)\', \'fun main(args: Array<String>){\', \'var ageInt: Person = Person(30)\', \'var ageString: Person = Person(\"30\")// compile time error\', \'class Person<T>(age: T){\', \'var age: T = age\', \'this.age= age\', \'println(age)\', \'fun main(args: Array<String>){\', \'var ageInt: Person<Int> = Person<Int>(30)\', \'var ageString: Person<String> = Person<String>(\"40\")\', \'class_or_interface<Type>\', \'<Type>methodName(parameter: classType<Type>)\', \'fun main(args: Array<String>){\', \'val stringList: ArrayList<String> = arrayListOf<String>(\"Ashu\",\"Ajay\")\', \'val s: String = stringList[0]\', \'println(\"printing the string value of stringList: $s\")\', \'printValue(stringList)\', \'val floatList: ArrayList<Float> = arrayListOf<Float>(10.5f,5.0f,25.5f)\', \'printValue(floatList)\', \'fun <T>printValue(list: ArrayList<T>){\', \'for(element in list){\', \'println(element)\', \'fun main(args: Array<String>){\', \'val stringList: ArrayList<String> = arrayListOf<String>(\"Ashu\",\"Ajay\")\', \'stringList.printValue()\', \'val floatList: ArrayList<Float> = arrayListOf<Float>(10.5f,5.0f,25.5f)\', \'floatList.printValue()\', \'fun <T>ArrayList<T>.printValue(){\', \'for(element in this){\', \'println(element)\']','[\'30\', \'40\', \'printing the string value of stringList: Ashu\', \'Ashu\', \'Ajay\', \'10.5\', \'5.0\', \'25.5\', \'Ashu\', \'Ajay\', \'10.5\', \'5.0\', \'25.5\']','[]','[\'|||Type-safety: Generic allows to hold only single type of object. Generic does not allow to store other object.|||Type casting is not required: There is no need to typecast the object.|||Compile time checking: Generics code is checked at compile time so that it can avoid any problems at runtime.|||\']'),(63,'[\'Kotlin Ranges\']','[\'Kotlin range is defined as an interval from start value to the end value. Range expressions are created with operator (. .) which is complemented by in and !in. The value which is equal or greater than start value and smaller or equal to end value comes inside the defined range.\']','[\'https://www.javatpoint.com/kotlin-working-of-ranges\', \'https://www.javatpoint.com/kotlin-generics\', \'https://www.javatpoint.com/kotlin-working-of-ranges\', \'https://www.javatpoint.com/kotlin-generics\', \'https://www.javatpoint.com/kotlin-working-of-ranges\']','[]','[]','[\'Integral Type Ranges\', \'Kotlin range of integer\', \'Kotlin range of characters\', \'Kotlin range step\', \'Kotlin range iterator\']','[\'Example of Kotlin range\', \'until range\']','[]','[\'What happened when we try to iterate a r range in decreasing order using . . operator ? This will print nothing.\', \'To iterate the element in decreasing order, use the standard library downTo() function or downTo keyword.\', \'The until() function or until keyword in range is used to exclude the last element. It iterates range from start to 1 less than end. \', \'The above range excludes 5 and iterate from 1 to 4.\', \"Let\'s see an example of integer range using downTo(), downTo, and rangeTo() methods.\", \'Example of Kotlin ranges using char data types.\', \'Kotlin step keyword in range is used to iterate the range in the interval of given step value (int value).\']','[\"While evaluating the above code val aToZ = \'a\'..\'z\'as \'a\'in aToZ returns true, \'b\' in aToZ returns true and so on. The code val oneToNine = 1..9 evaluates as 1 in oneToNine returns true, but the evaluation 10 in oneToNine returns false.\", \"Integral type ranges (IntRange, LongRange, CharRange) are the ability to use in for loop. The compiler converts this integral type in simple analogue of Java\'s index for-loop.\", \'An iterator() method is also be used to iterate the range value. It uses hasNext() method which checks the next element in the range and next() method returns the next element of the range.\']','[]','[\"val aToZ = \'a\'..\'z\'\", \'val oneToNine = 1..9\', \'fun main(args: Array<String>) {\', \'for (a in 1..5){\', \'print(a )\', \'println()\', \"for(x in \'a\'..\'f\'){\", \'print(x )\', \'println()\', \'val range = 1.0..5.0\', \'println(range)\', \'println(\"3.14 in range is ${3.14 in range}\")\', \'for (a in 5 downTo 1){\', \'print(a )// 54321\', \'for (a in 1 until 5){\', \'print(a ) // print 1234\', \'fun main(args: Array<String>) {\', \'for (x in 1..5)\', \'print(x)\', \'println()\', \'for (x in 5 downTo 1)\', \'print(x)\', \'println()\', \'for (x in 1.rangeTo(5))\', \'print(x)\', \'println()\', \'for (x in 5.downTo(1))\', \'print(x)\', \'println()\', \'fun main(args: Array<String>) {\', \"for (x in \'a\'..\'e\')\", \'print(\"$x \")\', \'println()\', \"for (x in \'e\' downTo \'a\')\", \'print(\"$x \")\', \'fun main(args: Array<String>) {\', \'for (x in 1..10 step 2)\', \'print(\"$x \")\', \'println()\', \'for (x in 10 downTo 1 step 3)\', \'print(\"$x \")\', \'fun main(args: Array<String>) {\', \"val chars = (\'a\'..\'e\')\", \'val it = chars.iterator()\', \'while (it.hasNext()) {\', \'val x = it.next()\', \'print(\"$x \")\']','[\'12345\', \'abcdef\', \'1.0..5.0\', \'3.14 in range is true\', \'for (a in 5..1){\', \'print(a )// print nothing\', \'}\', \'12345\', \'54321\', \'12345\', \'54321\', \'a bcde\', \'edcba\', \'1 3 5 7 9\', \'10 7 4 1\', \'a b c d e\']','[]','[]'),(64,'[\'Working of ranges\']','[\'Ranges implement ClosedRange<T> a common interface in the library. It represents a closed mathematical interval defined for comparable types. It contains two endpoints as start and end (endInclusive)points. The operation performed in range is to check whether the element is contained in it or not. This is done by using in or !in operators.\']','[\'https://www.javatpoint.com/kotlin-utility-functions\', \'https://www.javatpoint.com/kotlin-integer-range\', \'https://www.javatpoint.com/kotlin-utility-functions\', \'https://www.javatpoint.com/kotlin-integer-range\', \'https://www.javatpoint.com/kotlin-utility-functions\']','[]','[]','[]','[]','[]','[]','[\'Progression refers to subtype of Iterable<N>, where N is Char, Int or Long. As progression is Iterable<N> type it can be used in for-loop and function such as filter, map etc.\', \'The last element of the Progression is largest value not greater than the end value for positive step. The minimum value of progression is not less than the end value for negative step. The last value is checked by using (last-first) %step == 0.\']','[\'An arithmetic progression is represented by integral type progressions such as CharProgression, IntProgression, Long Progression. Progressions represent the first element, the last element and the step which is non-zero. The first element is first, sub-sequent elements represent previous element plus step and the last element is the last element unless progression is completed.\', \'The . .operator creates an object for integral type which implements both ClosedRange<T> and Progression. For example, a range type LongRange implements ClosedRange<Int> and extends Long Progression, it means all the operation which are defined for LongProgression is also available for LongRange. The output generated by downTo() and step() functions is always a Progression.\']','[]','[]','[]','[]'),(65,'[\'Kotlin Utility Functions\']','[\'Kotlin range utility functions have several standard library functions which are used in Kotlin ranges. These utility functions are as follow:\']','[\'https://www.javatpoint.com/kotlin-java-interoperability-calling-java-from-kotlin\', \'https://www.javatpoint.com/kotlin-working-of-ranges\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-java-from-kotlin\', \'https://www.javatpoint.com/kotlin-working-of-ranges\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-java-from-kotlin\']','[]','[]','[\'Kotlin rangeTo()\', \'Kotlin downTo()\', \'Kotlin reversed()\', \'Kotlin step()\']','[\'Example of rangeTo() function\', \'Example of reversed() function\', \'Example of step() function\']','[]','[\'The data types (or types) which are floating point like Double, Float are not define in rangeTo operator.\', \'Example of downTo() function\', \'The reversed() function is used to return the reversed order of the given range type.\', \'If we provide step value as a negative integer it throws an exception.\']','[\'The rangeTo() function is used to return the value from start to end in increasing order mentioned in a range. The rangeTo() function is integral types which calls the constructors of Range class.\', \'The downTo() extension function is used to return the value in decreasing order mention from higher order to lower order. The downTo() function is defined for pair of integral types.\', \'The step() function ( or step operator) is used to return the range value in interval of given step value. A step value always takes a positive parameter. The negative step value generates the IllegalArgumentException exception.\']','[]','[\'fun main(args: Array<String>) {\', \'var range: IntRange = 1.rangeTo(5)\', \'println(\"Printing value: 1.rangeTo(5)\")\', \'for (x in range){\', \'print(\"$x \")\', \'println(\"\")\', \'var range2: IntRange = IntRange(1,5)\', \'println(\"Printing value: IntRange(1,5)\")\', \'for (x in range2){\', \'print(\"$x \")\', \'fun Long.downTo(other: Int): LongProgression {\', \'return LongProgression.fromClosedRange(this, other.toLong(), -1L)\', \'fun Byte.downTo(other: Int): IntProgression {\', \'return IntProgression.fromClosedRange(this.toInt(), other, -1)\', \'fun main(args: Array<String>) {\', \'println(\"Range 1\")\', \'var range1 = 5 downTo 1\', \'for (x in range1){\', \'print(\"$x \")\', \'println()\', \'println(\"Range 2\")\', \'var range2: IntProgression = 5.downTo(1)\', \'for (x in range2){\', \'print(\"$x \")\', \'println()\', \'println(\"Range 3\")\', \'var range3: IntProgression = IntProgression.fromClosedRange(5,1,-1)\', \'for (x in range3){\', \'print(\"$x \")\', \'fun IntProgression.reversed(): IntProgression {\', \'return IntProgression.fromClosedRange(last, first, -step)\', \'fun main(args: Array<String>) {\', \'println(\"Reversed 1\")\', \'var range1 = 1..5\', \'for (x in range1.reversed()){\', \'print(\"$x \")\', \'println()\', \'println(\"Reversed 2\")\', \'var range2: IntRange = IntRange(1,5)\', \'for (x in range2.reversed()){\', \'print(\"$x \")\', \'println()\', \'println(\"Reversed 3\")\', \'var range3 = IntProgression.fromClosedRange(5,1,-1)\', \'for (x in range3.reversed()){\', \'print(\"$x \")\', \'println()\', \'println(\"Reversed 4\")\', \'var range4: IntProgression = IntProgression.fromClosedRange(5,1,-2)\', \'for (x in range4.reversed()){\', \'print(\"$x \")\', \'fun main(args: Array<String>) {\', \'val range: IntRange = 1..10\', \'println(\"Print range value with step 2:\")\', \'for(x in range step (2)){\', \'print(\"$x \")\', \'println(\"\")\', \'println(\"Print range value with step 3:\")\', \'for(x in range step 3){\', \'print(\"$x \")\', \'val first=((range step 2).first)\', \'val last=((range step 2).last)\', \'println(\"\")\', \'println(\"First value of interval: $first\")\', \'println(\"Last value of interval: $last \")\', \'fun main(args: Array<String>) {\', \'val range: IntRange = IntRange(1,10)\', \'for (x in range step -2){\', \'print(\"$x \")\']','[\'Printing value: 1.rangeTo(5)\', \'1 2 3 4 5\', \'Printing value: IntRange(1,5)\', \'1 2 3 4 5\', \'Range 1\', \'5 4 3 2 1\', \'Range 2\', \'5 4 3 2 1\', \'Range 3\', \'5 4 3 2 1\', \'Reversed 1\', \'5 4 3 2 1\', \'Reversed 2\', \'5 4 3 2 1\', \'Reversed 3\', \'1 2 3 4 5\', \'Reversed 4\', \'1 3 5\', \'Print range value with step 2:\', \'1 3 5 7 9\', \'Print range value with step 3:\', \'1 4 7 10\', \'First value of interval: 1\', \'Last value of interval: 9\', \'Exception in thread \"main\" java.lang.IllegalArgumentException: Step must be positive, was: -2.\', \'at kotlin.ranges.RangesKt__RangesKt.checkStepIsPositive(Ranges.kt:130)\', \'at kotlin.ranges.RangesKt___RangesKt.step(_Ranges.kt:432)\', \'at TestKt.main(Test.kt:63)\']','[]','[\'|||rangeTo()|||downTo()|||reversed()|||step()|||\']'),(66,'[\'Java Interoperability\']','[\'Kotlin code is fully compatible with Java code. The existing Java code can be easily called form Kotlin code and Kotlin code is also called from Java code in normal way. \']','[\'https://www.javatpoint.com/kotlin-java-interoperability-calling-kotlin-from-java\', \'https://www.javatpoint.com/kotlin-utility-functions\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-kotlin-from-java\', \'https://www.javatpoint.com/kotlin-utility-functions\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-kotlin-from-java\']','[]','[]','[\'Calling Java code from Kotlin\', \'Kotlin code calling Java class present inside package\', \'Kotlin code access Java getter and setter\', \'Kotlin code access Java array\', \'Kotlin code access Java Varargs\', \'Kotlin and Java Mapped types\']','[\'Calling Java void method form Kotlin file\', \'Calling Java int method from Kotlin file\']','[]','[\'MyKotlinFile.kt\', \'MyJavaClass.java\', \'MyKotlinFile.kt\', \'MyJavaClass.java\', \'MyKotlinFile.kt\', \'MyJavaClass.java\', \'MyJava.java\', \'MyKotlin.kt\', \'MyJava.java\', \'MyKotlin.kt\', \'Following points are to be kept while using the varargs parameter:\', \'While accessing the Java varargs from Kotlin we need to use spread operator * to pass the array.\', \"Let\'s see an example in which a Java method uses an int type varargs which is called from Kotlin file.\", \'MyJava.java\', \'MyKotlin.kt\', \"Let\'s see another example which takes two parameter in a Java method uses as parameters of String type and int type varargs called from Kotlin file.\", \'MyJava.java\', \'MyKotlin.kt\', \"Java\'s primitive types to corresponding Kotlin types\", \"Java\'s non-primitive types to corresponding Kotlin types\", \"Java\'s boxed primitive types to corresponding nullableKotlin types\", \"Java\'s collection types to corresponding read-only or mutable Kotlin types\"]','[\'While calling a java code from Kotlin whose return types is void, it will return Unit in Kotlin file. If someone wants to return that value, it will assign to Kotlin file by Kotlin compiler and return Unit. For example:\', \'While calling a java code of int type or other (rather than void) from Kotlin file, it returns the result in same types. For example, calling an area() method of Java class from Kotlin file returns result in int type.\', \'If we want to call the Java codes from Kotlin file both present inside the different package, this requires to import the package name with Java class inside Kotlin file.\', \'In the Java varags functionality, we can pass any number of arguments to a method. Java varargs parameter is defined using ellipsis i.e. three dots (...) after data type. \', \'Kotlin and Java types are mapped differently, however they are mapped to corresponding types. Mapping of these types are matters only at compile time and run time remains unchanged.\']','[\'For example, a Java class MyJavaClass.java is present inside a package myjavapackageand a Kotlin file MyKotlinFile.kt is present inside mykotlinpackage package. In such case calling Java code from Kotlin file needs to import myjavapackage.MyJavaClass inside Kotlin file.\', \'As Kotlin is completely interoperability with Java, we can access the getter and setter functionality of Java class (or POJO class). For example, create a getter and setter method in Java class MyJava.java with properties firstName and lastName. These properties are accessed from a Kotlin file MyKotlin.kt by creation object of MyJava.java in Kotlin file.\', \'We can simply call Java class method which takes array as an argument from Kotlin file. For example, create method sumValue() which takes array element as parameter in Java class MyJava.java calculating addition and returns result. This method is called from Kotlin file MyKotlin.kt by passing array as parameter.\']','[\'fun main(args: Array<String>) {\', \'val sum= MyJavaClass.add(5, 10)\', \'println(\"printing sum inside Kotlin file: \"+sum)\', \'public class MyJavaClass {\', \'public static void main(String[] args){\', \'public static void add(inta,int b){\', \'int result = a + b;\', \'System.out.println(\"printing inside Java class :\"+result);\', \'fun main(args: Array<String>) {\', \'val area: Int = MyJavaClass.area(3, 4)\', \'println(\"printing area from java insideKotlin file: \"+area)\', \'public class MyJavaClass {\', \'public static void main(String[] args){\', \'public static int area(int l, int b){\', \'int result = l * b;\', \'return result;\', \'package mykotlinpackage\', \'import myjavapackage.MyJavaClass\', \'fun main(args: Array<String>) {\', \'val area: Int = MyJavaClass.area(3, 4)\', \'println(\"printing area from java inside Kotlin file: \"+area)\', \'package myjavapackage;\', \'public class MyJavaClass {\', \'public static void main(String[] args){\', \'public static int area(int l, int b){\', \'int result = l * b;\', \'return result;\', \'public class MyJava{\', \'protected String firstName;\', \'protected String lastName;\', \'public String getfirstName() {\', \'return firstName;\', \'public void setfirstName(String firstName) {\', \'this.firstName = firstName;\', \'public String getlastName() {\', \'return lastName;\', \'public void setlastName(String lastName) {\', \'this.lastName = lastName;\', \'fun main(args: Array<String>) {\', \'val myJava = MyJava()\', \'myJava.lastName = \"Kumar\"\', \'myJava.setfirstName(\"Arjun\")\', \'println(\"accessing value using property: \"+myJava.firstName)\', \'println(\"accessing value using property: \"+myJava.lastName)\', \'println(\"accessing value using method: \"+myJava.getfirstName())\', \'println(\"accessing value using method: \"+myJava.getlastName())\', \'public class MyJava {\', \'public intsumValues(int[] nums) {\', \'int result = 0;\', \'for (int x:nums) {\', \'result+=x;\', \'}\', \'return result;\', \'fun main(args: Array<String>){\', \'val myJava = MyJava()\', \'val numArray = intArrayOf(1, 2, 3,4,5)\', \'val sum = myJava.sumValues(numArray)\', \'println(sum)\', \'public class MyJava {\', \'public void display(int... values) {\', \'for (int s : values) {\', \'System.out.println(s);\', \'}\', \'fun main(args: Array<String>){\', \'val myJava = MyJava()\', \'val array = intArrayOf(0, 1, 2, 3)\', \'myJava.display(*array)\', \'public class MyJava {\', \'public void display(String message,int... values) {\', \'System.out.println(\"string is \" + message);\', \'for (int s : values) {\', \'System.out.println(s);\', \'}\', \'fun main(args: Array<String>){\', \'val myJava = MyJava()\', \'val array = intArrayOf(0, 1, 2, 3)\', \'myJava.display(\"hello\",*array)\']','[\'printing inside Java class :15\', \'printing sum inside Kotlin file: kotlin.Unit\', \'printing area from java insideKotlinfile: 12\', \'printing area from java inside Kotlin file: 12\', \'accessing value using property: Arjun\', \'accessing value using property: Kumar\', \'accessing value using method: Arjun\', \'accessing value using method: Kumar\', \'sum of array element is 15\', \'0\', \'1\', \'2\', \'3\', \'string is hello\', \'0\', \'1\', \'2\', \'3\']','[\'Java type|||Kotlin type&&&byte|||kotlin.Byte&&&short|||kotlin.Short&&&int|||kotlin.Int&&&long|||kotlin.Long&&&char|||kotlin.Char&&&double|||kotlin.Double&&&boolean|||kotlin.Boolean\', \'Java type|||Kotlin type&&&java.lang.Object|||kotlin.Any!&&&java.lang.Cloneable|||kotlin.Cloneable!&&&java.lang.Comparable|||kotlin.Comparable!&&&java.lang.Enum|||kotlin.Enum!&&&java.lang.Annotation|||kotlin.Annotation!&&&java.lang.Deprecated|||kotlin.Deprecated!&&&java.lang.CharSequence|||kotlin.CharSequence!&&&java.lang.String|||kotlin.String!&&&java.lang.Number|||kotlin.Number!&&&java.lang.Throwable|||kotlin.Throwable!\', \'Java type|||Kotlin type&&&java.lang.Byte|||kotlin.Byte?&&&java.lang.Short|||kotlin.Short?&&&java.lang.Integer|||kotlin.Int?&&&java.lang.Long|||kotlin.Long?&&&java.lang.Character|||kotlin.Char?&&&java.lang.Float|||kotlin.Float?&&&java.lang.Double|||kotlin.Double?&&&java.lang.Boolean|||kotlin.Boolean?\', \'Java type|||Kotlin read-only type|||Kotlin mutable type&&&Iterator<T>|||Iterator<T>|||MutableIterator<T>&&&Iterable<T>|||Iterable<T>|||MutableIterable<T>&&&Collection<T>|||Collection<T>|||MutableCollection<T>&&&Set<T>|||MutableSet<T>|||MutableSet<T>&&&List<T>|||MutableList<T>|||MutableList<T>&&&ListIterator<T>|||ListIterator<T>|||MutableListIterator<T>&&&Map<K, V>|||Map<K, V>|||MutableMap<K, V>&&&Map.Entry<K, V>|||Map.Entry<K, V>|||MutableMap.MutableEntry<K, V>\']','[\'|||There is only one varargs parameter in a method.|||Varargsagrument must be at the last argument.|||\']'),(67,'[\'Java Interoperability: Calling Kotlin code from Java\']','[\'As Kotlin is completely compatible with Java language. It means the application written in Java code can be easily called from Kotlin. In the similar way ,Kotlin code is also called from Java code.\']','[\'https://www.javatpoint.com/kotlin-regular-expressions-introduction\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-java-from-kotlin\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com/kotlin-regular-expressions-introduction\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-java-from-kotlin\', \'https://www.javatpoint.com/kotlin-regular-expressions-introduction\']','[]','[]','[\'How a simple Kotlin program internally looks like.\', \'Calling Kotlin code from Java code\', \'Java code calling Kotlin file present inside package \', \'Changing the Kotlin file name using annotation @JvmName\', \'Calling method of multiple file having same generated Java class name [emailxa0protected]\', \'Kotlin property access throughconst modifier\']','[]','[]','[\"Before discussing how to call Kotlin code from Java code, let\'s see how Kotlin file internally looks like.\", \"Let\'s create a simple main function in a MyKotlin.kt file.\", \'After compiling the above Kotlin file MyKotlin.kt which internally looks like:\', \'MyKotlin.kt\', \'MyJava.java\', \'MyKotlin.kt\', \'MyJava.java\', \'A Kotlin file name can be changed as wrapper class name using @JvmName annotation.\', \'MyKotlin.kt\', \'MyJava.java\', \'MyKotlin1.kt\', \'MyKotlin2.kt\', \'MyJava.java\', \'MyKotlin.kt\', \'MyJava.java\']','[\'The Kotlin properties which are annotated with const modifier in the top level as well as in class are converted into static fields in Java. These properties are access from Java file as static properties called. For example:\']','[\'The Kotlin compiler internally adds a wrapper class with naming convention MyKotlinKt. The Kotlin file MyKotlin.kt is converted into MyKotlinKt and it is public in default. The default modifier of high level function is public and function is converted into static as default. As the return type is Unit in MyKotlin.kt, it is converted into void in MyKotlinKt.\', \'If we want to call the Kotlin code from Java class both present inside the different packages, this requires to import the package name with Kotlin file name inside Java class and calling the Kotlin code from Java class. Another way is to give full path as packageName.KotlinFileKt.methodName().\', \'Write a Kotlin code and place annotation @file: JvmName(\"MyKotlinFileName\") at the top. After compiling Kotlin code, the file name is changed into the name provided inside annotation (in my caseMyKotlinFileName). While accessing the code of MyKotlin.kt we require to use the file name as MyKotlinFileName.\', \"If the Kotlin\'s multiple files having same generated Java file name using @JvmName annotation, normally give error while calling from Java file. However, Kotlin compiler generates single Java façade class which contains generated Java file and all the declarations of the files which have same names. To active this generation façade, we use @JvmMultifileClass annotation in all the files.\"]','[\'fun main(args: Array<String>){\', \'fun area(l: Int,b: Int):Int{\', \'return l*b\', \'public class MyKotlinKt{\', \'public static void main(String[] args){\', \'}\', \'public static int area(int l, int b){\', \'return l*b;\', \'}\', \'fun main(args: Array<String>){\', \'fun area(l: Int,b: Int):Int{\', \'return l*b\', \'public class MyJava {\', \'public static void main(String[] args) {\', \'int area = MyKotlinKt.area(4,5);\', \'System.out.print(\"printing area inside Java class returning from Kotlin file: \"+area);\', \'package mykotlinpackage\', \'fun main(args: Array<String>) {\', \'fun area(l: Int,b: Int):Int{\', \'return l*b\', \'package myjavapackage;\', \'import mykotlinpackage.MyKotlinFileKt;\', \'public class MyJavaClass {\', \'public static void main(String[] args){\', \'int area = MyKotlinKt.area(4,5);\', \'System.out.println(\"printing area inside Java class returning from Kotlin file: \"+area);\', \'@file: JvmName(\"MyKotlinFileName\")\', \'package mykotlinpackage\', \'fun main(args: Array<String>) {\', \'fun area(l: Int,b: Int):Int{\', \'return l*b\', \'package myjavapackage;\', \'import mykotlinpackage.MyKotlinFileName;\', \'public class MyJavaClass {\', \'public static void main(String[] args){\', \'int area = MyKotlinFileName.area(4,5);\', \'System.out.println(\"printing area inside Java class returning from Kotlin file: \"+area);\', \'@file: JvmName(\"MyKotlinFileName\")\', \'@file:JvmMultifileClass\', \'package mykotlinpackage\', \'fun main(args: Array<String>) {\', \'fun area(l: Int,b: Int):Int{\', \'return l*b\', \'@file: JvmName(\"MyKotlinFileName\")\', \'@file:JvmMultifileClass\', \'package mykotlinpackage\', \'fun volume(l: Int,b: Int,h: Int):Int{\', \'return l*b*h\', \'package myjavapackage;\', \'import mykotlinpackage.MyKotlinFileName;\', \'public class MyJavaClass {\', \'public static void main(String[] args){\', \'int area = MyKotlinFileName.area(4,5);\', \'System.out.println(\"printing area inside Java class returning from Kotlin file: \"+area);\', \'int vol = MyKotlinFileName.volume(4,5,6);\', \'System.out.println(\"printing volume inside Java class returning from Kotlin file: \"+vol);\', \'constval MAX = 239\', \'object Obj {\', \'constval CONST = 1\', \'class C {\', \'companion object {\', \'constval VERSION = 9\', \'public class MyJava {\', \'public static void main(String[] args) {\', \'int c = Obj.CONST;\', \'int m = MyKotlinKt.MAX;\', \'int v = C.VERSION;\', \'System.out.println(\"const \"+c+\"\\nmax \"+m+\"\\nversion \"+v);\']','[\'printing area inside Java class returning from Kotlin file: 20\', \'printing area inside Java class returning from Kotlin file: 20\', \'printing area inside Java class returning from Kotlin file: 20\', \'printing area inside Java class returning from Kotlin file: 20\', \'printing volume inside Java class returning from Kotlin file: 120\', \'const 1\', \'max 239\', \'version 9\']','[]','[]'),(68,'[\'Kotlin Regex\']','[\"Regex is generally refers to regular expression which is used to search string or replace on regex object. To use it functionality we need to use Regex(pattern: String) class. Kotlin\'sRegex class is found in kotlin.text.regex package.\"]','[\'https://www.javatpoint.com/kotlin-regex-pattern\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-kotlin-from-java\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com/kotlin-regex-pattern\', \'https://www.javatpoint.com/kotlin-java-interoperability-calling-kotlin-from-java\', \'https://www.javatpoint.com/kotlin-regex-pattern\']','[]','[]','[\'Kotlin Regex Constructor\', \'Regex Functions\']','[\'Example of Regex class checking contains of input pattern\', \'Regex example of containsMatchIn()\', \'Regex example of matches(input: CharSequence): Boolean\', \'Regex example of matchEntire(input: CharSequence): MatchResult?\', \'Regex example offind(input: CharSequence, startIndex: Int = 0): MatchResult?\', \'Regex example offindAll(input: CharSequence, startIndex: Int = 0): Sequence<MatchResult>\', \'Regex example ofreplace(input: CharSequence, replacement: String): String\', \'Regex example ofreplaceFirst(input: CharSequence, replacement: String): String\', \'Regex example ofsplit(input: CharSequence, limit: Int = 0): List<String>\']','[]','[\'The matches(input: CharSequence): Booleanfunction of regex checksall input character sequence matches in regular expression.\', \'The matchEntire() function is used to match complete input character from the pattern.\', \'The find function is used to find the input character sequence from regex object. \', \'The findAll() function of regex returns sequence of match result on the basis of pattern provided.\', \'Regex replace() function replaces the all the matching pattern from input character sequence with specified replacement string.\', \'Regex replaceFirst() function replaces the first occurrence of matching pattern from input character sequence with specified replacement string.\', \'The regex split() function splits input character sequence according to pattern provided. This splits value are returned in List.\']','[\'The result of Regex function is based on matching regex pattern and the input string. Some function checks partial match while some checks full match.\']','[]','[\'fun main(args: Array<String>){\', \'val regex = Regex(pattern = \"ko\")\', \'val matched = regex.containsMatchIn(input = \"kotlin\")\', \'println(matched)\', \'fun main(args: Array<String>){\', \'val regex = \"\"\"a([bc]+)d?\"\"\".toRegex()\', \'val matched = regex.containsMatchIn(input = \"xabcdy\")\', \'println(matched)\', \'fun main(args: Array<String>){\', \'val regex = \"\"\"a([bc]+)d?\"\"\".toRegex()\', \'val matched1 = regex.matches(input = \"xabcdy\")\', \'val matched2 = regex.matches(input = \"xabcdyabcd\")\', \'val matched3 = regex.matches(input = \"abcd\")\', \'println(matched1)\', \'println(matched2)\', \'println(matched3)\', \'fun main(args: Array<String>){\', \'val regex = Regex(\"abcd\")\', \'val matchResult1 = regex.matchEntire(\"abcd\")?.value\', \'val matchResult2 = regex.matchEntire(\"abcda\")?.value\', \'val matchResult3 = Regex(\"\"\"\\d+\"\"\").matchEntire(\"100\")?.value\', \'val matchResult4 = Regex(\"\"\"\\d+\"\"\").matchEntire(\"100 dollars\")?.value\', \'println(matchResult1)\', \'println(matchResult2)\', \'println(matchResult3)\', \'println(matchResult4)\', \'fun main(args: Array<String>){\', \'val emailParttern = Regex(\"\"\"\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,6}\"\"\")\', \'val email :String? = emailParttern.find(\"this is my email mymail@google.com\")?.value\', \'println(email)\', \'val phoneNumber :String? = Regex(pattern = \"\"\"\\d{3}-\\d{3}-\\d{4}\"\"\")\', \'.find(\"phone: 123-456-7890, e..\")?.value\', \'println(phoneNumber)\', \'fun main(args: Array<String>){\', \'val foundResults = Regex(\"\"\"\\d+\"\"\").findAll(\"ab12cd34ef 56gh7 8i\")\', \'val result = StringBuilder()\', \'for (findText in foundResults) {\', \'result.append(findText.value + \" \")\', \'println(result)\', \'fun main(args: Array<String>){\', \'val replaceWith = Regex(\"beautiful\")\', \'val resultString = replaceWith.replace(\"this picture is beautiful\",\"awesome\")\', \'println(resultString)\', \'fun main(args: Array<String>){\', \'val replaceWith = Regex(\"beautiful\")\', \'val resultString = replaceWith.replaceFirst(\"nature is beautiful, beautiful is nature\",\"awesome\")\', \'println(resultString)\', \'fun main(args: Array<String>){\', \'val splitedValue = Regex(\"\"\"\\d+\"\"\").split(\"ab12cd34ef\")\', \'val nonsplited= Regex(\"\"\"\\d+\"\"\").split(\"nothing match to split\" )\', \'println(splitedValue)\', \'println(nonsplited)\']','[\'true\', \'true\', \'false\', \'false\', \'true\', \'abcd\', \'null\', \'100\', \'null\', \'[emailxa0protected]\', \'123-456-7890\', \'12 34 56 7 8\', \'this picture is awesome\', \'nature is awesome, beautiful is nature\', \'[ab, cd, ef]\', \'[nothing match to split]\']','[\'Regex(pattern: String)|||It creates a regular expression from the given string pattern.&&&Regex(pattern: String, option: RegexOption)|||It creates a regular expression from the given string pattern and given single option.&&&Regex(pattern: String, options: Set<RegexOption>)|||It creates a regular expression from the given string pattern and set of given options.\', \'Functions|||Descriptions&&&fun containsMatchIn(input: CharSequence): Boolean|||It indicates that regular expression contains at least one input character&&&fun find(|||input: CharSequence,|||startIndex: Int = 0|||): MatchResult?|||It returns the first match of regular expression in the input character sequence, begins from given startIndex.&&&fun findAll(|||input: CharSequence,|||startIndex: Int = 0|||): Sequence<MatchResult>|||It returns all occurrences of regular expression in the input string, starts from the given startIndex.&&&funmatchEntire(input: CharSequence): MatchResult?|||It is used to match complete input character from the pattern.&&&infix fun matches(input: CharSequence): Boolean|||It indicates whether all input character sequence matches in regular expression.&&&fun replace(input: CharSequence, replacement: String): String|||It replaces all the input character sequence of regular expression with given replacement string.&&&fun replaceFirst(|||input: CharSequence, |||replacement: String|||): String|||It replaces the first occurrence of regular expression in the given input string with given replacement string.&&&fun split(input: CharSequence, limit: Int = 0): List<String>|||It splits the input character sequence of regular expression.&&&fun toPattern(): Pattern|||fun toString(): String|||It returns the regular expression in string.\']','[]'),(69,'[\'Kotlin Regex Pattern\']','[\'Regex uses several symbolic notation (patterns) in its function. Some commonly uses patterns are given below:\']','[\'https://www.javatpoint.com/kotlin-install-android-studio\', \'https://www.javatpoint.com/kotlin-regular-expressions-introduction\', \'https://www.javatpoint.com//cdn-cgi/l/email-protection\', \'https://www.javatpoint.com/kotlin-install-android-studio\', \'https://www.javatpoint.com/kotlin-regular-expressions-introduction\', \'https://www.javatpoint.com/kotlin-install-android-studio\']','[]','[]','[\'\', \'Regex Meta Symbols\', \'Regex Quantifiers Patterns\', \'Regex Sample Patterns\']','[]','[]','[]','[]','[]','[]','[]','[\"Symbol|||Description&&&x|y|||Matches either x or y&&&xy|||Matches x followed by y&&&[xyz]|||Matches either x,y,z&&&[x-z]|||Matches any character from x to z&&&[^x-z]|||\'^\' as first character negates the pattern. This matches anything outside the range x-z&&&^xyz|||Matches expression xyz at beginning of line&&&xyz$|||Matches expression xyz at end of line&&&.|||Matches any single character\", \'Symbol|||Description&&&\\d|||Matches digits ([0-9])&&&\\D|||Matches non-digits&&&\\w|||Matches word characters&&&\\W|||Matches non-word characters&&&\\s|||Matches whitespaces [\\t\\r\\f\\n]&&&\\S|||Matches non-whitespaces&&&\\b|||Matches word boundary when outside of a bracket. Matches backslash when placed in a bracket&&&\\B|||Matches non-word boundary&&&\\A|||Matches beginning of string&&&\\Z|||Matches end of String\', \'Symbol|||Description&&&abcd?|||Matches 0 or 1 occurrence of expression abcd&&&abcd*|||Matches 0 or more occurrences of expression abcd&&&abcd+|||Matches 1 or more occurrences of expression abcd&&&abcd{x}|||Matches exact x occurrences of expression abcd&&&abcd{x,}|||Matches x or more occurrences of expression abcd&&&abcd{x,y}|||Matches x to y occurrences of expression abcd\', \'Pattern|||Description&&&([^\\s]+(?=\\.(jpg|gif|png))\\.\\2)|||Matches jpg,gif or png images.&&&([A-Za-z0-9-]+)|||Matches latter, number and hyphens.&&&(^[1-9]{1}$|^[1-4]{1}[0-9]{1}$|^100$)|||Matches any number from 1 to 100 inclusive.&&&(#?([A-Fa-f0-9]){3}(([A-Fa-f0-9]){3})?)|||Matches valid hexa decimal color code.&&&((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15})|||Matches 8 to 15 character string with at least one upper case, one lower case and one digit.&&&(\\[emailxa0protected][a-zA-Z_]+?\\.[a-zA-Z]{2,6})|||Matches email address.&&&(\\<(/?[^\\>]+)\\>)|||Matches HTML tags.\']','[]'),(70,'[\'Android Studio Installation\']','[\'To develop an android application using Kotlin, we need a Android application development IDE such as Android Studio. Android Studio is an IDE that allows us to develop application at single platefarm. We can download Android Studio set from Android Studio official link Download Android Studio. \']','[\'https://www.javatpoint.com/kotlin-hello-world-app\', \'https://www.javatpoint.com/kotlin-regex-pattern\', \'https://www.javatpoint.com/https://developer.android.com/studio/index.html\', \'https://www.javatpoint.com/https://www.javatpoint.com/how-to-set-path-in-java\', \'https://www.javatpoint.com/kotlin-hello-world-app\', \'https://www.javatpoint.com/kotlin-regex-pattern\', \'https://www.javatpoint.com/kotlin-hello-world-app\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation6.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation7.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation8.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-studio-installation9.png\']','[]','[]','[]','[]','[\'After download Android Studio, run its setup and install it. To install follow the instructions.\', \'Click Next to proceed.\', \'Browse JDK path and click Next\', \'Check the component which we want to install.\', \'Provide Android SDK installation location.\', \'Select the maximum size of RAM to use emulator instances.\', \'Android Studio is successfully installed on our system.\']','[\'Before installing Android Studio on our machine, we must have Java installed. Look a reference here https://www.javatpoint.com/how-to-set-path-in-java to set path of JDK.\']','[]','[]','[]','[]','[]'),(71,'[\'Kotlin Hello World App\']','[\"Let?s develop a first hello word application on Android studio using Kotlin programming language. To develop android application launch Android Studio and select option \'Start a new Android Studio project\'.\"]','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-install-android-studio\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-install-android-studio\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-app.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-app2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-app3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-app4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-app5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-hello-world-app6.png\']','[]','[]','[]','[]','[\"Provide a application name (\'Hello World\' in my case) and check \'Include Kotlin support\' and proceed.\", \'Select API level for android application and click next.\', \'Select Activity type and click next.\', \'activity_main.xml\', \'Create an activity_main.xml file in layout folder and add the following code.\', \'MainActivity.kt\', \'Create MainActivity.kt file in example.app.javatpoint.helloworld package add the following code.\', \'Now run your app.\']','[]','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.app.javatpoint.helloworld.MainActivity\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Hello World!\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.app.javatpoint.helloworld\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\']','[]','[]','[]'),(72,'[\'Kotlin Android TextView and EditText\']','[\'Android TextView is a user interface which displays the text to the user.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-edittext-with-textwatcher\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-textview-and-edittext-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-textview-and-edittext-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-textview-and-edittext-output3.png\']','[]','[\'Kotlin Android TextView and ExitText Example\']','[\'activity_main.xml\', \'MainActivity.kt\']','[]','[\'A simple XML code of TextView in a layout is shown below. \', \'We can get and modify the content of text view defined in the XML layout in Kotlin class file as:\', \'The simple XML code of EditText in a layout is shown below.\', \'We can get and modify the content of edit text defined in the XML layout in Kotlin class file as: \', \'In this example, we input the text value in ExitText and display its value in the TextView on clicking the Button. \', \'We are also watching the changes made over EditText using addTextChangedListener () method and TextWatcher interface.\', \'In the activity_main.xml file add the following code.\']','[\'The EditText is a user interface which is used for entering and changing the text. While using edit text in XML layout, we must specify its inputType attribute which configures the keyboard according to input type mention.\']','[\'Add the following code in MainActivity.kt class. In this class, we are getting the value of the edit text and display it in text view by clicking the button. At the same time, we are also watching the changes made over EditText using addTextChangedListener () method and TextWatcher interface. To learn more about TextWatcher refers to https://www.javatpoint.com/android-edittext-with-textwatcher \']','[\'<TextView\', \'android:id=\"@+id/text_view_id\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_width=\"wrap_content\"\', \'android:text=\"hello\" />\', \'val textView = findViewById<TextView>(R.id.text_view_id)\', \'textView.setText(\"string\").toString()\', \'val textViewValue = textView.text\', \'<EditText\', \'android:id=\"@+id/editText_id\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:inputType=\"textPersonName\"\', \'android:text=\"\" />\', \'val editText = findViewById<EditText>(R.id.editText_id)\', \'val editTextValue = editText.text\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintextviewedittext.MainActivity\">\', \'<TextView\', \'android:id=\"@+id/textView1\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentTop=\"true\"\', \'android:layout_centerHorizontal=\"true\"\', \'android:layout_marginTop=\"12dp\"\', \'android:text=\"TextView and EditText\"\', \'android:gravity=\"center\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\"/>\', \'<TextView\', \'android:id=\"@+id/textView2\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_below=\"@+id/textView1\"\', \'android:layout_marginTop=\"90dp\"\', \'android:layout_marginLeft=\"20dp\"\', \'android:layout_marginStart=\"20dp\"\', \'android:textSize=\"16sp\"\', \'android:text=\"Provide Input\" />\', \'<TextView\', \'android:id=\"@+id/textView3\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_below=\"@+id/textView2\"\', \'android:layout_marginTop=\"50dp\"\', \'android:layout_marginLeft=\"20dp\"\', \'android:layout_marginStart=\"20dp\"\', \'android:textSize=\"16sp\"\', \'android:text=\"Display Output\" />\', \'<EditText\', \'android:id=\"@+id/editText\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignBaseline=\"@+id/textView2\"\', \'android:layout_alignBottom=\"@+id/textView2\"\', \'android:layout_alignParentEnd=\"true\"\', \'android:layout_alignParentRight=\"true\"\', \'android:layout_marginEnd=\"21dp\"\', \'android:layout_marginRight=\"21dp\"\', \'android:ems=\"10\"\', \'android:inputType=\"textPersonName\"\', \'android:text=\"\" />\', \'<TextView\', \'android:id=\"@+id/textView4\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignLeft=\"@+id/editText\"\', \'android:layout_alignStart=\"@+id/editText\"\', \'android:layout_alignTop=\"@+id/textView3\"\', \'android:textSize=\"16sp\"\', \'android:text=\"TextView\" />\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_below=\"@+id/textView4\"\', \'android:layout_centerHorizontal=\"true\"\', \'android:layout_marginTop=\"112dp\"\', \'android:text=\"Click Button\" />\', \'<TextView\', \'android:id=\"@+id/textView5\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignEnd=\"@+id/editText\"\', \'android:layout_alignRight=\"@+id/editText\"\', \'android:layout_centerVertical=\"true\"\', \'android:text=\"reset output text\" />\', \'</RelativeLayout>\', \'package example.javatpoint.com.kotlintextviewedittext\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.text.Editable\', \'import android.text.TextWatcher\', \'import android.view.View\', \'import android.widget.TextView\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'button.setOnClickListener(){\', \'val inputValue: String = editText.text.toString()\', \'if (inputValue == null || inputValue.trim()==\"\"){\', \'Toast.makeText(this,\"please input data, edit text cannot be blank\",Toast.LENGTH_LONG).show()\', \'}else{\', \'textView4.setText(inputValue).toString()\', \'}\', \'}\', \'textView5.setOnClickListener(){\', \'if (textView4.text.toString() == null || textView4.text.toString().trim()==\"\"){\', \'Toast.makeText(this,\"clicked on reset textView,\\n output textView already reset\",Toast.LENGTH_LONG).show()\', \'}else{\', \'textView4.setText(\"\").toString()\', \'}\', \'}\', \'editText.addTextChangedListener(object: TextWatcher{\', \'override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\', \'Toast.makeText(applicationContext,\"executed before making any change over EditText\",Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {\', \'Toast.makeText(applicationContext,\"executed while making any change over EditText\",Toast.LENGTH_SHORT).show()\', \'}\', \'override fun afterTextChanged(p0: Editable?) {\', \'Toast.makeText(applicationContext,\"executed after change made over EditText\",Toast.LENGTH_SHORT).show()\', \'}\', \'})\']','[]','[]','[]'),(73,'[\'Kotlin Android Toast\']','[\'Android Toast is used to display a sort time notification to the user without affecting the user interaction with UI. The message displayed using Toast class displays quickly, and it disappears after some time. The message in the Toast can be of type text, image or both. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-toast-example\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-toast-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-toast-output2.png\']','[]','[\'Kotlin Android Toast Example\']','[\'activity_main.xml\', \'MainActivity.kt\']','[]','[\'To learn more about Android Toast, go to Android Toast Example\', \'In this example, we will display a toast message by clicking on a Button. See the following example: \', \'Add the following code in the activity_main.xml file. In this file, we have added a button to the layout to perform a click action.\', \'Add the following code in the MainActivity.kt class. In this class, we are performing a click action on the button which displays the toast message.\']','[]','[]','[\'Toast.makeText(applicationContext,\"this is toast message\",Toast.LENGTH_SHORT).show()\', \'val toast = Toast.makeText(applicationContext, \"Hello Javatpoint\", Toast.LENGTH_LONG)\', \'toast.show()\', \'val myToast = Toast.makeText(applicationContext,\"toast message with gravity\",Toast.LENGTH_SHORT)\', \'myToast.setGravity(Gravity.LEFT,200,200)\', \'myToast.show()\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintoast.MainActivity\">\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Click to display toast\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlintoast\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.Gravity\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'button.setOnClickListener(){\', \'Toast.makeText(applicationContext,\"this is toast message\",Toast.LENGTH_SHORT).show()\', \'val toast = Toast.makeText(applicationContext, \"Hello Javatpoint\", Toast.LENGTH_SHORT)\', \'toast.show()\', \'val myToast = Toast.makeText(applicationContext,\"toast message with gravity\",Toast.LENGTH_SHORT)\', \'myToast.setGravity(Gravity.LEFT,200,200)\', \'myToast.show()\', \'}\']','[]','[]','[\'|||The applicationContest returns the instance of Context class. |||The message is of String type as (\"this is toast message\").|||The Toast.LENGTH_SHORT and Toast.LENGTH_LONG are the constant defines the time duration for message display. |||The show() method of Toast class used to display the toast message.|||The setGravity() method of Toast used to customize the position of toast message.|||\']'),(74,'[\'Kotlin Android Button\']','[\'Android Button is a push button used to perform events on its click. It is a UI component comes under the android.widget.Button class. To learn more about Android Button refers to Android Button Example\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-working-with-button\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-button-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-button-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-button-output3.png\']','[]','[\'Kotlin Android Button Example\']','[\'activity_main.xml\', \'MainActivity.kt\']','[]','[\'Using Kotlin, we can perform events on Android Button though different ways, using:\', \'1. Implement the setOnClickListener of Button\', \'2. Implement the View.OnClickListner and override its function\', \'3. Adding the onClick attribute of Button in layout file and implement its function.\', \'4. Create a Button programmatically and set it on the layout\', \'In this example, we will create the Button and performs event on them. Clicking on the Button, display a toast message.\']','[\'Add the three Button from the Widgets palette in the activity_main.xml layout file. Its code is given below. The Button of id button3 added the onClick attribute and its function name is implemented in MainActivity class file.\']','[\'Add the following code in the MainActivity.kt class. In this class, we implement the setOnClickListener listener on the button, implements the OnClickListener of View class (View.OnClickListener) and override its function onClick. In this class, we also create a Button programmatically (button4), define its properties and set it on the layout.\']','[\'button1.setOnClickListener(){\', \'Toast.makeText(this,\"button 1 clicked\", Toast.LENGTH_SHORT).show()\', \'}\', \'button2.setOnClickListener(this)\', \'. .\', \'override fun onClick(view: View) {\', \'<Button\', \'android:onClick=\"clickButton\"/>\', \'fun clickButton(v: View){\', \'val mToast = Toast.makeText(applicationContext,\"button 3 clicked\", Toast.LENGTH_SHORT)\', \'mToast.show()\', \'button4.setLayoutParams(ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT))\', \'button4.setId(button4_Id)\', \'button4.x = 250f\', \'button4.y = 500f\', \'button4.setOnClickListener(this)\', \'constraintLayout.addView(button4)\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:id=\"@+id/constraintLayout\"\', \'tools:context=\"example.javatpoint.com.kotlinbutton.MainActivity\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Button Action Example\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.073\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<Button\', \'android:id=\"@+id/button1\"\', \'android:layout_width=\"95dp\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Button 1\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.501\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.498\" />\', \'<Button\', \'android:id=\"@+id/button2\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"80dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Button 2\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.762\" />\', \'<Button\', \'android:id=\"@+id/button3\"\', \'android:layout_width=\"101dp\"\', \'android:layout_height=\"48dp\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:onClick=\"clickButton\"\', \'android:text=\"Button 3\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.502\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.774\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinbutton\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.Button\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() , View.OnClickListener {\', \'val button4_Id: Int = 1111\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'button1.setOnClickListener(){\', \'Toast.makeText(this,\"button 1 clicked\", Toast.LENGTH_SHORT).show()\', \'}\', \'button2.setOnClickListener(this)\', \'val button4 = Button(this)\', \'button4.setText(\"Button 4 added dynamically\")\', \'button4.setLayoutParams(ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT))\', \'button4.setId(button4_Id)\', \'button4.x = 250f\', \'button4.y = 500f\', \'button4.setOnClickListener(this)\', \'constraintLayout.addView(button4)\', \'override fun onClick(view: View) {\', \'when (view.id) {\', \'R.id.button2 ->\', \'Toast.makeText(this,\"button 2 clicked\", Toast.LENGTH_SHORT).show()//single line code\', \'button4_Id->{//multiline code\', \'val myToast = Toast.makeText(this,\"button 4 clicked\", Toast.LENGTH_SHORT)\', \'myToast.show()\', \'}\', \'}\', \'fun clickButton(v: View){\', \'val mToast = Toast.makeText(applicationContext,\"button 3 clicked\", Toast.LENGTH_SHORT)\', \'mToast.show()\']','[]','[]','[]'),(75,'[\'Kotlin Android Custom Toast\']','[\'In the previous example, Kotlin Android Toast we display a simple toast message. We can also able to customize our message which will show as a toast. In the toast, we can display String text, image or both and customize the position of it.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-toast\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-custom-toast-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-custom-toast-output2.png\']','[]','[\'Kotlin Android Custom Toast Example\']','[\'activity_main.xml\', \'custom_toast.xml\', \'MainActivity.kt\']','[]','[\'In this example, we will display text and an image as a custom toast on clicking the Button.\', \'Add the following code in the activity_main.xml file. In this file, we added a Button to perform a click action.\', \'The above code performing the following tasks:\']','[\'Create a layout file named as custom_toast.xml and add an ImageView and TextView to display as a toast message. Set an image to ImageView and place a message in TextView.\']','[\'In this MainActivity.kt class, we are getting the View object using the layoutInfleter.infalate() method. Clicking on the button displays the toast message with image and text. The custom layout is added over toast by calling the View using the instance of Toast class (as myToast.view = layout).\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlincustomtoast.MainActivity\">\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"click for custom toast\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.266\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:orientation=\"vertical\" android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:id=\"@+id/linearLayout\">\', \'<ImageView\', \'android:id=\"@+id/custom_toast_image\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:contentDescription=\"logo image\"\', \'android:src=\"@drawable/jtp_logo\"/>\', \'<TextView\', \'android:id=\"@+id/custom_toast_message\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:contentDescription=\"To\"\', \'android:text=\"JavaTpoint custom Toast\" />\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlincustomtoast\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.Toast\', \'import android.view.Gravity\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'import kotlinx.android.synthetic.main.custom_toast.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val layout = layoutInflater.inflate(R.layout.custom_toast,linearLayout)\', \'button.setOnClickListener(){\', \'val myToast = Toast(applicationContext)\', \'myToast.duration = Toast.LENGTH_LONG\', \'myToast.setGravity(Gravity.CENTER_VERTICAL, 0, 0)\', \'myToast.view = layout//setting the view of custom toast layout\', \'myToast.show()\', \'}\']','[]','[]','[\'|||val myToast = Toast(applicationContext : creates the instance of Toast class.|||myToast.duration = Toast.LENGTH_LONG: set the constant time duration to display the toast message.|||myToast.setGravity(Gravity.CENTER_VERTICAL, 0, 0): set the gravity (position) of toast message.|||myToast.view = layout: add the custom_toast layout to view.|||myToast.show(): display the toast message.|||\']'),(76,'[\'Kotlin Android Explicit Intent\']','[\'Android Intent is a messaging object used to request another app component to perform an action. Intent facilitates users to communicate with app component through several ways such as starting an activity, starting a service, delivering a broadcast receiver, etc.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-explicit-intent.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-explicit-intent-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-explicit-intent-output2.png\']','[]','[\'Types of Android Intents\', \'Kotlin Android Explicit Intent Example\']','[\'activity_main.xml\', \'MainActivity.kt\', \'second_activity.xml\', \'SecondActivity.kt\']','[]','[\'Android intents are mainly used to:\', \'There are two types of intent in Android:\', \'Implicit Intent: This intent does not specify the component name. It invokes the component of another app to handle it.\', \'Add the following code in the activity_main.xml.\', \'Create another activity class named as SecondActivity.\', \'In the second_activity.xml file add the following code.\']','[\'Explicit Intent: This intent satisfies the request within the application component. It takes the fully qualified class name of activities or services that we want to start.\']','[\'In this example, we will call the other activity class from another activity class using explicit intent. Using intent, we will send the data from the first activity class to second activity class. Second activity class gets this data and displays them in toast message.\', \'Add the following code in the MainActivity.kt class. In this class, we are creating an instance of Intent class and calling the component activity class SecondActivity.kt. The putExtra(key, value) method of Intent class send the data to the SecondActivity.kt class. The startActivity() method starts the Intent.\', \'Add the following code in the SecondActivity.kt class. In this class, we are receiving the intent data using creating the instance on Bundle class using intent.extras and displaying the data in toast message. By clicking on the button, we are invoking Intent to call MainActivity.kt class.\']','[\'intent = Intent(applicationContext, SecondActivity::class.java)\', \'startActivity(intent)\', \'intent = Intent(Intent.ACTION_VIEW)\', \'intent.setData(Uri.parse(\"https://www.javatpoint.com/\"))\', \'startActivity(intent)\', \'intent= Intent(Intent.ACTION_VIEW, Uri.parse(\"https://www.javatpoint.com/\"))\', \'startActivity(intent)\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinexplicitintent.MainActivity\">\', \'<TextView\', \'android:id=\"@+id/textView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"First Activity\"\', \'android:textSize=\"18sp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.501\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.172\" />\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Click\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/textView\"\', \'app:layout_constraintVertical_bias=\"0.77\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinexplicitintent\', \'import android.content.Intent\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'val id:Int = 10\', \'val language:String = \"kotlin\"\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'button.setOnClickListener() {\', \'intent = Intent(this, SecondActivity::class.java)\', \'intent.putExtra(\"id_value\", id)\', \'intent.putExtra(\"language_value\", language)\', \'startActivity(intent)\', \'}\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinexplicitintent.SecondActivity\">\', \'<TextView\', \'android:id=\"@+id/textView2\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"SecondActivity\"\', \'android:textSize=\"18sp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.107\" />\', \'<Button\', \'android:id=\"@+id/button2\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"back\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.774\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinexplicitintent\', \'import android.content.Intent\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_second.*\', \'class SecondActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_second)\', \'val bundle:Bundle = intent.extras\', \'val id = bundle.get(\"id_value\")\', \'val language = bundle.get(\"language_value\")\', \'Toast.makeText(applicationContext,id.toString()+\" \"+language,Toast.LENGTH_LONG).show()\', \'button2.setOnClickListener(){\', \'intent = Intent(this,MainActivity::class.java)\', \'startActivity(intent)\', \'}\']','[]','[]','[\'|||Start the service|||Launch an activity|||Display a web page|||Display a list of contacts|||Broadcast a message|||Dial a phone call etc.|||\']'),(77,'[\'Kotlin Android Implicit Intent\']','[\'Android Implicit Intent invokes the component of another app to handle the request. It does not specify the component name specifically.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-implicit-intent.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-implicit-intent-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-implicit-intent-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-implicit-intent-output3.png\']','[]','[]','[\'Kotlin Android Implicit Intent Example Invoking URL\', \'activity_main.xml\', \'MainActivity.kt\']','[]','[\'For example, if we want to share data using Intent, it invokes the relevant component to fulfill the request.\', \'In this example, we will invoke the URL using Implicit Intent clicking on Button.\', \'Add the following code in activity_main.xml file. In this activity, we use a Button to invoke Intent.\']','[]','[\'Add the following code in the MainActivity.kt class. In this class, we are invoking the URL on clicking the button using Implicit Intent. To invoke this intent, we are passing the action type and URL. The startActivity() method is used to start the Intent.\']','[\'intent = Intent(Intent.ACTION_VIEW)\', \'intent.setData(Uri.parse(\"https://www.javatpoint.com/\"))\', \'startActivity(intent)\', \'intent= Intent(Intent.ACTION_VIEW, Uri.parse(\"https://www.javatpoint.com/\"))\', \'startActivity(intent)\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinimplicitintent.MainActivity\">\', \'<TextView\', \'android:id=\"@+id/textView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Your First Activity\"\', \'android:textSize=\"18sp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.501\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.172\" />\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"click to invoke intent\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/textView\"\', \'app:layout_constraintVertical_bias=\"0.77\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinimplicitintent\', \'import android.content.Intent\', \'import android.net.Uri\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'button.setOnClickListener(){\', \'intent = Intent(Intent.ACTION_VIEW)\', \'intent.setData(Uri.parse(\"https://www.javatpoint.com/\"))\', \'startActivity(intent)\', \'/*  intent= Intent(Intent.ACTION_VIEW, Uri.parse(\"https://www.javatpoint.com/\"))\', \'startActivity(intent)*/\', \'}\']','[]','[]','[]'),(78,'[\'Kotlin Android ListView\']','[\'Android ListView is a view component that contains the list of items and is displayed in a scrollable list. The list items are automatically added to the list using the Adapter class. The Adapter class bridges the list of data between an AdapterViews other Views components (ListView, ScrollView, etc.).\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-listview-example\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-listview-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-listview-output2.png\']','[]','[]','[\'Kotlin Android ListView Example\', \' activity_main.xml\', \'strings.xml\', \'MainActivity.kt\']','[]','[\'For example, create list items in a class file and add it on ArrayAdapter class:\', \'Creating list items in a separate strings.xml file and added it on ArrayAdapter class:\', \'Add a ListView component to display the list of items in the activity_main.xml file.\', \'In the strings.xml file, create a string-array and add the list items in the item tag.\']','[\'Call the setAdapter(adapter) to connect an adapter with the list to display the items in list view. To know more about Android ListView go to https://www.javatpoint.com/android-listview-exampler\', \'In this example, we will create a ListView  and perform click action on the list items. The items of a list can be created in the class file or in a separate file such as in strings.xml. \']','[\'Add the following code in the MainActivity.kt class file. In this class, we are getting the list of items from the strings.xml file using resource.getStringArray() method. The ArrayAdapter class initialized with the application context, sets the resource type of list and array items as an argument. The listView.adapter = arrayAdapter sets the adapter to the ListView. To perform the click action on items of the list, call the OnItemClickListener{}.\']','[\'val language = arrayOf(\"C\",\"C++\",\"Java\",\".Net\",\"Kotlin\",\"Ruby\",\"Rails\",\"Python\",\"Java Script\",\"Php\",\"Ajax\",\"Perl\",\"Hadoop\")\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val arrayAdapter = ArrayAdapter(this,android.R.layout.simple_list_item_1,language)\', \'listView.adapter = arrayAdapter\', \'<string-array name=\"technology_list\">\', \'<item>C</item>\', \'<item>C++</item>\', \'<item>Java</item>\', \'<item>.Net</item>\', \'</string-array>\', \'val language:Array<String> = resources.getStringArray(R.array.technology_list)\', \'val arrayAdapter = ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,language)\', \'listView.adapter = arrayAdapter\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinlistview.MainActivity\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"fill_parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin ListView</string>\', \'<string-array name=\"technology_list\">\', \'<item>C</item>\', \'<item>C++</item>\', \'<item>Java</item>\', \'<item>.Net</item>\', \'<item>Kotlin</item>\', \'<item>Ruby</item>\', \'<item>Rails</item>\', \'<item>Python</item>\', \'<item>Java Script</item>\', \'<item>Php</item>\', \'<item>Ajax</item>\', \'<item>Perl</item>\', \'<item>Hadoop</item>\', \'</string-array>\', \'</resources>\', \'package example.javatpoint.com.kotlinlistview\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.*\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val language:Array<String> = resources.getStringArray(R.array.technology_list)\', \'val arrayAdapter = ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,language)\', \'listView.adapter = arrayAdapter\', \'listView.onItemClickListener = AdapterView.OnItemClickListener { adapterView, view, position, id ->\', \'val selectedItem = adapterView.getItemAtPosition(position) as String\', \'val itemIdAtPos = adapterView.getItemIdAtPosition(position)\', \'Toast.makeText(applicationContext,\"click item $selectedItem its position $itemIdAtPos\",Toast.LENGTH_SHORT).show()\', \'}\']','[]','[]','[]'),(79,'[\'Kotlin Android AlertDialog\']','[\'Android AlertDialog is a subclass of Dialog class. It is used to prompt a small dialog window to make a decision before a user can proceed in the same activity without changing the screen. A dialog shows the title, message, up to three buttons or a custom layout.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-alertdialog-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-alertdialog-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-alertdialog-output3.png\']','[]','[\'Kotlin Android AlertDialog Example\']','[\'activity_main.xml\', \'strings.xml\', \'MainActivity.kt\']','[]','[\'Add the following code in the activity_main.xml file. In this layout file, we add a button to prompt an alert dialog.\', \'In the strings.xml file add the following code.\']','[\'The instance of AlertDialog.Builder class is used to make an alert dialog. Through alert dialog, we create positive (yes), negative (no) and neutral (cancel) decision.\', \'In this example, we prompt an alert dialog window by clicking a button. This dialog window sets three decision actions as positive, negative and neutral.\', \'Add the following code in the MainActivity.kt class. The instance of AlertDialog.Builder class call the setTitle(), setMessage(), setIcon() methods to set the dialog title, message, icon respectively.\', \'To set the action on alert dialog call the setPositiveButton(), setNeutralButton() and setNegativeButton() methods for positive, neutral and negative action respectively. The show() method of AlertDialog.Builder is used to display the alert dialog.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinalertdialog.MainActivity\">\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"@string/button\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin AlertDialog</string>\', \'<string name=\"button\">click button</string>\', \'<string name=\"dialogTitle\">Delete File</string>\', \'<string name=\"dialogMessage\">Deleting file may be harm your system</string>\', \'</resources>\', \'package example.javatpoint.com.kotlinalertdialog\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.support.v7.app.AlertDialog\', \'import android.widget.Button\', \'import android.widget.Toast\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val button = findViewById<Button>(R.id.button)\', \'button.setOnClickListener {\', \'val builder = AlertDialog.Builder(this)\', \'builder.setTitle(R.string.dialogTitle)\', \'builder.setMessage(R.string.dialogMessage)\', \'builder.setIcon(android.R.drawable.ic_dialog_alert)\', \'builder.setPositiveButton(\"Yes\"){dialogInterface, which ->\', \'Toast.makeText(applicationContext,\"clicked yes\",Toast.LENGTH_LONG).show()\', \'}\', \'builder.setNeutralButton(\"Cancel\"){dialogInterface , which ->\', \'Toast.makeText(applicationContext,\"clicked cancel\\n operation cancel\",Toast.LENGTH_LONG).show()\', \'}\', \'builder.setNegativeButton(\"No\"){dialogInterface, which ->\', \'Toast.makeText(applicationContext,\"clicked No\",Toast.LENGTH_LONG).show()\', \'}\', \'val alertDialog: AlertDialog = builder.create()\', \'alertDialog.setCancelable(false)\', \'alertDialog.show()\', \'}\']','[]','[]','[]'),(80,'[\'Kotlin Android Context Menu\']','[\'Android Context Menu is a floating menu which appears when a user performs a long-click on an element. The action performs on context menu affect only on the selected content.\nContext Menu can be implemented on any view, but it is mostly used with items of ListView, GridView or other view collections.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-context-menu-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-context-menu-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-context-menu-output3.png\']','[]','[\'Kotlin Android Context Menu Example\']','[\'activity_main.xml\', \'content_main.xml\', \'strings.xml\', \'menu_main.xml\', \'MainActivity.kt\']','[]','[\'Create an android project and select the Basic Activity. This activity auto-generates codes for the menu option.\', \'Add the following code in the activity_main.xml file in layout directory. This code is auto-generated while creating Basic Activity.\', \'Add the following code in the content_main.xml file in layout directory. In this file, we added a ListView.\', \'Add the following code in the strings.xml file.\', \'Add the following code in the menu_main.xml file in menu directory. Add the item tag which creates the menu item for the context menu.\', \'To perform action on each items of context menu override the onContextItemSelected() function.\']','[\'Context Menu is created by overriding the onCreateContextMenu() function. The menu resource is inflated by and calling the inflate() method of MenuInflater class. To act on menu items, override the onContextItemSelected () function.\', \'In this example, we will add a ListView and implements the context menu on its items. Performing the long-click on the list item shows the context menu items on which we can perform the relevant action. \']','[\'Add the following code in the MianActivity.kt class. In this class, we create a list view and implement the context menu on its items. To add the list items for context menu the registerForContextMenu(list) method is used. To create the context menu override the onCreateContextMenu() and call the inflate() method of MenuInflater class. \']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlincontextmenu.MainActivity\">\', \'<android.support.design.widget.AppBarLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:theme=\"@style/AppTheme.AppBarOverlay\">\', \'<android.support.v7.widget.Toolbar\', \'android:id=\"@+id/toolbar\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"?attr/actionBarSize\"\', \'android:background=\"?attr/colorPrimary\"\', \'app:popupTheme=\"@style/AppTheme.PopupOverlay\" />\', \'</android.support.design.widget.AppBarLayout>\', \'<include layout=\"@layout/content_main\" />\', \'</android.support.design.widget.CoordinatorLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\', \'tools:context=\"example.javatpoint.com.kotlincontextmenu.MainActivity\"\', \'tools:showIn=\"@layout/activity_main\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin ContextMenu</string>\', \'<string name=\"action_call\">Call</string>\', \'<string name=\"action_sms\">Sms</string>\', \'</resources>\', \'<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'tools:context=\"example.javatpoint.com.kotlincontextmenu.MainActivity\">\', \'<item\', \'android:id=\"@+id/call\"\', \'android:orderInCategory=\"100\"\', \'android:title=\"@string/action_call\"\', \'app:showAsAction=\"never\" />\', \'<item\', \'android:id=\"@+id/sms\"\', \'android:orderInCategory=\"100\"\', \'android:title=\"@string/action_sms\"\', \'app:showAsAction=\"never\" />\', \'</menu>\', \'package example.javatpoint.com.kotlincontextmenu\', \'import android.os.Bundle\', \'import android.support.v7.app.AppCompatActivity\', \'import android.view.ContextMenu\', \'import android.view.MenuItem\', \'import android.view.View\', \'import android.widget.ArrayAdapter\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'import kotlinx.android.synthetic.main.content_main.*\', \'import android.widget.Toast\', \'class MainActivity : AppCompatActivity() {\', \'private val contact = arrayOf<String>(\"Akash\",\"Vikash\",\"John\",\"Rahul\",\"Ajay\")\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'setSupportActionBar(toolbar)\', \'val arrayAdapter: ArrayAdapter<String> = ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,contact)\', \'listView.adapter = arrayAdapter\', \'registerForContextMenu(listView)\', \'override fun onCreateContextMenu(menu: ContextMenu?, v: View?, menuInfo: ContextMenu.ContextMenuInfo?) {\', \'super.onCreateContextMenu(menu, v, menuInfo)\', \'val inflater = menuInflater\', \'inflater.inflate(R.menu.menu_main, menu)\', \'override fun onContextItemSelected(item: MenuItem?): Boolean {\', \'return when (item!!.itemId) {\', \'R.id.call ->{\', \'Toast.makeText(applicationContext, \"call code\", Toast.LENGTH_LONG).show()\', \'return true\', \'}\', \'R.id.sms ->{\', \'Toast.makeText(applicationContext, \"sms code\", Toast.LENGTH_LONG).show()\', \'return true\', \'}\', \'else -> super.onOptionsItemSelected(item)\', \'}\']','[]','[]','[]'),(81,'[\'Kotlin Android Custom ListView\']','[\'In the previous tutorial Kotlin Android ListView, we have created an example of default ListView. Android provides a facility to customize the ListView. In this tutorial, we will customize our ListView. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-listview\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-custom-listview-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-custom-listview-output2.png\']','[]','[\'Kotlin Android Custom ListView Example\']','[\'activity_main.xml\', \'custom_list.xml\', \'MainActivity.kt\', \'MyListAdapter.kt\']','[]','[\'In the activity_main.xml file add a ListView  component to display the list of items.\', \'Now, create a custom adapter class named as MyListAdapter.kt which populates the data model into the ListView.\']','[\'An Adapter class is used to add the list items in the list. It bridges the list of data between an AdapterView with other Views components (ListView, ScrollView, etc.).\', \'In this example, we will create a custom ListView and perform click action on list items. In this custom ListView, we add one image and two different text descriptions for each row of ListView.\', \'Create a layout file named as custom_list.xml in the layout directory and add one ImageView and two TextView. The ImageView is used to display image, one TextView to display the title and another TextView to display text description.\', \'Add the following code in the MainActivity.kt class. In this class, we are creating two String array and one Int array to store string text and image id respectively. \', \'From this class, we are calling a custom adapter class named as MyListAdapter by passing the context and data as the parameters. The listView.adapter = myListAdapter set the return adapter to the ListView.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlincustomlistview.MainActivity\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"/>\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:orientation=\"horizontal\">\', \'<LinearLayout\', \'android:orientation=\"horizontal\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:gravity=\"center\" >\', \'<ImageView\', \'android:id=\"@+id/icon\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'app:srcCompat=\"@mipmap/ic_launcher\" />\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_weight=\"1\"\', \'android:orientation=\"vertical\">\', \'<TextView\', \'android:id=\"@+id/title\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"title\"\', \'android:textStyle=\"bold\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<TextView\', \'android:id=\"@+id/description\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"description\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:layout_marginTop=\"5dp\"\', \'android:textSize=\"16sp\"/>\', \'</LinearLayout>\', \'</LinearLayout>\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlincustomlistview\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'val language = arrayOf<String>(\"C\",\"C++\",\"Java\",\".Net\",\"Kotlin\",\"Ruby\",\"Rails\",\"Python\",\"Java Script\",\"Php\",\"Ajax\",\"Perl\",\"Hadoop\")\', \'val description = arrayOf<String>(\', \'\"C programming is considered as the base for other programming languages\",\', \'\"C++ is an object-oriented programming language.\",\', \'\"Java is a programming language and a platform.\",\', \'\".NET is a framework which is used to develop software applications.\",\', \'\"Kotlin is a open-source programming language, used to develop Android apps and much more.\",\', \'\"Ruby is an open-source and fully object-oriented programming language.\",\', \'\"Ruby on Rails is a server-side web application development framework written in Ruby language.\",\', \'\"Python is interpreted scripting  and object-oriented programming language.\",\', \'\"JavaScript is an object-based scripting language.\",\', \'\"PHP is an interpreted language, i.e., there is no need for compilation.\",\', \'\"AJAX allows you to send and receive data asynchronously without reloading the web page.\",\', \'\"Perl is a cross-platform environment used to create network and server-side applications.\",\', \'\"Hadoop is an open source framework from Apache written in Java.\"\', \'val imageId = arrayOf<Int>(\', \'R.drawable.c_image,R.drawable.cpp_image,R.drawable.java_image,\', \'R.drawable.net_image,R.drawable.kotlin_image,R.drawable.ruby_image,\', \'R.drawable.rails_image,R.drawable.python_image,R.drawable.js_image,\', \'R.drawable.php_image,R.drawable.ajax_image,R.drawable.python_image,\', \'R.drawable.hadoop_image\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val myListAdapter = MyListAdapter(this,language,description,imageId)\', \'listView.adapter = myListAdapter\', \'listView.setOnItemClickListener(){adapterView, view, position, id ->\', \'val itemAtPos = adapterView.getItemAtPosition(position)\', \'val itemIdAtPos = adapterView.getItemIdAtPosition(position)\', \'Toast.makeText(this, \"Click on item at $itemAtPos its item id $itemIdAtPos\", Toast.LENGTH_LONG).show()\', \'}\', \'package example.javatpoint.com.kotlincustomlistview\', \'import android.app.Activity\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.*\', \'class MyListAdapter(private val context: Activity, private val title: Array<String>, private val description: Array<String>, private val imgid: Array<Int>)\', \': ArrayAdapter<String>(context, R.layout.custom_list, title) {\', \'override fun getView(position: Int, view: View?, parent: ViewGroup): View {\', \'val inflater = context.layoutInflater\', \'val rowView = inflater.inflate(R.layout.custom_list, null, true)\', \'val titleText = rowView.findViewById(R.id.title) as TextView\', \'val imageView = rowView.findViewById(R.id.icon) as ImageView\', \'val subtitleText = rowView.findViewById(R.id.description) as TextView\', \'titleText.text = title[position]\', \'imageView.setImageResource(imgid[position])\', \'subtitleText.text = description[position]\', \'return rowView\']','[]','[]','[]'),(82,'[\'Kotlin Android Options Menu\']','[\'Android Options Menu is the collection of menu items for an activity. Options menu allows placing actions that impact globally on the application.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-options-menu-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-options-menu-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-options-menu-output3.png\']','[]','[\'Kotlin Android Options Menu Example\', \'Creating Option Menu Using Images on Action Bar\']','[\'activity_main.xml\', \'content_main.xml\', \'strings.xml\', \'menu_main.xml\', \'MainActivity.kt\', \'menu_main.xml\']','[]','[\'Create an android project and select the Basic Activity. This activity auto generates codes for menu option and Toolbar.\', \'Add the following code in the activity_main.xml file in layout directory. This code is auto-generated while creating Basic Activity.\', \'Add the following code in the content_main.xml file in layout directory. In this layout, you can place your UI components.\', \'Add the following code in the strings.xml file.\', \'Add the following code in the menu_main.xml file in menu directory. Add the item tag which creates the menu item for options menu.\', \'To perform action on each items of options, menu overrides the onOptionsItemSelected() function.\']','[\'Options Menu is created by overriding the onCreateOptionsMenu() function. The menu resource is inflated by and calling the inflate() method of MenuInflater class. To act on menu items, override the onOptionsItemSelected() function.\', \'In this example, we will add the options menu items on the action bar. Clicking on the menu shows the option menu items on which we can perform the relevant action. \', \'Add the following code in the MainActivity.kt class. In this class, we override the function onCreateOptionsMenu() and call the inflate() of MenuInflater class which inflates the menu and adds items to the action bar.\', \'We can also display the Options Menu as images on the Action Bar. To set image in the Options Menu add the icon attribute in the item tag as give below.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinoptionsmenu.MainActivity\">\', \'<android.support.design.widget.AppBarLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:theme=\"@style/AppTheme.AppBarOverlay\">\', \'<android.support.v7.widget.Toolbar\', \'android:id=\"@+id/toolbar\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"?attr/actionBarSize\"\', \'android:background=\"?attr/colorPrimary\"\', \'app:popupTheme=\"@style/AppTheme.PopupOverlay\" />\', \'</android.support.design.widget.AppBarLayout>\', \'<include layout=\"@layout/content_main\" />\', \'</android.support.design.widget.CoordinatorLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\', \'tools:context=\"example.javatpoint.com.kotlinoptionsmenu.MainActivity\"\', \'tools:showIn=\"@layout/activity_main\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Hello World!\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin OptionsMenu</string>\', \'<string name=\"action_settings\">Settings</string>\', \'<string name=\"action_share\">Share</string>\', \'<string name=\"action_exit\">Exit</string>\', \'</resources>\', \'<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'tools:context=\"example.javatpoint.com.kotlinoptionsmenu.MainActivity\">\', \'<item\', \'android:id=\"@+id/action_settings\"\', \'android:orderInCategory=\"100\"\', \'android:title=\"@string/action_settings\"/>\', \'<item\', \'android:id=\"@+id/action_share\"\', \'android:title=\"@string/action_share\"\', \'app:showAsAction=\"never\"/>\', \'<item\', \'android:id=\"@+id/action_exit\"\', \'android:title=\"@string/action_exit\"\', \'app:showAsAction=\"never\"/>\', \'</menu>\', \'package example.javatpoint.com.kotlinoptionsmenu\', \'import android.os.Bundle\', \'import android.support.v7.app.AppCompatActivity\', \'import android.view.Menu\', \'import android.view.MenuItem\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'setSupportActionBar(toolbar)\', \'override fun onCreateOptionsMenu(menu: Menu): Boolean {\', \'menuInflater.inflate(R.menu.menu_main, menu)\', \'return true\', \'override fun onOptionsItemSelected(item: MenuItem): Boolean {\', \'return when (item.itemId) {\', \'R.id.action_settings -> {\', \'Toast.makeText(applicationContext, \"click on setting\", Toast.LENGTH_LONG).show()\', \'true\', \'}\', \'R.id.action_share ->{\', \'Toast.makeText(applicationContext, \"click on share\", Toast.LENGTH_LONG).show()\', \'return true\', \'}\', \'R.id.action_exit ->{\', \'Toast.makeText(applicationContext, \"click on exit\", Toast.LENGTH_LONG).show()\', \'return true\', \'}\', \'else -> super.onOptionsItemSelected(item)\', \'}\', \'<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'tools:context=\"example.javatpoint.com.kotlinoptionmenu.MainActivity\">\', \'android:id=\"@+id/action_settings\"\', \'android:orderInCategory=\"100\"\', \'android:title=\"@string/action_settings\"\', \'android:icon=\"@android:drawable/btn_star\" />\', \'android:id=\"@+id/action_share\"\', \'android:title=\"@string/action_share\"\', \'app:showAsAction=\"ifRoom\"\', \'android:icon=\"@drawable/shareimage\"/>\', \'android:id=\"@+id/action_exit\"\', \'android:title=\"@string/action_exit\"\', \'app:showAsAction=\"ifRoom\"\', \'android:icon=\"@drawable/exitimage\"/>\', \'</menu>\']','[]','[]','[]'),(83,'[\'Kotlin Android Popup Menu\']','[\'Android Popup Menu is a list menu that appears vertically to the view. The popup menu appears below the view if there is room otherwise, appears above. Touching outside to popup menu makes it disappear. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-popup-menu-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-popup-menu-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-popup-menu-output3.png\']','[]','[\'Kotlin Android Popup Menu Example\']','[\'activity_main.xml\', \'content_main.xml\', \'strings.xml\', \'popup_menu.xml\', \'MainActivity.kt\']','[]','[\'Popup Menu provides actions that are related to the specific content, and it does not affect the corresponding content. \', \"The PopupMenu.OnMenuItemClickListener interface receives the menu items click events if the items don\'t have their click listener.\", \'Create an android project and select the Basic Activity. This activity auto-generates codes for the menu.\', \'Add the following code in layout directory in the activity_main.xml file. This code is auto-generated while creating the Basic Activity.\', \'Add the following code in the content_main.xml file in layout directory. In this layout, we place a Button View component.\', \'Create a menu resource file named as popup_menu.xml in the menu directory. Add the item tag which creates the menu item for the popup menu.\']','[\'In this example, we will add the popup menu items on a view (button). Clicking on the button shows the popup menu items on which we can perform the relevant action.\', \'Add the following code in the MainActivity.kt class. In this class, we implement the PopupMenu.OnMenuItemClickListener interface which receives the menu items click events. To display the popup menu, call the PopupMenu.show() method.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinpopupmenu.MainActivity\">\', \'<android.support.design.widget.AppBarLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:theme=\"@style/AppTheme.AppBarOverlay\">\', \'<android.support.v7.widget.Toolbar\', \'android:id=\"@+id/toolbar\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"?attr/actionBarSize\"\', \'android:background=\"?attr/colorPrimary\"\', \'app:popupTheme=\"@style/AppTheme.PopupOverlay\" />\', \'</android.support.design.widget.AppBarLayout>\', \'<include layout=\"@layout/content_main\" />\', \'</android.support.design.widget.CoordinatorLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\', \'tools:context=\"example.javatpoint.com.kotlinpopupmenu.MainActivity\"\', \'tools:showIn=\"@layout/activity_main\">\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Button\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin PopupMenu</string>\', \'<string name=\"action_settings\">Settings</string>\', \'<string name=\"action_cricket\">Cricket</string>\', \'<string name=\"action_football\">Football</string>\', \'<string name=\"action_hockey\">Hockey</string>\', \'</resources>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\">\', \'<item\', \'android:id=\"@+id/action_crick\"\', \'android:title=\"@string/action_cricket\"\', \'app:showAsAction=\"never\"/>\', \'<item\', \'android:id=\"@+id/action_ftbal\"\', \'android:title=\"@string/action_football\"\', \'app:showAsAction=\"never\"/>\', \'<item\', \'android:id=\"@+id/action_hockey\"\', \'android:title=\"@string/action_hockey\"\', \'app:showAsAction=\"never\"/>\', \'</menu>\', \'package example.javatpoint.com.kotlinpopupmenu\', \'import android.os.Bundle\', \'import android.support.v7.app.AppCompatActivity\', \'import android.widget.Button\', \'import android.widget.PopupMenu\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'setSupportActionBar(toolbar)\', \'val button = findViewById<Button>(R.id.button)\', \'button.setOnClickListener {\', \'val popupMenu: PopupMenu = PopupMenu(this,button)\', \'popupMenu.menuInflater.inflate(R.menu.popup_menu,popupMenu.menu)\', \'popupMenu.setOnMenuItemClickListener(PopupMenu.OnMenuItemClickListener { item ->\', \'when(item.itemId) {\', \'R.id.action_crick ->\', \'Toast.makeText(this@MainActivity, \"You Clicked : \" + item.title, Toast.LENGTH_SHORT).show()\', \'R.id.action_ftbal ->\', \'Toast.makeText(this@MainActivity, \"You Clicked : \" + item.title, Toast.LENGTH_SHORT).show()\', \'R.id.action_hockey ->\', \'Toast.makeText(this@MainActivity, \"You Clicked : \" + item.title, Toast.LENGTH_SHORT).show()\', \'}\', \'true\', \'})\', \'popupMenu.show()\', \'}\']','[]','[]','[]'),(84,'[\'Kotlin Android WebView\']','[\'Android WebView is a view component which displays the web pages in the application. It uses a WebKit engine to show the web pages. The android.webkit.WebView class is the subclass of AbsoluteLayout class.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-webview-example\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-webview.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-webview-output1.png\']','[]','[\'Kotlin Android WebView Example\']','[\'Directory structure\', \'activity_main.xml\', \'AndroidMenifest.xml\', \'MainActivity.kt\']','[]','[\'There are different ways to load the web page in WebView such as:\', \'Load the HTML content as a string in the class:\', \'Load the web page (.html, .jsp, etc.) from within the application. In such case, web pages are placed in assets directory.\', \'Load the web URL inside WebView as:\', \'In this example, we will load the web URL in the WebView component and override the URL.\', \'Add the WebView component in the activity_main.xml file. \', \'In the AndroidMenifest.xml file, add the Internet permission to connect the network connection.\', \'Add the following code in the MainActivity.kt class. In this class, we are using the loadUrl() method of WebView to load web URL. \', \'Create a MyWebViewClient class that extends the WebViewClient that override the shouldOverrideUrlLoading() method.\']','[\'The loadUrl() and loadData() methods of WebView are used to load and display the web pages. To learn more about Android WebView go to https://www.javatpoint.com/android-webview-example\']','[]','[\'val wedData: String =  \"<html><body><h1>Hello, Javatpoint!</h1></body></html>\"\', \'val mimeType: String = \"text/html\"\', \'val utfType: String = \"UTF-8\"\', \'webView.loadData(wedData,mimeType,utfType)\', \'webView.loadUrl(\"file:///android_asset/index.html\")\', \'webView.loadUrl(\"https://www.javatpoint.com/\")\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinwebview.MainActivity\">\', \'<WebView\', \'android:id=\"@+id/webView\"\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"fill_parent\"/>\', \'</LinearLayout>\', \'<uses-permission android:name=\"android.permission.INTERNET\"/>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlinwebview\">\', \'<uses-permission android:name=\"android.permission.INTERNET\"/>\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<activity android:name=\".MainActivity\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'</application>\', \'</manifest>\', \'package example.javatpoint.com.kotlinwebview\', \'import android.app.Activity\', \'import android.os.Build\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.support.annotation.RequiresApi\', \'import android.webkit.WebResourceError\', \'import android.webkit.WebResourceRequest\', \'import android.webkit.WebView\', \'import android.webkit.WebViewClient\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'/*  val wedData: String =  \"<html><body><h1>Hello, Javatpoint!</h1></body></html>\"\', \'val mimeType: String = \"text/html\"\', \'val utfType: String = \"UTF-8\"\', \'webView.loadData(wedData,mimeType,utfType)*/\', \'/* val myWebUrl: String = \"file:///android_asset/index.html\"\', \'webView.loadUrl(myWebUrl)*/\', \'webView.webViewClient = MyWebViewClient(this)\', \'webView.loadUrl(\"https://www.javatpoint.com/\")\', \'class MyWebViewClient internal constructor(private val activity: Activity) : WebViewClient() {\', \'@RequiresApi(Build.VERSION_CODES.LOLLIPOP)\', \'override fun shouldOverrideUrlLoading(view: WebView?, request: WebResourceRequest?): Boolean {\', \'val url: String = request?.url.toString();\', \'view?.loadUrl(url)\', \'return true\', \'}\', \'override fun shouldOverrideUrlLoading(webView: WebView, url: String): Boolean {\', \'webView.loadUrl(url)\', \'return true\', \'}\', \'override fun onReceivedError(view: WebView, request: WebResourceRequest, error: WebResourceError) {\', \'Toast.makeText(activity, \"Got Error! $error\", Toast.LENGTH_SHORT).show()\', \'}\']','[]','[]','[]'),(85,'[\'Kotlin Android SeekBar\']','[\'Android SeekBar is a kind of ProgressBar with a draggable thumb. The end user can drag the thumb left and right to move the progress of the song, file download etc.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-seekbar-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-seekbar-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-seekbar-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-seekbar-output4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-seekbar-output5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-seekbar-output6.png\']','[]','[\'Kotlin Android SeekBar Example\']','[\'activity_main.xml\', \'MainActivity.kt\']','[]','[\'The SeekBar.OnSeekBarChangeListener interface provides methods to perform even handling for seek bar.\', \'We can create two types of SeekBar in Android\', \'In this example, we will create the SeekBar with smooth progress and SeekBar with discrete progress point.\', \'Add the SeekBar in the activity_main.xml layout.\', \'In this class, we call the SeekBar.OnSeekBarChangeListener interface and override its methods.\']','[\'The discrete progress point of SeekBar is created using attribute style=\"@style/Widget.AppCompat.SeekBar.Discrete\" and specify the maximum point using attribute max.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinseekbar.MainActivity\">\', \'<SeekBar\', \'android:id=\"@+id/seekbar_Default\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.174\" />\', \'<SeekBar\', \'android:id=\"@+id/seekbar_Discrete\"\', \'style=\"@style/Widget.AppCompat.SeekBar.Discrete\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:max=\"10\"\', \'android:progress=\"0\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"1.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.333\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinseekbar\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.SeekBar\', \'import android.widget.Toast\', \'class MainActivity : AppCompatActivity() {\', \'var seekBarNormal: SeekBar? = null\', \'var seekBarDiscrete: SeekBar? = null\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'seekBarNormal= findViewById(R.id.seekbar_Default)\', \'seekBarDiscrete = findViewById(R.id.seekbar_Discrete)\', \'seekBarNormal?.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {\', \'override fun onProgressChanged(seekBar: SeekBar, progress: Int,\', \'fromUser: Boolean) {\', \'Toast.makeText(applicationContext, \"seekbar progress: $progress\", Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onStartTrackingTouch(seekBar: SeekBar) {\', \'Toast.makeText(applicationContext, \"seekbar touch started!\", Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onStopTrackingTouch(seekBar: SeekBar) {\', \'Toast.makeText(applicationContext, \"seekbar touch stopped!\", Toast.LENGTH_SHORT).show()\', \'}\', \'})\', \'seekBarDiscrete?.setOnSeekBarChangeListener(object :SeekBar.OnSeekBarChangeListener{\', \'override fun onProgressChanged(seekBar: SeekBar?, progress: Int, fromUser: Boolean) {\', \'Toast.makeText(applicationContext, \"discrete seekbar progress: $progress\", Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onStartTrackingTouch(seekBar: SeekBar?) {\', \'Toast.makeText(applicationContext, \"discrete seekbar touch started!\", Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onStopTrackingTouch(seekBar: SeekBar?) {\', \'Toast.makeText(applicationContext, \"discrete seekbar touch stopped\", Toast.LENGTH_SHORT).show()\', \'}\', \'})\']','[]','[]','[\'|||SeekBar with smooth progress.|||SeekBar with discrete progress point.|||\']'),(86,'[\'Kotlin Android TabLayout with FrameLayout\']','[\'Android TabLayout is a Layout which is used to build horizontal tabs. In the tutorial,  Android TabLayout with ViewPager we create the tabs of TabLayout using the newTab() method but the tabs are also be implemented using android.support.design.widget.TabItem in layout activity.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-tablayout-with-viewpager\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-framelayout-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-framelayout-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-framelayout-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-framelayout-output4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-framelayout-output5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-framelayout-output6.png\']','[]','[\'Kotlin Android TabLayout with FrameLayout Example\']','[\'build.gradle\', \'activity_main.xml\', \'strings.xml\', \'colors.xml\', \'MainActivity.kt\', \'fragment_java.xml\', \'MainActivity.kt\', \'fragment_android.xml\', \'AndroidFragment.kt\', \'fragment_kotlin.xml\', \'KotlinFragment.kt\', \'fragment_php.xml\', \'PhpFragment.kt\', \'fragment_python.xml\', \'PythonFragment.kt\']','[]','[\'The title and icon of tabs are provided by implementing the text and icon attribute respectively. \', \'In this example, we will create the TabLayout using TabItem with FrameLayout.\', \'Add the following dependency in the build.gradle file.\', \'Add the TabLayout, TabItem, and FrameLayout in the activity_main.xml layout file.\', \'Create the FrameLayout for each fragment as New -> Fragment -> Fragment (Blank).\']','[\'To provide the space for each tab of TabLayout, we can use the FrameLayout. FrameLayout is designed to cover the area on the screen to display a single item.\', \'Add the following code in MainActivity.kt class. In this class, we create the instance of TabLayout and FrameLayout. Calling the addOnTabSelectedListener() listener of TabLayout and overrides its methods.\']','[]','[\"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \'implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.android.support.constraint:constraint-layout:1.1.3\'\", \"implementation \'com.android.support:support-v4:26.1.0\'\", \"testImplementation \'junit:junit:4.12\'\", \"implementation \'com.android.support:design:26.1.0\'\", \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutwithframelayout.MainActivity\">\', \'<android.support.design.widget.TabLayout\', \'android:id=\"@+id/tabLayout\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:background=\"#00a294\"\', \'app:tabTextColor=\"@android:color/background_light\">\', \'<android.support.design.widget.TabItem\', \'android:id=\"@+id/tabJava\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Java\" />\', \'<android.support.design.widget.TabItem\', \'android:id=\"@+id/tabAndroid\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Android\" />\', \'<android.support.design.widget.TabItem\', \'android:id=\"@+id/tabKotlin\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Kotlin\" />\', \'<android.support.design.widget.TabItem\', \'android:id=\"@+id/tabPhp\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Php\" />\', \'<android.support.design.widget.TabItem\', \'android:id=\"@+id/tabPython\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Python\" />\', \'</android.support.design.widget.TabLayout>\', \'<FrameLayout\', \'android:id=\"@+id/frameLayout\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/tabLayout\">\', \'</FrameLayout>\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin TabLayout with FrameLayout</string>\', \'<string name=\"java_fragment\">Java fragment</string>\', \'<string name=\"android_fragment\">Android fragment</string>\', \'<string name=\"kotlin_fragment\">Kotlin fragment</string>\', \'<string name=\"php_fragment\">Php fragment</string>\', \'<string name=\"python_fragment\">Python fragment</string>\', \'</resources>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<resources>\', \'<color name=\"colorPrimary\">#03DAC6</color>\', \'<color name=\"colorPrimaryDark\">#aeded9</color>\', \'<color name=\"colorAccent\">#00a294</color>\', \'</resources>\', \'package example.javatpoint.com.kotlintablayoutwithframelayout\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.support.design.widget.TabLayout\', \'import android.support.v4.app.Fragment\', \'import android.support.v4.app.FragmentManager\', \'import android.support.v4.app.FragmentTransaction\', \'import android.widget.FrameLayout\', \'class MainActivity : AppCompatActivity() {\', \'var tabLayout: TabLayout? = null\', \'var frameLayout: FrameLayout? = null\', \'var fragment: Fragment? = null\', \'var fragmentManager: FragmentManager? = null\', \'var fragmentTransaction: FragmentTransaction? = null\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'tabLayout = findViewById<TabLayout>(R.id.tabLayout)\', \'frameLayout = findViewById<FrameLayout>(R.id.frameLayout)\', \'fragment = JavaFragment()\', \'fragmentManager = supportFragmentManager\', \'fragmentTransaction = fragmentManager!!.beginTransaction()\', \'fragmentTransaction!!.replace(R.id.frameLayout, fragment)\', \'fragmentTransaction!!.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)\', \'fragmentTransaction!!.commit()\', \'tabLayout!!.addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener {\', \'override fun onTabSelected(tab: TabLayout.Tab) {\', \'when (tab.position) {\', \'0 -> fragment = JavaFragment()\', \'1 -> fragment = AndroidFragment()\', \'2 -> fragment = KotlinFragment()\', \'3 -> fragment = PhpFragment()\', \'4 -> fragment = PythonFragment()\', \'}\', \'val fm = supportFragmentManager\', \'val ft = fm.beginTransaction()\', \'ft.replace(R.id.frameLayout, fragment)\', \'ft.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)\', \'ft.commit()\', \'}\', \'override fun onTabUnselected(tab: TabLayout.Tab) {\', \'}\', \'override fun onTabReselected(tab: TabLayout.Tab) {\', \'}\', \'})\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutwithframelayout.JavaFragment\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/java_fragment\" />\', \'<Button\', \'android:id=\"@+id/androidButton\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_gravity=\"center|bottom\"\', \'android:text=\"Click Me\"/>\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutwithframelayout\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.fragment_android.view.*\', \'class JavaFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'val view: View = inflater!!.inflate(R.layout.fragment_java, container, false)\', \'view.androidButton!!.setOnClickListener(View.OnClickListener {\', \'Toast.makeText(context,\"java fragment\", Toast.LENGTH_SHORT).show()\', \'})\', \'return view\', \'}// Required empty public constructor\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutwithframelayout.AndroidFragment\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/android_fragment\" />\', \'<Button\', \'android:id=\"@+id/androidButton\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_gravity=\"center|bottom\"\', \'android:text=\"Click Me\"/>\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutwithframelayout\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.fragment_android.view.*\', \'class AndroidFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'val view: View = inflater!!.inflate(R.layout.fragment_android, container, false)\', \'view.androidButton!!.setOnClickListener(View.OnClickListener {\', \'Toast.makeText(context,\"android fragment\",Toast.LENGTH_SHORT).show()\', \'})\', \'return view\', \'}// Required empty public constructor\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutwithframelayout.KotlinFragment\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/kotlin_fragment\" />\', \'<Button\', \'android:id=\"@+id/androidButton\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_gravity=\"center|bottom\"\', \'android:text=\"Click Me\"/>\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutwithframelayout\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.fragment_android.view.*\', \'class KotlinFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'val view: View = inflater!!.inflate(R.layout.fragment_kotlin, container, false)\', \'view.androidButton!!.setOnClickListener(View.OnClickListener {\', \'Toast.makeText(context,\"kotlin fragment\", Toast.LENGTH_SHORT).show()\', \'})\', \'return view\', \'}// Required empty public constructor\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutwithframelayout.PhpFragment\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/php_fragment\" />\', \'<Button\', \'android:id=\"@+id/androidButton\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_gravity=\"center|bottom\"\', \'android:text=\"Click Me\"/>\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutwithframelayout\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.fragment_android.view.*\', \'class PhpFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'val view: View = inflater!!.inflate(R.layout.fragment_php, container, false)\', \'view.androidButton!!.setOnClickListener(View.OnClickListener {\', \'Toast.makeText(context,\"php fragment\", Toast.LENGTH_SHORT).show()\', \'})\', \'return view\', \'}// Required empty public constructor\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutwithframelayout.PythonFragment\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/python_fragment\" />\', \'<Button\', \'android:id=\"@+id/androidButton\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_gravity=\"center|bottom\"\', \'android:text=\"Click Me\"/>\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutwithframelayout\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.fragment_android.view.*\', \'class PythonFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'val view: View = inflater!!.inflate(R.layout.fragment_python, container, false)\', \'view.androidButton!!.setOnClickListener(View.OnClickListener {\', \'Toast.makeText(context,\"python fragment\", Toast.LENGTH_SHORT).show()\', \'})\', \'return view\', \'}// Required empty public constructor\']','[]','[]','[]'),(87,'[\'Kotlin Android TabLayout with ViewPager\']','[\'Android TabLayout is a Layout which is used to build horizontal tabs. The tabs for the TabLayout is created using the newTab() method. To display this tab over the layout, we need to add this tab using addTab(Tab) method.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-viewpager-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-viewpager-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-tablayout-with-viewpager-output3.png\']','[]','[\'Kotlin Android TabLayout with ViewPager Example\']','[\'build.gradel\', \'activity_main.xml\', \'strings.xml\', \'colors.xml\', \'MainActivity.kt\', \'MyAdapter.kt\', \'fragment_home.xml\', \'HomeFragment.kt\', \'fragment_sport.xml\', \'SportFragment.kt\', \'fragment_movie.xml\', \'MovieFragment.kt\']','[]','[\'Using the methods setText(int) and setIcon(int) we set the title and icon of TabLayout respectively.\', \'We can also integrate the ViewPager with TabLayout. ViewPager provides smooth sliding of tabs over layout.\', \'In this example, we will create a TabLayout with ViewPager.\', \'Add the following dependency in the build.gradle file.\', \'Add the TabLayout and ViewPager in the activity_main.xml file.\', \'Call the addOnPageChangeListener() listener of ViewPager to load the tabs on page change.\', \'Create an adapter class MyAdapter.kt and extends FragmentPagerAdapter() class and returns the Fragment. Add this adapter class over ViewPager.\', \'Create a fragment as New -> Fragment -> Fragment (Blank).\']','[\'Add the following code in MainActivity.kt class. In this class, the new tab is created using tabLayout!!.newTab() method and this tab is added over TabLayout using tabLayout!!.addTab(Tab). \']','[]','[\"implementation \'com.android.support:design:26.1.0\'\", \"implementation \'com.android.support:support-v4:26.1.0\'\", \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutexample.MainActivity\">\', \'<android.support.design.widget.TabLayout\', \'android:id=\"@+id/tabLayout\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:background=\"#00a294\"\', \'app:tabTextColor=\"@android:color/background_light\">\', \'</android.support.design.widget.TabLayout>\', \'<android.support.v4.view.ViewPager\', \'android:id=\"@+id/viewPager\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/tabLayout\">\', \'</android.support.v4.view.ViewPager>\', \'</android.support.constraint.ConstraintLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin TabLayout Example</string>\', \'<!-- TODO: Remove or change this placeholder text -->\', \'<string name=\"home_fragment\">Home Fragment</string>\', \'<string name=\"sport_fragment\">Sport Fragment</string>\', \'<string name=\"movie_fragment\">Movie Fragment</string>\', \'</resources>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<resources>\', \'<color name=\"colorPrimary\">#03DAC6</color>\', \'<color name=\"colorPrimaryDark\">#aeded9</color>\', \'<color name=\"colorAccent\">#00a294</color>\', \'</resources>\', \'package example.javatpoint.com.kotlintablayoutexample\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.support.design.widget.TabLayout\', \'import android.support.v4.view.ViewPager\', \'class MainActivity : AppCompatActivity() {\', \'var tabLayout: TabLayout? = null\', \'var viewPager: ViewPager? = null\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'tabLayout = findViewById<TabLayout>(R.id.tabLayout)\', \'viewPager = findViewById<ViewPager>(R.id.viewPager)\', \'tabLayout!!.addTab(tabLayout!!.newTab().setText(\"Home\"))\', \'tabLayout!!.addTab(tabLayout!!.newTab().setText(\"Sport\"))\', \'tabLayout!!.addTab(tabLayout!!.newTab().setText(\"Movie\"))\', \'tabLayout!!.tabGravity = TabLayout.GRAVITY_FILL\', \'val adapter = MyAdapter(this, supportFragmentManager, tabLayout!!.tabCount)\', \'viewPager!!.adapter = adapter\', \'viewPager!!.addOnPageChangeListener(TabLayout.TabLayoutOnPageChangeListener(tabLayout))\', \'tabLayout!!.addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener {\', \'override fun onTabSelected(tab: TabLayout.Tab) {\', \'viewPager!!.currentItem = tab.position\', \'}\', \'override fun onTabUnselected(tab: TabLayout.Tab) {\', \'}\', \'override fun onTabReselected(tab: TabLayout.Tab) {\', \'}\', \'})\', \'package example.javatpoint.com.kotlintablayoutexample\', \'import android.support.v4.app.FragmentPagerAdapter\', \'import android.content.Context;\', \'import android.support.v4.app.Fragment\', \'import android.support.v4.app.FragmentManager\', \'class MyAdapter(private val myContext: Context, fm: FragmentManager, internal var totalTabs: Int) : FragmentPagerAdapter(fm) {\', \'override fun getItem(position: Int): Fragment? {\', \'when (position) {\', \'0 -> {\', \'return HomeFragment()\', \'}\', \'1 -> {\', \'return SportFragment()\', \'}\', \'2 -> {\', \'return MovieFragment()\', \'}\', \'else -> return null\', \'}\', \'override fun getCount(): Int {\', \'return totalTabs\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/home_fragment\" />\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutexample\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'class HomeFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'return inflater!!.inflate(R.layout.fragment_home, container, false)\', \'}// Required empty public constructor\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/sport_fragment\" />\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutexample\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.ViewGroup\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'class SportFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'return inflater!!.inflate(R.layout.fragment_sport, container, false)\', \'}// Required empty public constructor   Required empty public constructor\', \'<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlintablayoutexample.MovieFragment\">\', \'<!-- TODO: Update blank fragment layout -->\', \'<TextView\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:textSize=\"20sp\"\', \'android:text=\"@string/movie_fragment\" />\', \'</FrameLayout>\', \'package example.javatpoint.com.kotlintablayoutexample\', \'import android.os.Bundle\', \'import android.support.v4.app.Fragment\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'class MovieFragment : Fragment() {\', \'override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?,\', \'savedInstanceState: Bundle?): View? {\', \'return inflater!!.inflate(R.layout.fragment_movie, container, false)\', \'}// Required empty public constructor\']','[]','[]','[]'),(88,'[\'Kotlin Android XML Parsing using DOM Parser\']','[\'XML document is commonly used to share the data on the internet. The data provided in XML format are able to update frequently and parsing them is a common task for network-based apps.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-xml-parsing-using-sax-parser \', \'https://www.javatpoint.com/link of kotlin-android-xmlpullparser-tutorial\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-xml-parsing-using-dom-parser-output1.png\']','[]','[\'Example of XML Parsing using DOM Parser \']','[\'activity_main.xml\', \'empdetail.xml\', \'custom_list.xml\', \'MainActivity.kt\']','[]','[\'In Android, there are three types of XML parsers to parse the XML data and read them in android applications, these are: \', \'In this example, we parse XML data and display them into ListView.\', \'Add the ListView in the activity_main.xml layout.\', \'Create the XML document empdetail.xml in assets directory to parse the data using DOM parser.\', \'Create a custom layout to display the list of data into ListView.\', \'The HashMap<String, String> is used to read the data from XML document and add them into ArrayList().\']','[\'Android DOM (Document Object Model) parser uses an object-based approach to create and parse the XML files in android applications. The DOM parser loads the XML file into memory to parse the XML document. Due to this reason, it consumes more memory.\', \'Add the following code to read and parse the XML data using DOM parser. Create the instance of DocumentBuilderFactory, DocumentBuilder and Document objects.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinxmlparsingusingdomparser.MainActivity\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'</ListView>\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<records>\', \'<employee>\', \'<name>Sachin Kumar</name>\', \'<salary>50000</salary>\', \'<designation>Developer</designation>\', \'</employee>\', \'<employee>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'<designation>Team Leader</designation>\', \'</employee>\', \'<employee>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'<designation>Manager</designation>\', \'</employee>\', \'<employee>\', \'<name>Ajay Kumar</name>\', \'<salary>45000</salary>\', \'<designation>Developer</designation>\', \'</employee>\', \'<employee>\', \'<name>Toni Nayer</name>\', \'<salary>55000</salary>\', \'<designation>Marketing</designation>\', \'</employee>\', \'<employee>\', \'<name>Mr Bony</name>\', \'<salary>42000</salary>\', \'<designation>Sales</designation>\', \'</employee>\', \'<employee>\', \'<name>Raj Kumar</name>\', \'<salary>30000</salary>\', \'<designation>Production</designation>\', \'</employee>\', \'<employee>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'<designation>Team Leader</designation>\', \'</employee>\', \'<employee>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'<designation>Manager</designation>\', \'</employee>\', \'<employee>\', \'<name>Sachin Kumar</name>\', \'<salary>50000</salary>\', \'<designation>Developer</designation>\', \'</employee>\', \'<employee>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'<designation>Team Leader</designation>\', \'</employee>\', \'<employee>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'<designation>Manager</designation>\', \'</employee>\', \'</records>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:orientation=\"horizontal\">\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_weight=\"1\"\', \'android:orientation=\"vertical\">\', \'<TextView\', \'android:id=\"@+id/name\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"name\"\', \'android:textStyle=\"bold\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<TextView\', \'android:id=\"@+id/salary\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"salary\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:layout_marginTop=\"5dp\"\', \'android:textSize=\"16sp\"/>\', \'<TextView\', \'android:id=\"@+id/designation\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"designation\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:layout_marginTop=\"5dp\"\', \'android:textSize=\"16sp\"/>\', \'</LinearLayout>\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlinxmlparsingusingdomparser\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.ListView\', \'import android.widget.SimpleAdapter\', \'import org.w3c.dom.Element\', \'import org.w3c.dom.Node\', \'import org.xml.sax.SAXException\', \'import java.io.IOException\', \'import javax.xml.parsers.DocumentBuilderFactory\', \'import javax.xml.parsers.ParserConfigurationException\', \'class MainActivity : AppCompatActivity() {\', \'var empDataHashMap = HashMap<String, String>()\', \'var empList: ArrayList<HashMap<String, String>> = ArrayList()\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'try {\', \'val lv = findViewById<ListView>(R.id.listView)\', \'val istream = assets.open(\"empdetail.xml\")\', \'val builderFactory = DocumentBuilderFactory.newInstance()\', \'val docBuilder = builderFactory.newDocumentBuilder()\', \'val doc = docBuilder.parse(istream)\', \'val nList = doc.getElementsByTagName(\"employee\")\', \'for (i in 0 until nList.getLength()) {\', \'if (nList.item(0).getNodeType().equals(Node.ELEMENT_NODE) ) {\', \'empDataHashMap = HashMap()\', \'val element = nList.item(i) as Element\', \'empDataHashMap.put(\"name\", getNodeValue(\"name\", element))\', \'empDataHashMap.put(\"salary\", getNodeValue(\"salary\", element))\', \'empDataHashMap.put(\"designation\", getNodeValue(\"designation\", element))\', \'empList.add(empDataHashMap)\', \'}\', \'}\', \'val adapter = SimpleAdapter(this@MainActivity, empList, R.layout.custom_list, arrayOf(\"name\", \"salary\", \"designation\"), intArrayOf(R.id.name, R.id.salary, R.id.designation))\', \'lv.setAdapter(adapter)\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'} catch (e: ParserConfigurationException) {\', \'e.printStackTrace()\', \'} catch (e: SAXException) {\', \'e.printStackTrace()\', \'}\', \'protected fun getNodeValue(tag: String, element: Element): String {\', \'val nodeList = element.getElementsByTagName(tag)\', \'val node = nodeList.item(0)\', \'if (node != null) {\', \'if (node.hasChildNodes()) {\', \'val child = node.getFirstChild()\', \'while (child != null) {\', \'if (child.getNodeType() === Node.TEXT_NODE) {\', \'return child.getNodeValue()\', \'}\', \'}\', \'}\', \'}\', \'return \"\"\']','[]','[]','[\'|||DOM Parser|||SAX Parser|||XMLPullParser|||\']'),(89,'[\'Kotlin Android XML Parsing using SAX Parser\']','[\'XML document is commonly used to share the data on the internet. The data provided in the XML format are able to update frequently and parsing them is a common task for network-based apps.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-xml-parsing-using-dom-parser\', \'https://www.javatpoint.com/kotlin-android-xmlpullparser-tutorial\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-xml-parsing-using-sax-parser-output1.png\']','[]','[\'Example of XML Parsing using SAX Parser\']','[\'activity_main.xml\', \'empdetail.xml\', \'custom_list.xml\', \'MainActivity.kt\']','[]','[\'In Android, there are three types of XML parsers to parse the XML data and read them in android applications, these are:\', \'In this example, we will parse the XML data using SAX parser and display them into ListView.\', \'Add the ListView in the activity_main.xml layout.\', \'Create the XML document empdetail.xml in assets directory to parse the data using SAX parser.\', \'Create a custom layout to display the list of data into ListView.\', \'The HashMap<String, String> is used to read the data from XML document and add them into ArrayList(). \']','[\'Add the following code to read and parse the XML data using SAX parser. Create the instance of SAXParserFactory, SAXParser and DefaultHandler objects.\']','[\'In Android, SAX (Simple API for XML) is widely used API for XML parsing. The SAX parser will examines an XML document, character by character and translates it into a series of events such as startElement(), endElement() and characters(). To read and parse the XML data using SAX parser, we need to create an instance of SAXParserFactory, SAXParser and DefaultHandler objects in android applications.\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinxmlparsingusingsaxparser.MainActivity\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'</ListView>\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<records>\', \'<employee>\', \'<name>Sachin Kumar</name>\', \'<salary>50000</salary>\', \'<designation>Developer</designation>\', \'</employee>\', \'<employee>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'<designation>Team Leader</designation>\', \'</employee>\', \'<employee>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'<designation>Manager</designation>\', \'</employee>\', \'<employee>\', \'<name>Ajay Kumar</name>\', \'<salary>45000</salary>\', \'<designation>Developer</designation>\', \'</employee>\', \'<employee>\', \'<name>Toni Nayer</name>\', \'<salary>55000</salary>\', \'<designation>Marketing</designation>\', \'</employee>\', \'<employee>\', \'<name>Mr Bony</name>\', \'<salary>42000</salary>\', \'<designation>Sales</designation>\', \'</employee>\', \'<employee>\', \'<name>Raj Kumar</name>\', \'<salary>30000</salary>\', \'<designation>Production</designation>\', \'</employee>\', \'<employee>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'<designation>Team Leader</designation>\', \'</employee>\', \'<employee>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'<designation>Manager</designation>\', \'</employee>\', \'<employee>\', \'<name>Sachin Kumar</name>\', \'<salary>50000</salary>\', \'<designation>Developer</designation>\', \'</employee>\', \'<employee>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'<designation>Team Leader</designation>\', \'</employee>\', \'<employee>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'<designation>Manager</designation>\', \'</employee>\', \'</records>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:orientation=\"horizontal\">\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_weight=\"1\"\', \'android:orientation=\"vertical\">\', \'<TextView\', \'android:id=\"@+id/name\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"name\"\', \'android:textStyle=\"bold\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<TextView\', \'android:id=\"@+id/salary\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"salary\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:layout_marginTop=\"5dp\"\', \'android:textSize=\"16sp\"/>\', \'<TextView\', \'android:id=\"@+id/designation\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"designation\"\', \'android:layout_marginLeft=\"15dp\"\', \'android:layout_marginStart=\"15dp\"\', \'android:layout_marginTop=\"5dp\"\', \'android:textSize=\"16sp\"/>\', \'</LinearLayout>\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlinxmlparsingusingsaxparser\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import org.xml.sax.helpers.DefaultHandler\', \'import javax.xml.parsers.SAXParserFactory\', \'import android.widget.ListView\', \'import android.widget.SimpleAdapter\', \'import org.xml.sax.SAXException\', \'import java.io.IOException\', \'import java.util.ArrayList\', \'import java.util.HashMap\', \'import javax.xml.parsers.ParserConfigurationException\', \'import javax.xml.parsers.SAXParser\', \'class MainActivity : AppCompatActivity() {\', \'internal var empList = ArrayList<HashMap<String, String>>()\', \'internal var empData = HashMap<String, String>()\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val lv:ListView = findViewById(R.id.listView)\', \'try {\', \'val parserFactory:SAXParserFactory = SAXParserFactory.newInstance()\', \'val saxParser:SAXParser = parserFactory.newSAXParser()\', \'val defaultHandler= object : DefaultHandler() {\', \'var currentValue = \"\"\', \'var currentElement = false\', \'override fun startElement(uri: String, localName: String, qName: String, attributes: org.xml.sax.Attributes) {\', \'currentElement = true\', \'currentValue = \"\"\', \'if (localName == \"employee\") {\', \'empData = HashMap()\', \'}\', \'}\', \'override fun endElement(uri: String, localName: String, qName: String) {\', \'currentElement = false\', \'if (localName.equals(\"name\", ignoreCase = true))\', \'empData[\"name\"] = currentValue\', \'else if (localName.equals(\"salary\", ignoreCase = true))\', \'empData[\"salary\"] = currentValue\', \'else if (localName.equals(\"designation\", ignoreCase = true))\', \'empData[\"designation\"] = currentValue\', \'else if (localName.equals(\"employee\", ignoreCase = true))\', \'empList.add(empData)\', \'}\', \'override fun characters(ch: CharArray, start: Int, length: Int) {\', \'if (currentElement) {\', \'currentValue = currentValue + String(ch, start, length)\', \'}\', \'}\', \'}\', \'val istream = assets.open(\"empdetail.xml\")\', \'saxParser.parse(istream, defaultHandler)\', \'val adapter = SimpleAdapter(this@MainActivity, empList, R.layout.custom_list, arrayOf(\"name\", \"salary\", \"designation\"), intArrayOf(R.id.name, R.id.salary, R.id.designation))\', \'lv.adapter = adapter\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'} catch (e: ParserConfigurationException) {\', \'e.printStackTrace()\', \'} catch (e: SAXException) {\', \'e.printStackTrace()\', \'}\']','[]','[]','[\'|||DOM Parser|||SAX Parser|||XMLPullParser|||\']'),(90,'[\'Kotlin Android XMLPullParser Tutorial\']','[\'XML document is commonly used to share the data on the internet. The data provided in XML format are able to update frequently and parsing them is a common task for network-based apps.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-xml-parsing-using-dom-parser\', \'https://www.javatpoint.com/kotlin-android-xml-parsing-using-sax-parser\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-xmlpullparser-tutorial-output1.png\']','[]','[\'Events of XmlPullParser\', \'Example of XML Parsing using XMLPullParser\']','[\'activity_main.xml\', \'employees.xml\', \'Employee.kt\', \'XmlPullParserHandler.kt\', \'MainActivity.kt\']','[]','[\'In android, there are three types of XML parsers to parse the XML data and read them in android applications.\', \'These parsers are:\', \'Android recommends to use XMLPullParser to parse the XML file rather than SAX and DOM because it is fast.\', \'The org.xmlpull.v1.XmlPullParser interface provides the functionality to parse the XML document using XMLPullParser.\', \'In this example, we read the XML data and bind them into a ListView using XMLPullParser.\', \'Add the ListView in the activity_main.xml layout.\', \'Create the XML document employees.xml in assets directory to parse the data using XMLPullParser.\', \'Create a data model class Employee.kt corresponds to the XML data file.\', \'Write the code to parse the XML file using XMLPullParser. In this class, we return all the employees in the list.\', \'In this class, we send XML data into ArrayAdapter and bind them into ListView.\']','[\'The next() method of XMLPullParser moves the cursor pointer to the next event. Generally, we use four constants (works as the event) defined in the XMLPullParser interface.\']','[]','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinxmlparsingusingxmlpullparser.MainActivity\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\" >\', \'</ListView>\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\', \'<employees>\', \'<employee>\', \'<id>1</id>\', \'<name>Sachin Kumar</name>\', \'<salary>50000</salary>\', \'</employee>\', \'<employee>\', \'<id>2</id>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'</employee>\', \'<employee>\', \'<id>3</id>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'</employee>\', \'<employee>\', \'<id>4</id>\', \'<name>Ajay Kumar</name>\', \'<salary>45000</salary>\', \'</employee>\', \'<employee>\', \'<id>5</id>\', \'<name>Toni Nayer</name>\', \'<salary>55000</salary>\', \'</employee>\', \'<employee>\', \'<id>6</id>\', \'<name>Mr Bony</name>\', \'<salary>42000</salary>\', \'</employee>\', \'<employee>\', \'<id>7</id>\', \'<name>Raj Kumar</name>\', \'<salary>30000</salary>\', \'</employee>\', \'<employee>\', \'<id>8</id>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'</employee>\', \'<employee>\', \'<id>9</id>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'</employee>\', \'<employee>\', \'<id>10</id>\', \'<name>Sachin Kumar</name>\', \'<salary>50000</salary>\', \'</employee>\', \'<employee>\', \'<id>11</id>\', \'<name>Rahul Kumar</name>\', \'<salary>60000</salary>\', \'</employee>\', \'<employee>\', \'<id>12</id>\', \'<name>John Mike</name>\', \'<salary>70000</salary>\', \'</employee>\', \'</employees>\', \'package example.javatpoint.com.kotlinxmlparsingusingxmlpullparser\', \'class Employee {\', \'var id: Int = 0\', \'var name: String? = null\', \'var salary: Float = 0.toFloat()\', \'override fun toString(): String {\', \'return \" Id = $id\\n Name = $name\\n Salary = $salary\"\', \'package example.javatpoint.com.kotlinxmlparsingusingxmlpullparser\', \'import org.xmlpull.v1.XmlPullParserException\', \'import org.xmlpull.v1.XmlPullParser\', \'import org.xmlpull.v1.XmlPullParserFactory\', \'import java.io.IOException\', \'import java.io.InputStream\', \'class XmlPullParserHandler {\', \'private val employees = ArrayList<Employee>()\', \'private var employee: Employee? = null\', \'private var text: String? = null\', \'fun parse(inputStream: InputStream): List<Employee> {\', \'try {\', \'val factory = XmlPullParserFactory.newInstance()\', \'factory.isNamespaceAware = true\', \'val parser = factory.newPullParser()\', \'parser.setInput(inputStream, null)\', \'var eventType = parser.eventType\', \'while (eventType != XmlPullParser.END_DOCUMENT) {\', \'val tagname = parser.name\', \'when (eventType) {\', \'XmlPullParser.START_TAG -> if (tagname.equals(\"employee\", ignoreCase = true)) {\', \'employee = Employee()\', \'}\', \'XmlPullParser.TEXT -> text = parser.text\', \'XmlPullParser.END_TAG -> if (tagname.equals(\"employee\", ignoreCase = true)) {\', \'employee?.let { employees.add(it) }\', \'} else if (tagname.equals(\"id\", ignoreCase = true)) {\', \'employee!!.id = Integer.parseInt(text)\', \'} else if (tagname.equals(\"name\", ignoreCase = true)) {\', \'employee!!.name = text\', \'} else if (tagname.equals(\"salary\", ignoreCase = true)) {\', \'employee!!.salary = java.lang.Float.parseFloat(text)\', \'}\', \'else -> {\', \'}\', \'}\', \'eventType = parser.next()\', \'}\', \'} catch (e: XmlPullParserException) {\', \'e.printStackTrace()\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'}\', \'return employees\', \'package example.javatpoint.com.kotlinxmlparsingusingxmlpullparser\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.ArrayAdapter\', \'import android.widget.ListView\', \'import java.io.IOException\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val listView = findViewById<ListView>(R.id.listView)\', \'var employees: List<Employee>? = null\', \'try {\', \'val parser = XmlPullParserHandler()\', \'val istream = assets.open(\"employees.xml\")\', \'employees = parser.parse(istream)\', \'val adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, employees)\', \'listView.adapter = adapter\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'}\']','[]','[]','[\'|||DOM Parser|||SAX Parser |||XMLPullParser||||||START_TAG: An XML start tag will read.|||TEXT: Text content was read the text content can be retrieved using the getText() method.|||END_TAG: An end tag will read.|||END_DOCUMENT: No more events are available.|||\']'),(91,'[\'Kotlin Android JSON Parsing using URL\']','[\'JSON refers to JavaScript Object Notation, and it is a programming language. JSON is used to parse the data between the server and the client. It is minimal, textual and a subset of JavaScript. It is the alternative to XML parsing.\']','[\'https://www.javatpoint.com/kotlin-android-media-player\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-media-player\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-media-player\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-json-parsing-using-url.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-json-parsing-using-url-output1.png\']','[]','[\'Kotlin JSON Parsing using URL Example\']','[\'The advantage of JSON over XML\', \'JSON Object\', \'JSON data index.html\', \'activity_main.xml\', \'build.gradle\', \'Model.kt\', \'adapter_layout.xml\', \'CustomAdapter.kt\', \'MainActivity.kt\', \'AndroidManifest.xml\']','[]','[\'In this example, we parse the JSON data from URL and bind them into a ListView. The JSON data contains the \"id\" \"name\" \"email\".\', \'Create a JSON file index.html.\', \'While executing the JSON file (index.html) looks like as:\', \'Add the ListView in the activity_main.xml layout file.\', \'Add the following okhttp dependency in the build.gradle file.\', \'Create a data model class Model.kt which includes the information String \"id\", String \"name\" and String \"email\".\', \'Create an adapter_layout.xml file in the layout directory which contains the row items for ListView.\', \'Create a custom adapter class CustomAdapter.kt and extend BaseAdapter to handle the custom ListView.\', \'Add the Internet permission in AndroidManifest.xml file.\']','[\'A JSON object contains key/value pairs like a map. The keys are strings and the values are the JSON types. A comma separates keys and values (,). The curly brace {} represents the JSON object.\', \'Add the following code in MainActivity.kt class file. This class read the JSON data in the form of a JSON object. Using the JSON object, we read the JSON array data. The JSON data are bind in ArrayList.\']','[]','[\'{\"info\":[\', \'{\"name\":\"Ajay\",\"id\":\"111\",\"email\":\"ajay@gmail.com\"},\', \'{\"name\":\"John\",\"id\":\"112\",\"email\":\"john@gmail.com\"},\', \'{\"name\":\"Rahul\",\"id\":\"113\",\"email\":\"rahul@gmail.com\"},\', \'{\"name\":\"Maich\",\"id\":\"114\",\"email\":\"maich@gmail.com\"},\', \'{\"name\":\"Vikash\",\"id\":\"115\",\"email\":\"vikash@gmail.com\"},\', \'{\"name\":\"Mayank\",\"id\":\"116\",\"email\":\"mayank@gmail.com\"},\', \'{\"name\":\"Prem\",\"id\":\"117\",\"email\":\"prem@gmail.com\"},\', \'{\"name\":\"Chandan\",\"id\":\"118\",\"email\":\"chandan@gmail.com\"},\', \'{\"name\":\"Soham\",\"id\":\"119\",\"email\":\"soham@gmail.com\"},\', \'{\"name\":\"Mukesh\",\"id\":\"120\",\"email\":\"mukesh@gmail.com\"},\', \'{\"name\":\"Ajad\",\"id\":\"121\",\"email\":\"ajad@gmail.com\"}\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinjsonparsing.MainActivity\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'</ListView>\', \'</android.support.constraint.ConstraintLayout>\', \"compile \'com.squareup.okhttp3:okhttp:3.8.1\'\", \'package example.javatpoint.com.kotlinjsonparsing\', \'public class Model{\', \'lateinit var id:String\', \'lateinit var name:String\', \'lateinit var email:String\', \'constructor(id: String,name:String,email:String) {\', \'this.id = id\', \'this.name = name\', \'this.email = email\', \'constructor()\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/linearLayout\"\', \'android:padding=\"5dp\"\', \'android:orientation=\"vertical\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/tvId\"\', \'android:layout_margin=\"5dp\"\', \'android:textSize=\"16dp\"/>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/tvName\"\', \'android:textSize=\"16dp\"\', \'android:layout_margin=\"5dp\"/>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/tvEmail\"\', \'android:layout_margin=\"5dp\"\', \'android:textSize=\"16dp\"/>\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlinjsonparsing\', \'import android.content.Context\', \'import android.view.LayoutInflater\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.BaseAdapter\', \'import android.widget.LinearLayout\', \'import android.widget.TextView\', \'class CustomAdapter(context: Context,arrayListDetails:ArrayList<Model>) : BaseAdapter(){\', \'private val layoutInflater: LayoutInflater\', \'private val arrayListDetails:ArrayList<Model>\', \'init {\', \'this.layoutInflater = LayoutInflater.from(context)\', \'this.arrayListDetails=arrayListDetails\', \'override fun getCount(): Int {\', \'return arrayListDetails.size\', \'override fun getItem(position: Int): Any {\', \'return arrayListDetails.get(position)\', \'override fun getItemId(position: Int): Long {\', \'return position.toLong()\', \'override fun getView(position: Int, convertView: View?, parent: ViewGroup): View? {\', \'val view: View?\', \'val listRowHolder: ListRowHolder\', \'if (convertView == null) {\', \'view = this.layoutInflater.inflate(R.layout.adapter_layout, parent, false)\', \'listRowHolder = ListRowHolder(view)\', \'view.tag = listRowHolder\', \'} else {\', \'view = convertView\', \'listRowHolder = view.tag as ListRowHolder\', \'}\', \'listRowHolder.tvName.text = arrayListDetails.get(position).name\', \'listRowHolder.tvEmail.text = arrayListDetails.get(position).email\', \'listRowHolder.tvId.text = arrayListDetails.get(position).id\', \'return view\', \'private class ListRowHolder(row: View?) {\', \'public val tvName: TextView\', \'public val tvEmail: TextView\', \'public val tvId: TextView\', \'public val linearLayout: LinearLayout\', \'init {\', \'this.tvId = row?.findViewById<TextView>(R.id.tvId) as TextView\', \'this.tvName = row?.findViewById<TextView>(R.id.tvName) as TextView\', \'this.tvEmail = row?.findViewById<TextView>(R.id.tvEmail) as TextView\', \'this.linearLayout = row?.findViewById<LinearLayout>(R.id.linearLayout) as LinearLayout\', \'package example.javatpoint.com.kotlinjsonparsing\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.widget.ListView\', \'import android.widget.ProgressBar\', \'import okhttp3.*\', \'import org.json.JSONArray\', \'import org.json.JSONObject\', \'import java.io.IOException\', \'import kotlin.collections.ArrayList\', \'class MainActivity : AppCompatActivity() {\', \'lateinit var progress:ProgressBar\', \'lateinit var listView_details: ListView\', \'var arrayList_details:ArrayList<Model> = ArrayList();\', \'val client = OkHttpClient()\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'progress = findViewById(R.id.progressBar)\', \'progress.visibility = View.VISIBLE\', \'listView_details = findViewById<ListView>(R.id.listView) as ListView\', \'run(\"http://10.0.0.7:8080/jsondata/index.html\")\', \'fun run(url: String) {\', \'progress.visibility = View.VISIBLE\', \'val request = Request.Builder()\', \'.url(url)\', \'.build()\', \'client.newCall(request).enqueue(object : Callback {\', \'override fun onFailure(call: Call, e: IOException) {\', \'progress.visibility = View.GONE\', \'}\', \'override fun onResponse(call: Call, response: Response) {\', \'var str_response = response.body()!!.string()\', \'val json_contact:JSONObject = JSONObject(str_response)\', \'var jsonarray_info:JSONArray= json_contact.getJSONArray(\"info\")\', \'var i:Int = 0\', \'var size:Int = jsonarray_info.length()\', \'arrayList_details= ArrayList();\', \'for (i in 0.. size-1) {\', \'var json_objectdetail:JSONObject=jsonarray_info.getJSONObject(i)\', \'var model:Model= Model();\', \'model.id=json_objectdetail.getString(\"id\")\', \'model.name=json_objectdetail.getString(\"name\")\', \'model.email=json_objectdetail.getString(\"email\")\', \'arrayList_details.add(model)\', \'}\', \'runOnUiThread {\', \'val obj_adapter : CustomAdapter\', \'obj_adapter = CustomAdapter(applicationContext,arrayList_details)\', \'listView_details.adapter=obj_adapter\', \'}\', \'progress.visibility = View.GONE\', \'}\', \'})\', \'<uses-permission android:name=\"android.permission.INTERNET\"/>\']','[]','[]','[\'|||JSON is faster and easier than XML for AJAX applications.|||Unlike XML, it is shorter and quicker to read and write.|||It uses an array.|||\']'),(92,'[\'Kotlin Android Media Player\']','[\'MediaPlayer is a class that is used to control the playback of audio/video files and streams.\']','[\'https://www.javatpoint.com/kotlin-android-video-player\', \'https://www.javatpoint.com/kotlin-android-json-parsing-using-url\', \'https://www.javatpoint.com/kotlin-android-video-player\', \'https://www.javatpoint.com/kotlin-android-json-parsing-using-url\', \'https://www.javatpoint.com/kotlin-android-video-player\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-media-player-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-media-player-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-media-player-output3.png\']','[]','[\'Example of Android MediaPlayer with SeekBar\']','[\'Methods of MediaPlayer class\', \'activity_main.xml\', \'MianActivity.kt\']','[]','[\'There are several methods of MediaPlayer class available. Some of them are as follows:\']','[\'In this example, we will create a Media Player with playback control functionality such as play, pause, and stop. We also integrate the SeekBar to show the progress level of the media player.\', \'In the activity_main.xml layout file, we add the Buttons to control media playback, TextView to display the time duration of song and SeekBar to show the progress level of the media file.\']','[\'The android.media.MediaPlayer class is used to control the audio or video files. It accesses the built-in media player services such as playing audio, video, etc. To use the MediaPlayer class, we have to call the create the instance of it by calling the create() method of this class.\', \'The instance of MediaPlayer class is created using the MediaPlayer.create() method. In this example, we are reading the media file from the raw directory. The MediaPlayer.start() method starts playing media file, MediaPlayer.pause() method pause media and Media.stop() method stops playing media file.\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinmediaplayer.MainActivity\">\', \'<Button\', \'android:id=\"@+id/pauseBtn\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:enabled=\"false\"\', \'android:text=\"Pause\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toStartOf=\"@+id/playBtn\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'<Button\', \'android:id=\"@+id/playBtn\"\', \'android:layout_width=\"88dp\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Play\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toStartOf=\"@+id/stopBtn\"\', \'app:layout_constraintStart_toEndOf=\"@+id/pauseBtn\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'<Button\', \'android:id=\"@+id/stopBtn\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"24dp\"\', \'android:layout_marginRight=\"24dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:enabled=\"false\"\', \'android:text=\"Stop\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'<RelativeLayout\', \'android:layout_width=\"368dp\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"76dp\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"1.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\">\', \'<TextView\', \'android:id=\"@+id/tv_pass\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\" />\', \'<TextView\', \'android:id=\"@+id/tv_due\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentEnd=\"true\"\', \'android:layout_alignParentRight=\"true\" />\', \'<SeekBar\', \'android:id=\"@+id/seek_bar\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_below=\"@id/tv_pass\"\', \'android:saveEnabled=\"false\" />\', \'</RelativeLayout>\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinmediaplayer\', \'import android.media.MediaPlayer\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'import android.os.Handler\', \'import android.widget.SeekBar\', \'class MainActivity : AppCompatActivity() {\', \'private lateinit var mediaPlayer: MediaPlayer\', \'private lateinit var runnable:Runnable\', \'private var handler: Handler = Handler()\', \'private var pause:Boolean = false\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'playBtn.setOnClickListener{\', \'if(pause){\', \'mediaPlayer.seekTo(mediaPlayer.currentPosition)\', \'mediaPlayer.start()\', \'pause = false\', \'Toast.makeText(this,\"media playing\",Toast.LENGTH_SHORT).show()\', \'}else{\', \'mediaPlayer = MediaPlayer.create(applicationContext,R.raw.school_bell)\', \'mediaPlayer.start()\', \'Toast.makeText(this,\"media playing\",Toast.LENGTH_SHORT).show()\', \'}\', \'initializeSeekBar()\', \'playBtn.isEnabled = false\', \'pauseBtn.isEnabled = true\', \'stopBtn.isEnabled = true\', \'mediaPlayer.setOnCompletionListener {\', \'playBtn.isEnabled = true\', \'pauseBtn.isEnabled = false\', \'stopBtn.isEnabled = false\', \'Toast.makeText(this,\"end\",Toast.LENGTH_SHORT).show()\', \'}\', \'}\', \'pauseBtn.setOnClickListener {\', \'if(mediaPlayer.isPlaying){\', \'mediaPlayer.pause()\', \'pause = true\', \'playBtn.isEnabled = true\', \'pauseBtn.isEnabled = false\', \'stopBtn.isEnabled = true\', \'Toast.makeText(this,\"media pause\",Toast.LENGTH_SHORT).show()\', \'}\', \'}\', \'stopBtn.setOnClickListener{\', \'if(mediaPlayer.isPlaying || pause.equals(true)){\', \'pause = false\', \'seek_bar.setProgress(0)\', \'mediaPlayer.stop()\', \'mediaPlayer.reset()\', \'mediaPlayer.release()\', \'handler.removeCallbacks(runnable)\', \'playBtn.isEnabled = true\', \'pauseBtn.isEnabled = false\', \'stopBtn.isEnabled = false\', \'tv_pass.text = \"\"\', \'tv_due.text = \"\"\', \'Toast.makeText(this,\"media stop\",Toast.LENGTH_SHORT).show()\', \'}\', \'}\', \'seek_bar.setOnSeekBarChangeListener(object : SeekBar.OnSeekBarChangeListener {\', \'override fun onProgressChanged(seekBar: SeekBar, i: Int, b: Boolean) {\', \'if (b) {\', \'mediaPlayer.seekTo(i * 1000)\', \'}\', \'}\', \'override fun onStartTrackingTouch(seekBar: SeekBar) {\', \'}\', \'override fun onStopTrackingTouch(seekBar: SeekBar) {\', \'}\', \'})\', \'private fun initializeSeekBar() {\', \'seek_bar.max = mediaPlayer.seconds\', \'runnable = Runnable {\', \'seek_bar.progress = mediaPlayer.currentSeconds\', \'tv_pass.text = \"${mediaPlayer.currentSeconds} sec\"\', \'val diff = mediaPlayer.seconds - mediaPlayer.currentSeconds\', \'tv_due.text = \"$diff sec\"\', \'handler.postDelayed(runnable, 1000)\', \'}\', \'handler.postDelayed(runnable, 1000)\', \'val MediaPlayer.seconds:Int\', \'get() {\', \'return this.duration / 1000\', \'val MediaPlayer.currentSeconds:Int\', \'get() {\', \'return this.currentPosition/1000\']','[]','[\'Method|||Description&&&public void setDataSource(String path)|||It sets the data source (file path or http url) to use.&&&public void prepare()|||It prepares the player for playback synchronously.&&&public void start()|||It starts or resumes the playback.&&&public void stop()|||It stops the playback.&&&public void pause()|||It pauses the playback.&&&public boolean isPlaying()|||It checks if the media player is playing.&&&public void seekTo(int millis)|||It seeks to specified time in milliseconds.&&&public void setLooping(boolean looping)|||It sets the player for looping or non-looping.&&&public boolean isLooping()|||It checks if the player is looping or non-looping.&&&public void selectTrack(int index)|||It selects a track for the specified index.&&&public int getCurrentPosition()|||It returns the current playback position.&&&public int getDuration()|||It returns duration of the file.&&&public void setVolume(float leftVolume,float rightVolume)|||It sets the volume on this player.\']','[]'),(93,'[\'Kotlin Android Video Player\']','[\'The android.widget.VideoView class is used to play video player in an application. The android.widget.MediaController class provides the playback controls of video player such as play, pause, backward, forward, etc. to control the video player.\']','[\'https://www.javatpoint.com/kotlin-android-json-parsing-using-url\', \'https://www.javatpoint.com/kotlin-android-media-player\', \'https://www.javatpoint.com/kotlin-android-json-parsing-using-url\', \'https://www.javatpoint.com/kotlin-android-media-player\', \'https://www.javatpoint.com/kotlin-android-json-parsing-using-url\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-video-player-output1.png\']','[]','[\'Method of VideoView class\', \'Kotlin Android Video Player Example\']','[\'activity_main.xml\', \'MainActivity.kt\', \'AndroidManifest.xml\']','[]','[\'Using VideoView and MediaController class we can create a video player.\', \'In this example, we play the video inside the VideoView.\', \'Add the following design code in an activity_main.xml file. In this file, we place the VideoView inside the FrameLayout.\', \'Add the following uses-permission in AndroidManifest.xml file.\']','[\'The android.widget.VideoView class provides several methods to play and control the video player. The commonly used methods of VideoView class are as follows:\']','[\'Add the following code in MainActivity.kt class. In this class, we are reading the video file video.mp4 from the sdcard/Movies directory. The path of a video file is placed by creating the instance of Uri class and passed it to VideoView.setVideoURI(Uri). To play the video file call the start() method of VideoView.\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinvideoplayer.MainActivity\">\', \'<FrameLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\">\', \'<VideoView\', \'android:id=\"@+id/videoView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"308dp\"\', \'android:layout_marginBottom=\"0dp\"\', \'android:layout_marginEnd=\"0dp\"\', \'android:layout_marginStart=\"0dp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"1.0\" />\', \'</FrameLayout>\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinvideoplayer\', \'import android.net.Uri\', \'import android.net.Uri.*\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.os.Environment\', \'import android.widget.MediaController\', \'import android.widget.VideoView\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val videoView = findViewById<VideoView>(R.id.videoView)\', \'val mediaController = MediaController(this)\', \'mediaController.setAnchorView(videoView)\', \'val uri:Uri = parse(Environment.getExternalStorageDirectory().getPath() + \"/Movies/video.mp4\")\', \'videoView.setMediaController(mediaController)\', \'videoView.setVideoURI(uri)\', \'videoView.requestFocus()\', \'videoView.start()\', \'<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\', \'<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\']','[]','[\'Method|||Description&&&public void setMediaController(MediaController controller)|||It sets the media controller to the video view.&&&public void setVideoURI (Uri uri)|||It sets the URI of the video file.&&&public void start()|||It starts the video view.&&&public void stopPlayback()|||It stops the playback.&&&public void pause()|||It pauses the playback.&&&public void suspend()|||It suspends the playback.&&&public void resume()|||It resumes the playback.&&&public void seekTo(int millis)|||It seeks to specified time in milliseconds.\']','[]'),(94,'[\'Kotlin Android Read and Write External Storage\']','[\'Android External Storage is the memory space in which we perform read and write operation. Files in the external storage are stored in /sdcard or /storage folder etc. The files which are saved in the external storage is readable and can be modified by the user.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-external-storage-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-external-storage-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-external-storage-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-external-storage-output4.png\']','[]','[\'Write to File in External Storage\', \'Read File content from External Storage\', \'External Storage Access Permission\', \'Kotlin Android Read and Write External Storage Example\']','[\'activity_main.xml\', \'MainActivity.kt\', \'AndroidManifest.xml\']','[]','[\'Before accessing the file in external storage in our application, we should check the availability of the external storage in our device.\', \'Add the following permission in AndroidManifest.xml file.\', \'In this example, we will write the data to file inside the external storage and read the same file content from same external storage.\']','[\'The java.io package offers openFileInput() method which returns the instance of FileInputStream class and read the file from the external storage of the device. To read the data from file call the BufferedReader().readLine().\', \'Add the following code in the activity_main.xml file. In this file, add two EditText for input file name, file content and two Button for saving and view file content.\', \'Add the following code in the MainActivity.kt class. In this class, we are saving the file name and data inside external storage by clicking the save button and retrieving the file content by clicking the view button.\']','[\"The java.io package offers openFileOutput() method which returns the instance of FileOutputStream class to write the file in external storage of the device. To acquire a directory that\'s used by only your app by calling getExternalFilesDir(). To write the data into the file call the FileOutputStream .write() method.\"]','[\'var myExternalFile:File = File(getExternalFilesDir(filepath),fileName)\', \'val fileOutPutStream = FileOutputStream(myExternalFile)\', \'fileOutPutStream.write(fileContent.toByteArray())\', \'fileOutPutStream.close()\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'var myExternalFile:File = File(getExternalFilesDir(filepath), fileName)\', \'val filename = fileName.text.toString()\', \'myExternalFile = File(getExternalFilesDir(filepath),filename)\', \'var fileInputStream =FileInputStream(myExternalFile)\', \'var inputStreamReader: InputStreamReader = InputStreamReader(fileInputStream)\', \'val bufferedReader: BufferedReader = BufferedReader(inputStreamReader)\', \'val stringBuilder: StringBuilder = StringBuilder()\', \'var text: String? = null\', \'while ({ text = bufferedReader.readLine(); text }() != null) {\', \'stringBuilder.append(text)\', \'fileInputStream.close()\', \'<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\', \'<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinexternalstoragereadwrite.MainActivity\">\', \'<TextView\', \'android:id=\"@+id/textView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignLeft=\"@+id/textView2\"\', \'android:layout_alignParentTop=\"true\"\', \'android:layout_alignStart=\"@+id/textView2\"\', \'android:layout_marginTop=\"68dp\"\', \'android:text=\"File Name\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.027\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.065\" />\', \'<TextView\', \'android:id=\"@+id/textView2\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignBottom=\"@+id/editTextData\"\', \'android:layout_alignParentLeft=\"true\"\', \'android:layout_alignParentStart=\"true\"\', \'android:layout_marginBottom=\"36dp\"\', \'android:layout_marginLeft=\"50dp\"\', \'android:layout_marginStart=\"50dp\"\', \'android:text=\"File Data\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.027\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/textView\"\', \'app:layout_constraintVertical_bias=\"0.167\" />\', \'<EditText\', \'android:id=\"@+id/editTextFile\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignLeft=\"@+id/editTextData\"\', \'android:layout_alignStart=\"@+id/editTextData\"\', \'android:layout_alignTop=\"@+id/textView\"\', \'android:ems=\"10\"\', \'android:inputType=\"none\" />\', \'<EditText\', \'android:id=\"@+id/editTextData\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentEnd=\"true\"\', \'android:layout_alignParentRight=\"true\"\', \'android:layout_below=\"@+id/editTextFile\"\', \'android:layout_marginEnd=\"37dp\"\', \'android:layout_marginRight=\"37dp\"\', \'android:layout_marginTop=\"30dp\"\', \'android:ems=\"10\"\', \'android:inputType=\"none\"\', \'android:lines=\"5\" />\', \'<Button\', \'android:id=\"@+id/button_save\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentBottom=\"true\"\', \'android:layout_marginBottom=\"68dp\"\', \'android:layout_toLeftOf=\"@+id/editTextData\"\', \'android:layout_toStartOf=\"@+id/editTextData\"\', \'android:text=\"Save\" />\', \'<Button\', \'android:id=\"@+id/button_view\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignBottom=\"@+id/button_save\"\', \'android:layout_alignEnd=\"@+id/editTextData\"\', \'android:layout_alignRight=\"@+id/editTextData\"\', \'android:layout_marginEnd=\"43dp\"\', \'android:layout_marginRight=\"43dp\"\', \'android:text=\"View\" />\', \'</RelativeLayout>\', \'package example.javatpoint.com.kotlinexternalstoragereadwrite\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.widget.Button\', \'import android.widget.EditText\', \'import android.widget.Toast\', \'import android.os.Environment\', \'import java.io.*\', \'class MainActivity : AppCompatActivity() {\', \'private val filepath = \"MyFileStorage\"\', \'internal var myExternalFile: File?=null\', \'private val isExternalStorageReadOnly: Boolean get() {\', \'val extStorageState = Environment.getExternalStorageState()\', \'return if (Environment.MEDIA_MOUNTED_READ_ONLY.equals(extStorageState)) {\', \'true\', \'} else {\', \'false\', \'}\', \'private val isExternalStorageAvailable: Boolean get() {\', \'val extStorageState = Environment.getExternalStorageState()\', \'return if (Environment.MEDIA_MOUNTED.equals(extStorageState)) {\', \'true\', \'} else{\', \'false\', \'}\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val fileName = findViewById(R.id.editTextFile) as EditText\', \'val fileData = findViewById(R.id.editTextData) as EditText\', \'val saveButton = findViewById<Button>(R.id.button_save) as Button\', \'val viewButton = findViewById(R.id.button_view) as Button\', \'saveButton.setOnClickListener(View.OnClickListener {\', \'myExternalFile = File(getExternalFilesDir(filepath), fileName.text.toString())\', \'try {\', \'val fileOutPutStream = FileOutputStream(myExternalFile)\', \'fileOutPutStream.write(fileData.text.toString().toByteArray())\', \'fileOutPutStream.close()\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'}\', \'Toast.makeText(applicationContext,\"data save\",Toast.LENGTH_SHORT).show()\', \'})\', \'viewButton.setOnClickListener(View.OnClickListener {\', \'myExternalFile = File(getExternalFilesDir(filepath), fileName.text.toString())\', \'val filename = fileName.text.toString()\', \'myExternalFile = File(getExternalFilesDir(filepath),filename)\', \'if(filename.toString()!=null && filename.toString().trim()!=\"\"){\', \'var fileInputStream =FileInputStream(myExternalFile)\', \'var inputStreamReader: InputStreamReader = InputStreamReader(fileInputStream)\', \'val bufferedReader: BufferedReader = BufferedReader(inputStreamReader)\', \'val stringBuilder: StringBuilder = StringBuilder()\', \'var text: String? = null\', \'while ({ text = bufferedReader.readLine(); text }() != null) {\', \'stringBuilder.append(text)\', \'}\', \'fileInputStream.close()\', \'Toast.makeText(applicationContext,stringBuilder.toString(),Toast.LENGTH_SHORT).show()\', \'}\', \'})\', \'if (!isExternalStorageAvailable || isExternalStorageReadOnly) {\', \'saveButton.isEnabled = false\', \'}\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlinexternalstoragereadwrite\">\', \'<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\', \'<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<activity android:name=\".MainActivity\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'</application>\', \'</manifest>\']','[]','[]','[]'),(95,'[\'Kotlin Android Read and Write Internal Storage\']','[\'Android Internal Storage is the device memory in which we store the files. The file stored in the internal storage is private in default, and only the same application accesses it. They cannot be accessed from outside the application.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-internal-storage-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-internal-storage-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-internal-storage-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-internal-storage-output4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-read-and-write-internal-storage-output5.png\']','[]','[\'Write to File in Internal Storage\', \'Read File content from Internal Storage\', \'Kotlin Android Read and Write Internal Storage Example\']','[\'activity_main.xml\', \'MainActivity.kt\']','[]','[\'To read and write the data from (into) the file, Android provides openFileInput() and openFileOutput() methods respectively.\', \'When the users uninstall its application from the device, its internal storage file will also be removed.\', \'In this example, we will write the data to file inside the internal storage and read the same file content from internal storage.\']','[\'To write the file in internal storage of device, java.io package offers openFileOutput() method which returns the instance of FileOutputStream class. To write the data into the file call the FileOutputStream .write() method.\', \'To read the file from the internal storage of device, java.io package offers openFileInput() method which returns the instance of FileInputStream class. To read the data from file call the BufferedReader().readLine()\', \'Add the following code in the activity_main.xml file. In this file, add two EditText for input file name, file content and two Button for saving and view file content.\', \'Add the following code in the MainActivity.kt class. In this class, we are saving the file name and data inside internal storage by clicking the save button and retrieving the file content by clicking view button.\']','[]','[\'val file:String = fileName.text.toString()\', \'val data:String = fileData.text.toString()\', \'val fileOutputStream:FileOutputStream\', \'fileOutputStream = openFileOutput(file, Context.MODE_PRIVATE)\', \'fileOutputStream.write(data.toByteArray())\', \'}catch (e: Exception){\', \'e.printStackTrace()\', \'var fileInputStream: FileInputStream? = null\', \'fileInputStream = openFileInput(filename)\', \'var inputStreamReader: InputStreamReader = InputStreamReader(fileInputStream)\', \'val bufferedReader: BufferedReader = BufferedReader(inputStreamReader)\', \'val stringBuilder: StringBuilder = StringBuilder()\', \'var text: String? = null\', \'while ({ text = bufferedReader.readLine(); text }() != null) {\', \'stringBuilder.append(text)\', \'fileData.setText(stringBuilder.toString()).toString()\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlininternalstoragereadwrite.MainActivity\">\', \'<TextView\', \'android:id=\"@+id/textView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentLeft=\"true\"\', \'android:layout_alignParentStart=\"true\"\', \'android:layout_alignParentTop=\"true\"\', \'android:layout_marginLeft=\"31dp\"\', \'android:layout_marginStart=\"31dp\"\', \'android:layout_marginTop=\"117dp\"\', \'android:text=\"File Name\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<EditText\', \'android:id=\"@+id/editFile\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignBaseline=\"@+id/textView\"\', \'android:layout_alignBottom=\"@+id/textView\"\', \'android:layout_alignLeft=\"@+id/btnSave\"\', \'android:layout_alignStart=\"@+id/btnSave\"\', \'android:layout_marginLeft=\"31dp\"\', \'android:layout_marginStart=\"31dp\"\', \'android:ems=\"10\"\', \'android:paddingLeft=\"10dp\"\', \'android:inputType=\"textPersonName\"\', \'android:hint=\"file name\" />\', \'<TextView\', \'android:id=\"@+id/textView2\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignEnd=\"@+id/textView\"\', \'android:layout_alignRight=\"@+id/textView\"\', \'android:layout_below=\"@+id/textView\"\', \'android:layout_marginTop=\"67dp\"\', \'android:text=\"File Data\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<EditText\', \'android:id=\"@+id/editData\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignBaseline=\"@+id/textView2\"\', \'android:layout_alignBottom=\"@+id/textView2\"\', \'android:layout_alignLeft=\"@+id/editFile\"\', \'android:layout_alignStart=\"@+id/editFile\"\', \'android:ems=\"10\"\', \'android:lines=\"5\"\', \'android:hint=\"data\" />\', \'<Button\', \'android:id=\"@+id/btnSave\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignLeft=\"@+id/textView2\"\', \'android:layout_alignParentBottom=\"true\"\', \'android:layout_alignStart=\"@+id/textView2\"\', \'android:layout_marginBottom=\"53dp\"\', \'android:layout_marginLeft=\"49dp\"\', \'android:layout_marginStart=\"49dp\"\', \'android:text=\"Save\" />\', \'<Button\', \'android:id=\"@+id/btnView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignEnd=\"@+id/editData\"\', \'android:layout_alignRight=\"@+id/editData\"\', \'android:layout_alignTop=\"@+id/btnSave\"\', \'android:layout_marginEnd=\"33dp\"\', \'android:layout_marginRight=\"33dp\"\', \'android:text=\"View\" />\', \'</RelativeLayout>\', \'package example.javatpoint.com.kotlininternalstoragereadwrite\', \'import android.content.Context\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.widget.Button\', \'import android.widget.EditText\', \'import android.widget.Toast\', \'import java.io.*\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val fileName = findViewById<EditText>(R.id.editFile)\', \'val fileData = findViewById<EditText>(R.id.editData)\', \'val btnSave = findViewById<Button>(R.id.btnSave)\', \'val btnView = findViewById<Button>(R.id.btnView)\', \'btnSave.setOnClickListener(View.OnClickListener {\', \'val file:String = fileName.text.toString()\', \'val data:String = fileData.text.toString()\', \'val fileOutputStream:FileOutputStream\', \'try {\', \'fileOutputStream = openFileOutput(file, Context.MODE_PRIVATE)\', \'fileOutputStream.write(data.toByteArray())\', \'} catch (e: FileNotFoundException){\', \'e.printStackTrace()\', \'}catch (e: NumberFormatException){\', \'e.printStackTrace()\', \'}catch (e: IOException){\', \'e.printStackTrace()\', \'}catch (e: Exception){\', \'e.printStackTrace()\', \'}\', \'Toast.makeText(applicationContext,\"data save\",Toast.LENGTH_LONG).show()\', \'fileName.text.clear()\', \'fileData.text.clear()\', \'})\', \'btnView.setOnClickListener(View.OnClickListener {\', \'val filename = fileName.text.toString()\', \'if(filename.toString()!=null && filename.toString().trim()!=\"\"){\', \'var fileInputStream: FileInputStream? = null\', \'fileInputStream = openFileInput(filename)\', \'var inputStreamReader: InputStreamReader = InputStreamReader(fileInputStream)\', \'val bufferedReader: BufferedReader = BufferedReader(inputStreamReader)\', \'val stringBuilder: StringBuilder = StringBuilder()\', \'var text: String? = null\', \'while ({ text = bufferedReader.readLine(); text }() != null) {\', \'stringBuilder.append(text)\', \'}\', \'fileData.setText(stringBuilder.toString()).toString()\', \'}else{\', \'Toast.makeText(applicationContext,\"file name cannot be blank\",Toast.LENGTH_LONG).show()\', \'}\', \'})\']','[]','[]','[]'),(96,'[\'kotlin android sharedpreferences\']','[\'Android Shared Preferences allow the activities or applications to store and retrieve data in the form of key and value. The data stored in the application remains to persist even if the app is closed until it has deleted or cleared.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-sharedpreferences-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sharedpreferences-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sharedpreferences-output3.png\']','[]','[\'Kotlin Android SharedPreferences Example\']','[\'activity_main.xml\', \'MainActivity.kt\']','[]','[\'To access the Shared Preferences in our application, we need to get the instance of it using any of the following methods.\', \'Here preferences_fileName is the Shared Preferences file name and mode is the operational mode of the file.\', \'The modifications over the preferences data are performed through the SharedPreferences.Editor object.\', \'To delete the preferences data of application we call the method:\', \'The data stored in Shared preferences will lose when we perform any of the following operation:\', \'Add the following code in the activity_main.xml layout file:\']','[\'The Android setting files use Shared Preferences to store the app setting data in the form of XML file under data/data/{application package}/share_prefs directory. \', \'Add the following code in the MainActivty.kt class file. In this class, we store the shared preferences data in the form of key-value in kotlinsharedpreference.\', \'Using SharedPreferences, we can create the log-in and log-out functionality in our application by storing the state (data) of a user in the preferences file.\']','[\'In this example, we will get the input data (id and name) from EditText and store them in a preference file. This preference data is retrieved and displayed in TextView by performing the click action on Button and make clear (remove) the preferences data.\']','[\'val sharedPreferences: SharedPreferences = this.getSharedPreferences(String preferences_fileName,int mode)\', \'val editor:SharedPreferences.Editor =  sharedPreferences.edit()\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinsharedpreference.MainActivity\">\', \'<TableLayout\', \'android:layout_width=\"368dp\"\', \'android:layout_height=\"495dp\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\">\', \'<TableRow>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"0\"\', \'android:layout_marginLeft=\"10sp\"\', \'android:layout_marginStart=\"10sp\"\', \'android:text=\"Enter Id\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<EditText\', \'android:id=\"@+id/editId\"\', \'android:layout_width=\"201dp\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\"\', \'android:layout_marginLeft=\"50sp\"\', \'android:layout_marginStart=\"50sp\"\', \'android:hint=\"id\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'<TableRow>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"0\"\', \'android:layout_marginLeft=\"10sp\"\', \'android:layout_marginStart=\"10sp\"\', \'android:text=\"Enter Name\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<EditText\', \'android:id=\"@+id/editName\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\"\', \'android:layout_marginLeft=\"50sp\"\', \'android:layout_marginStart=\"50sp\"\', \'android:hint=\"name\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'<TableRow android:layout_marginTop=\"60dp\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"0\"\', \'android:layout_marginLeft=\"10sp\"\', \'android:layout_marginStart=\"10sp\"\', \'android:text=\"Your Id\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<TextView\', \'android:id=\"@+id/textViewShowId\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\"\', \'android:layout_marginLeft=\"50sp\"\', \'android:layout_marginStart=\"50sp\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'<TableRow android:layout_marginTop=\"20dp\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"0\"\', \'android:layout_marginLeft=\"10sp\"\', \'android:layout_marginStart=\"10sp\"\', \'android:text=\"Your Name\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<TextView\', \'android:id=\"@+id/textViewShowName\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\"\', \'android:layout_marginLeft=\"50sp\"\', \'android:layout_marginStart=\"50sp\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'</TableLayout>\', \'<LinearLayout\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"16dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:orientation=\"horizontal\"\', \'android:gravity=\"center\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\">\', \'<Button\', \'android:id=\"@+id/save\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Save\" />\', \'<Button\', \'android:id=\"@+id/view\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"View\" />\', \'<Button\', \'android:id=\"@+id/clear\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Clear\" />\', \'</LinearLayout>\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.kotlinsharedpreference\', \'import android.content.Context\', \'import android.content.SharedPreferences\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.widget.Button\', \'import android.widget.EditText\', \'import android.widget.TextView\', \'class MainActivity : AppCompatActivity() {\', \'private val sharedPrefFile = \"kotlinsharedpreference\"\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'val inputId = findViewById<EditText>(R.id.editId)\', \'val inputName = findViewById<EditText>(R.id.editName)\', \'val outputId = findViewById<TextView>(R.id.textViewShowId)\', \'val outputName = findViewById<TextView>(R.id.textViewShowName)\', \'val btnSave = findViewById<Button>(R.id.save)\', \'val btnView = findViewById<Button>(R.id.view)\', \'val btnClear = findViewById<Button>(R.id.clear)\', \'val sharedPreferences: SharedPreferences = this.getSharedPreferences(sharedPrefFile,Context.MODE_PRIVATE)\', \'btnSave.setOnClickListener(View.OnClickListener {\', \'val id:Int = Integer.parseInt(inputId.text.toString())\', \'val name:String = inputName.text.toString()\', \'val editor:SharedPreferences.Editor =  sharedPreferences.edit()\', \'editor.putInt(\"id_key\",id)\', \'editor.putString(\"name_key\",name)\', \'editor.apply()\', \'editor.commit()\', \'})\', \'btnView.setOnClickListener {\', \'val sharedIdValue = sharedPreferences.getInt(\"id_key\",0)\', \'val sharedNameValue = sharedPreferences.getString(\"name_key\",\"defaultname\")\', \'if(sharedIdValue.equals(0) && sharedNameValue.equals(\"defaultname\")){\', \'outputName.setText(\"default name: ${sharedNameValue}\").toString()\', \'outputId.setText(\"default id: ${sharedIdValue.toString()}\")\', \'}else{\', \'outputName.setText(sharedNameValue).toString()\', \'outputId.setText(sharedIdValue.toString())\', \'}\', \'}\', \'btnClear.setOnClickListener(View.OnClickListener {\', \'val editor = sharedPreferences.edit()\', \'editor.clear()\', \'editor.apply()\', \'outputName.setText(\"\").toString()\', \'outputId.setText(\"\".toString())\', \'})\']','[]','[]','[\'|||getPreferences()|||getSharedPreferences()|||getDefaultSharedPreferences()||||||editor.remove(\"key\"): it removes the specified key\'s value|||editor.clear(): it removes all preferences data||||||Uninstalling the application.|||Clearing the application data through setting.|||\']'),(97,'[\'Kotlin Android SQLite Tutorial\']','[\'SQLite is an open-source relational database that is used to perform database operations on Android devices such as storing, manipulating or retrieving persistent data from the database.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output6.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output7.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output8.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-sqlite-tutorial-output9.png\']','[]','[\'SQLiteOpenHelper class\', \'Constructors of SQLiteOpenHelper class\', \'Methods of SQLiteOpenHelper class\', \'SQLiteDatabase class\', \'Methods of SQLiteDatabase class\', \'Kotlin Android SQLite Database CRUD Example\']','[\'activity_main.xml\', \'MainActivity.kt\', \'EmpModelClass.kt\', \'custom_list.xml\', \'MyListAdapter.kt\', \'update_dialog.xml\', \'delete_dialog.xml\', \'DatabaseHandler.kt\']','[]','[\'By default SQLite database is embedded in android. So, there is no need to perform any database setup or administration task.\', \'The SQLiteOpenHelper class provides the functionality to use the SQLite database.\', \'There are two constructors of SQLiteOpenHelper class.\', \'There are several methods available in the SQLiteOpenHelper class. Some of them are mentioned below:\', \'It contains methods to be performed on the SQLite database such as create, update, delete, select etc.\', \'There are many methods in the SQLiteDatabase class. Some of them are as follows:\', \'In this example, we will perform create, read, update and delete operation on Android SQLite database.\', \'Creating a data model class named as EmpModelClass.kt\', \'Create a custom row layout for displaying the list items in the ListView.\', \'Now, create a custom adapter class named as MyListAdapter.kt and extends ArrayAdapter class which populates the data model into the ListView.\', \'Create a layout for display AlertDialog for update record.\', \'Create a layout for display AlertDialog for delete record.\']','[\'The android.database.sqlite.SQLiteOpenHelper class is used for database creation and version management. For performing any database operation, you have to provide the implementation of onCreate() and onUpgrade() methods of SQLiteOpenHelper class.\', \'In the activity_main.xml file add the following code. In this file, we added three EditText, one ListView, four Button for saving, view, update and delete operation.\', \'Create the DatabaseHandler.kt class that extends SQLiteOpenHelper class and override its onCreate(), onUpgrage() functions. Insert data into the database by passing a ContentValues object to the insert() method.\']','[\'Add the following code in the MainActivity.kt class. In this class, the saveRecord() function saves the records. The viewRecord() function reads the record and displays them into ListView, the updateRecord() function updates the record on the basis on id, and deleteRecord() function deletes the record. The val databaseHandler: DatabaseHandler= DatabaseHandler(this) creates the instance of DatabaseHandler class calls the SQLite database logic.\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:orientation=\"vertical\"\', \'tools:context=\"example.javatpoint.com.kotlinsqlitecrud.MainActivity\">\', \'<TableLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\">\', \'<TableRow>\', \'<TextView\', \'android:text=\"User Id\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\" />\', \'<EditText\', \'android:id=\"@+id/u_id\"\', \'android:layout_width=\"200dp\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginLeft=\"20sp\"\', \'android:layout_marginStart=\"20sp\"\', \'android:width=\"150px\" />\', \'</TableRow>\', \'<TableRow>\', \'<TextView\', \'android:text=\"User Name\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\" />\', \'<EditText\', \'android:id=\"@+id/u_name\"\', \'android:width=\"200dp\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"2\"\', \'android:layout_marginStart=\"20sp\"\', \'android:layout_marginLeft=\"20sp\"/>\', \'</TableRow>\', \'<TableRow>\', \'<TextView\', \'android:text=\"User Email\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"1\" />\', \'<EditText\', \'android:id=\"@+id/u_email\"\', \'android:width=\"200dp\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_column=\"2\"\', \'android:layout_marginStart=\"20sp\"\', \'android:layout_marginLeft=\"20sp\" />\', \'</TableRow>\', \'</TableLayout>\', \'<LinearLayout\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"350sp\"\', \'android:layout_marginTop=\"20sp\">\', \'<ListView\', \'android:id=\"@+id/listView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"350sp\"/>\', \'</LinearLayout>\', \'<LinearLayout\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginTop=\"40sp\"\', \'android:orientation=\"horizontal\"\', \'android:layout_gravity=\"center\">\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Save\"\', \'android:onClick=\"saveRecord\"/>\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"View\"\', \'android:onClick=\"viewRecord\"/>\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Update\"\', \'android:onClick=\"updateRecord\"/>\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Delete\"\', \'android:onClick=\"deleteRecord\"/>\', \'</LinearLayout>\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlinsqlitecrud\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.widget.EditText\', \'import android.widget.Toast\', \'import kotlinx.android.synthetic.main.activity_main.*\', \'import android.content.DialogInterface\', \'import android.support.v7.app.AlertDialog\', \'class MainActivity : AppCompatActivity() {\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'fun saveRecord(view: View){\', \'val id = u_id.text.toString()\', \'val name = u_name.text.toString()\', \'val email = u_email.text.toString()\', \'val databaseHandler: DatabaseHandler= DatabaseHandler(this)\', \'if(id.trim()!=\"\" && name.trim()!=\"\" && email.trim()!=\"\"){\', \'val status = databaseHandler.addEmployee(EmpModelClass(Integer.parseInt(id),name, email))\', \'if(status > -1){\', \'Toast.makeText(applicationContext,\"record save\",Toast.LENGTH_LONG).show()\', \'u_id.text.clear()\', \'u_name.text.clear()\', \'u_email.text.clear()\', \'}\', \'}else{\', \'Toast.makeText(applicationContext,\"id or name or email cannot be blank\",Toast.LENGTH_LONG).show()\', \'}\', \'fun viewRecord(view: View){\', \'val databaseHandler: DatabaseHandler= DatabaseHandler(this)\', \'val emp: List<EmpModelClass> = databaseHandler.viewEmployee()\', \'val empArrayId = Array<String>(emp.size){\"0\"}\', \'val empArrayName = Array<String>(emp.size){\"null\"}\', \'val empArrayEmail = Array<String>(emp.size){\"null\"}\', \'var index = 0\', \'for(e in emp){\', \'empArrayId[index] = e.userId.toString()\', \'empArrayName[index] = e.userName\', \'empArrayEmail[index] = e.userEmail\', \'index++\', \'}\', \'val myListAdapter = MyListAdapter(this,empArrayId,empArrayName,empArrayEmail)\', \'listView.adapter = myListAdapter\', \'fun updateRecord(view: View){\', \'val dialogBuilder = AlertDialog.Builder(this)\', \'val inflater = this.layoutInflater\', \'val dialogView = inflater.inflate(R.layout.update_dialog, null)\', \'dialogBuilder.setView(dialogView)\', \'val edtId = dialogView.findViewById(R.id.updateId) as EditText\', \'val edtName = dialogView.findViewById(R.id.updateName) as EditText\', \'val edtEmail = dialogView.findViewById(R.id.updateEmail) as EditText\', \'dialogBuilder.setTitle(\"Update Record\")\', \'dialogBuilder.setMessage(\"Enter data below\")\', \'dialogBuilder.setPositiveButton(\"Update\", DialogInterface.OnClickListener { _, _ ->\', \'val updateId = edtId.text.toString()\', \'val updateName = edtName.text.toString()\', \'val updateEmail = edtEmail.text.toString()\', \'val databaseHandler: DatabaseHandler= DatabaseHandler(this)\', \'if(updateId.trim()!=\"\" && updateName.trim()!=\"\" && updateEmail.trim()!=\"\"){\', \'val status = databaseHandler.updateEmployee(EmpModelClass(Integer.parseInt(updateId),updateName, updateEmail))\', \'if(status > -1){\', \'Toast.makeText(applicationContext,\"record update\",Toast.LENGTH_LONG).show()\', \'}\', \'}else{\', \'Toast.makeText(applicationContext,\"id or name or email cannot be blank\",Toast.LENGTH_LONG).show()\', \'}\', \'})\', \'dialogBuilder.setNegativeButton(\"Cancel\", DialogInterface.OnClickListener { dialog, which ->\', \'})\', \'val b = dialogBuilder.create()\', \'b.show()\', \'fun deleteRecord(view: View){\', \'val dialogBuilder = AlertDialog.Builder(this)\', \'val inflater = this.layoutInflater\', \'val dialogView = inflater.inflate(R.layout.delete_dialog, null)\', \'dialogBuilder.setView(dialogView)\', \'val dltId = dialogView.findViewById(R.id.deleteId) as EditText\', \'dialogBuilder.setTitle(\"Delete Record\")\', \'dialogBuilder.setMessage(\"Enter id below\")\', \'dialogBuilder.setPositiveButton(\"Delete\", DialogInterface.OnClickListener { _, _ ->\', \'val deleteId = dltId.text.toString()\', \'val databaseHandler: DatabaseHandler= DatabaseHandler(this)\', \'if(deleteId.trim()!=\"\"){\', \'val status = databaseHandler.deleteEmployee(EmpModelClass(Integer.parseInt(deleteId),\"\",\"\"))\', \'if(status > -1){\', \'Toast.makeText(applicationContext,\"record deleted\",Toast.LENGTH_LONG).show()\', \'}\', \'}else{\', \'Toast.makeText(applicationContext,\"id or name or email cannot be blank\",Toast.LENGTH_LONG).show()\', \'}\', \'})\', \'dialogBuilder.setNegativeButton(\"Cancel\", DialogInterface.OnClickListener { _, _ ->\', \'})\', \'val b = dialogBuilder.create()\', \'b.show()\', \'package example.javatpoint.com.kotlinsqlitecrud\', \'class EmpModelClass (var userId: Int, val userName:String , val userEmail: String)\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:orientation=\"vertical\" android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:id=\"@+id/linearLayout\">\', \'<TextView\', \'android:id=\"@+id/textViewId\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Id\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<TextView\', \'android:id=\"@+id/textViewName\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Name\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<TextView\', \'android:id=\"@+id/textViewEmail\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Email\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlinsqlitecrud\', \'import android.app.Activity\', \'import android.view.View\', \'import android.view.ViewGroup\', \'import android.widget.ArrayAdapter\', \'import android.widget.TextView\', \'class MyListAdapter(private val context: Activity, private val id: Array<String>, private val name: Array<String>, private val email: Array<String>)\', \': ArrayAdapter<String>(context, R.layout.custom_list, name) {\', \'override fun getView(position: Int, view: View?, parent: ViewGroup): View {\', \'val inflater = context.layoutInflater\', \'val rowView = inflater.inflate(R.layout.custom_list, null, true)\', \'val idText = rowView.findViewById(R.id.textViewId) as TextView\', \'val nameText = rowView.findViewById(R.id.textViewName) as TextView\', \'val emailText = rowView.findViewById(R.id.textViewEmail) as TextView\', \'idText.text = \"Id: ${id[position]}\"\', \'nameText.text = \"Name: ${name[position]}\"\', \'emailText.text = \"Email: ${email[position]}\"\', \'return rowView\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:orientation=\"vertical\"\', \'android:padding=\"10dp\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'<EditText\', \'android:id=\"@+id/updateId\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:ems=\"10\"\', \'android:hint=\"enter id\" />\', \'<EditText\', \'android:id=\"@+id/updateName\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:ems=\"10\"\', \'android:hint=\"enter name\"/>\', \'<EditText\', \'android:id=\"@+id/updateEmail\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:ems=\"10\"\', \'android:hint=\"enter email\"/>\', \'</LinearLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'android:orientation=\"vertical\"\', \'android:padding=\"10dp\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\">\', \'<EditText\', \'android:id=\"@+id/deleteId\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:ems=\"10\"\', \'android:hint=\"enter id\" />\', \'</LinearLayout>\', \'package example.javatpoint.com.kotlinsqlitecrud\', \'import android.content.Context\', \'import android.database.sqlite.SQLiteDatabase\', \'import android.database.sqlite.SQLiteOpenHelper\', \'import android.content.ContentValues\', \'import android.database.Cursor\', \'import android.database.sqlite.SQLiteException\', \'class DatabaseHandler(context: Context): SQLiteOpenHelper(context,DATABASE_NAME,null,DATABASE_VERSION) {\', \'companion object {\', \'private val DATABASE_VERSION = 1\', \'private val DATABASE_NAME = \"EmployeeDatabase\"\', \'private val TABLE_CONTACTS = \"EmployeeTable\"\', \'private val KEY_ID = \"id\"\', \'private val KEY_NAME = \"name\"\', \'private val KEY_EMAIL = \"email\"\', \'override fun onCreate(db: SQLiteDatabase?) {\', \'val CREATE_CONTACTS_TABLE = (\"CREATE TABLE \" + TABLE_CONTACTS + \"(\"\', \'+ KEY_ID + \" INTEGER PRIMARY KEY,\" + KEY_NAME + \" TEXT,\"\', \'+ KEY_EMAIL + \" TEXT\" + \")\")\', \'db?.execSQL(CREATE_CONTACTS_TABLE)\', \'override fun onUpgrade(db: SQLiteDatabase?, oldVersion: Int, newVersion: Int) {\', \'db!!.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_CONTACTS)\', \'onCreate(db)\', \'fun addEmployee(emp: EmpModelClass):Long{\', \'val db = this.writableDatabase\', \'val contentValues = ContentValues()\', \'contentValues.put(KEY_ID, emp.userId)\', \'contentValues.put(KEY_NAME, emp.userName) // EmpModelClass Name\', \'contentValues.put(KEY_EMAIL,emp.userEmail ) // EmpModelClass Phone\', \'val success = db.insert(TABLE_CONTACTS, null, contentValues)\', \'db.close() // Closing database connection\', \'return success\', \'fun viewEmployee():List<EmpModelClass>{\', \'val empList:ArrayList<EmpModelClass> = ArrayList<EmpModelClass>()\', \'val selectQuery = \"SELECT  * FROM $TABLE_CONTACTS\"\', \'val db = this.readableDatabase\', \'var cursor: Cursor? = null\', \'try{\', \'cursor = db.rawQuery(selectQuery, null)\', \'}catch (e: SQLiteException) {\', \'db.execSQL(selectQuery)\', \'return ArrayList()\', \'}\', \'var userId: Int\', \'var userName: String\', \'var userEmail: String\', \'if (cursor.moveToFirst()) {\', \'do {\', \'userId = cursor.getInt(cursor.getColumnIndex(\"id\"))\', \'userName = cursor.getString(cursor.getColumnIndex(\"name\"))\', \'userEmail = cursor.getString(cursor.getColumnIndex(\"email\"))\', \'val emp= EmpModelClass(userId = userId, userName = userName, userEmail = userEmail)\', \'empList.add(emp)\', \'} while (cursor.moveToNext())\', \'}\', \'return empList\', \'fun updateEmployee(emp: EmpModelClass):Int{\', \'val db = this.writableDatabase\', \'val contentValues = ContentValues()\', \'contentValues.put(KEY_ID, emp.userId)\', \'contentValues.put(KEY_NAME, emp.userName) // EmpModelClass Name\', \'contentValues.put(KEY_EMAIL,emp.userEmail ) // EmpModelClass Email\', \'val success = db.update(TABLE_CONTACTS, contentValues,\"id=\"+emp.userId,null)\', \'db.close() // Closing database connection\', \'return success\', \'fun deleteEmployee(emp: EmpModelClass):Int{\', \'val db = this.writableDatabase\', \'val contentValues = ContentValues()\', \'contentValues.put(KEY_ID, emp.userId) // EmpModelClass UserId\', \'val success = db.delete(TABLE_CONTACTS,\"id=\"+emp.userId,null)\', \'db.close() // Closing database connection\', \'return success\']','[]','[\'Constructor|||Description&&&SQLiteOpenHelper(context: Context, name: String, factory: SQLiteDatabase.CursorFactory, version: Int)|||Creates an object of SQLiteOpenHelper for creating, opening and managing the database.&&&SQLiteOpenHelper(context: Context, name: String, factory: SQLiteDatabase.CursorFactory, version: Int, errorHandler: DatabaseErrorHandler)	|||Creates an object of SQLiteOpenHelper for creating, opening and managing the database. It specifies the error handler.\', \'Method|||Description&&&public abstract void onCreate(SQLiteDatabase db)|||Called only once when the database is created for the first time.&&&public abstract void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)|||Called when the database needs to upgrade.&&&public synchronized void close ()|||Closes the database object.&&&public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion)|||called when the database needs to downgrade.\', \"Method|||Description&&&execSQL(String sql): Unit|||Executes the SQL query, not a select query.&&&insert(String table, String nullColumnHack, ContentValues values): Long|||Inserts a record on the database. The table specifies the table name, nullColumnHack doesn\'t allow completely null values. If the second argument is null, android will store null values if values are empty. The third argument specifies the values to be stored.&&&update(String table, ContentValues values, String whereClause, String[] whereArgs): Int|||Updates a row.&&&query(String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy): Cursor|||Returns a cursor over the resultset.\"]','[]'),(98,'[\'Android Notification\']','[\'Android Notification provides short, timely information about the action happened in the application, even it is not running. The notification displays the icon, title and some amount of the content text.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/android-notification-output1.png\', \'https://static.javatpoint.com/kotlin/images/android-notification-output2.png\', \'https://static.javatpoint.com/kotlin/images/android-notification-output3.png\', \'https://static.javatpoint.com/kotlin/images/android-notification-output4.png\']','[]','[\'Set Android Notification Properties\', \'Android Notification Example\']','[\'activity_main.xml\', \'activity_notification_view.xml\', \'MainActivity.java\', \'NotificationView.java\', \'strings.xml\', \'AndroidManifest.xml\']','[]','[\'The properties of Android notification are set using NotificationCompat.Builder object. Some of the notification properties are mentioned below:\', \'In this example, we will create a notification message and clicking on it launches another activity. \', \'Add the following code in an activity_main.xml file.\', \'The NotificationView.java class receives the notification message and displays in TextView. This class is invoked while taping the notification.\', \'Add the following code in AndroidManifest.xml file.\']','[\'Create an activity named as activity_notification_view.xml and add the following code. This activity will launch on clicking the notification. TextView is used to display the notification message.\']','[\'Add the following code in the MainActivity.java class. In this class, clicking the button calls the addNotification() method where we implement the NotificationCompat.Builder object to set the notification properties. The NotificationManager.notify() method is used to display the notification. The Intent class is used to call another activity (NotificationView.java) on taping the notification.\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.androidnotification.MainActivity\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"ANDROID NOTIFICATION\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.091\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/button\"\', \'android:layout_marginBottom=\"112dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:text=\"Notify\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.androidnotification.NotificationView\">\', \'<TextView\', \'android:id=\"@+id/textView2\"\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:gravity=\"center\"\', \'android:text=\"your detail of notification...\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'<TextView\', \'android:id=\"@+id/textView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.096\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/textView2\"\', \'app:layout_constraintVertical_bias=\"0.206\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.androidnotification;\', \'import android.app.NotificationManager;\', \'import android.app.PendingIntent;\', \'import android.content.Context;\', \'import android.content.Intent;\', \'import android.support.v4.app.NotificationCompat;\', \'import android.support.v7.app.AppCompatActivity;\', \'import android.os.Bundle;\', \'import android.view.View;\', \'import android.widget.Button;\', \'public class MainActivity extends AppCompatActivity {\', \'Button button;\', \'@Override\', \'protected void onCreate(Bundle savedInstanceState) {\', \'super.onCreate(savedInstanceState);\', \'setContentView(R.layout.activity_main);\', \'button = findViewById(R.id.button);\', \'button.setOnClickListener(new View.OnClickListener() {\', \'@Override\', \'public void onClick(View v) {\', \'addNotification();\', \'}\', \'});\', \'private void addNotification() {\', \'NotificationCompat.Builder builder =\', \'new NotificationCompat.Builder(this)\', \'.setSmallIcon(R.drawable.messageicon) //set icon for notification\', \'.setContentTitle(\"Notifications Example\") //set title of notification\', \'.setContentText(\"This is a notification message\")//this is notification message\', \'.setAutoCancel(true) // makes auto cancel of notification\', \'.setPriority(NotificationCompat.PRIORITY_DEFAULT); //set priority of notification\', \'Intent notificationIntent = new Intent(this, NotificationView.class);\', \'notificationIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\', \'notificationIntent.putExtra(\"message\", \"This is a notification message\");\', \'PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, notificationIntent,\', \'PendingIntent.FLAG_UPDATE_CURRENT);\', \'builder.setContentIntent(pendingIntent);\', \'NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\', \'manager.notify(0, builder.build());\', \'package example.javatpoint.com.androidnotification;\', \'import android.support.v7.app.AppCompatActivity;\', \'import android.os.Bundle;\', \'import android.widget.TextView;\', \'import android.widget.Toast;\', \'public class NotificationView extends AppCompatActivity {\', \'TextView textView;\', \'@Override\', \'protected void onCreate(Bundle savedInstanceState) {\', \'super.onCreate(savedInstanceState);\', \'setContentView(R.layout.activity_notification_view);\', \'textView = findViewById(R.id.textView);\', \'String message=getIntent().getStringExtra(\"message\");\', \'textView.setText(message);\', \'<resources>\', \'<string name=\"app_name\">AndroidNotification</string>\', \'<string name=\"notification_activity\">NotificationView</string>\', \'</resources>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.androidnotification\">\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<activity android:name=\".MainActivity\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'<activity android:name=\".NotificationView\"\', \'android:label=\"@string/notification_activity\"\', \'android:parentActivityName=\".MainActivity\">\', \'<meta-data\', \'android:name=\"android.support.PARENT_ACTIVITY\"\', \'android:value=\".MainActivity\"/>\', \'</activity>\', \'</application>\', \'</manifest>\']','[]','[]','[\'|||setSmallIcon(): it sets the icon of notification.|||setContentTitle(): it is used to set the title of notification.|||setContentText(): it is used to set the text message.|||setAutoCancel(): it sets the cancelable property of notification.|||setPriority(): it sets the priority of notification.|||\']'),(99,'[\'Using Google reCAPTCHA in Android Application\']','[\"In this tutorial, we will learn the working process of Google reCaptcha and integrate it in our Android application. Google\'s reCaptcha protects our application from malicious traffic. It is implemented using SafetyNet API.\"]','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/https://developers.google.com/terms/\', \'https://www.javatpoint.com/https://g.co/recaptcha/androidsignup\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application2.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application3.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application4.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application-output1.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application-output2.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application-output3.png\', \'https://static.javatpoint.com/kotlin/images/using-google-recaptcha-in-android-application-output4.png\']','[]','[\'Working of Google reCaptcha\', \'Generating the reCAPTCHA Site key and Secret key:\', \'Android example of integrating Google reCAPTCHA\']','[\'build.gradle\', \'AndroidManifest.xml\', \'activity_main.xml\', \'MainActivity.java\']','[]','[\'The Google reCAPTCHA is validated by calling the network calls between Android application, SafetyNet server and your server:\', \'Before creating the API keys, read the API terms of services https://developers.google.com/terms/ carefully.\', \"Let\'s create an example of integrating Google reCAPTCHA in our Android application.\", \'Add the following SafetyNet and Volley dependencies in build.gradle file.\', \'Add the internet permission in AndroidManifest.xml file.\', \'Add the following code in activity_main.xml file.\', \'The Volley library is used for the following purpose:\']','[\'Add the following code in the MainActivity.java class file. In this class, we make the client side integration with SafetyNet server and get the response in JSON String.\', \'Replace the value of SITE_KEY and SECRET_KEY with your actual Site Key and Secret Key. When clicking on the button, it calls the SafetyNet.getClient() method to get the Site Key, if returns success than call handleSiteVerify() for token verify.\']','[]','[\'dependencies {\', \"implementation \'com.google.android.gms:play-services-safetynet:15.0.1\'\", \"implementation \'com.android.volley:volley:1.0.0\'\", \'<uses-permission android:name=\"android.permission.INTERNET\" />\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.googlerecaptcha.MainActivity\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Google Recaptcha\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.436\"\', \'app:layout_constraintLeft_toLeftOf=\"parent\"\', \'app:layout_constraintRight_toRightOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.017\" />\', \'<Button\', \'android:id=\"@+id/button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"52dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:text=\"Verify captcha\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\" />\', \'</android.support.constraint.ConstraintLayout>\', \'package example.javatpoint.com.googlerecaptcha;\', \'import android.support.annotation.NonNull;\', \'import android.support.v7.app.AppCompatActivity;\', \'import android.os.Bundle;\', \'import android.util.Log;\', \'import android.view.View;\', \'import android.widget.Button;\', \'import android.widget.Toast;\', \'import com.android.volley.DefaultRetryPolicy;\', \'import com.android.volley.Request;\', \'import com.android.volley.RequestQueue;\', \'import com.android.volley.Response;\', \'import com.android.volley.VolleyError;\', \'import com.android.volley.toolbox.StringRequest;\', \'import com.android.volley.toolbox.Volley;\', \'import com.google.android.gms.common.api.ApiException;\', \'import com.google.android.gms.common.api.CommonStatusCodes;\', \'import com.google.android.gms.safetynet.SafetyNet;\', \'import com.google.android.gms.safetynet.SafetyNetApi;\', \'import com.google.android.gms.tasks.OnFailureListener;\', \'import com.google.android.gms.tasks.OnSuccessListener;\', \'import org.json.JSONObject;\', \'import java.util.HashMap;\', \'import java.util.Map;\', \'public class MainActivity extends AppCompatActivity implements View.OnClickListener{\', \'String TAG = MainActivity.class.getSimpleName();\', \'Button btnverifyCaptcha;\', \'String SITE_KEY = \"6LeaN24UAxxxxx_YOUR_SITE_KEY\";\', \'String SECRET_KEY = \"6LeaN24UAxxxxx_YOUR_SECRET_KEY\";\', \'RequestQueue queue;\', \'@Override\', \'protected void onCreate(Bundle savedInstanceState) {\', \'super.onCreate(savedInstanceState);\', \'setContentView(R.layout.activity_main);\', \'btnverifyCaptcha = findViewById(R.id.button);\', \'btnverifyCaptcha.setOnClickListener(this);\', \'queue = Volley.newRequestQueue(getApplicationContext());\', \'@Override\', \'public void onClick(View view) {\', \'SafetyNet.getClient(this).verifyWithRecaptcha(SITE_KEY)\', \'.addOnSuccessListener(this, new OnSuccessListener<SafetyNetApi.RecaptchaTokenResponse>() {\', \'@Override\', \'public void onSuccess(SafetyNetApi.RecaptchaTokenResponse response) {\', \'if (!response.getTokenResult().isEmpty()) {\', \'handleSiteVerify(response.getTokenResult());\', \'}\', \'}\', \'})\', \'.addOnFailureListener(this, new OnFailureListener() {\', \'@Override\', \'public void onFailure(@NonNull Exception e) {\', \'if (e instanceof ApiException) {\', \'ApiException apiException = (ApiException) e;\', \'Log.d(TAG, \"Error message: \" +\', \'CommonStatusCodes.getStatusCodeString(apiException.getStatusCode()));\', \'} else {\', \'Log.d(TAG, \"Unknown type of error: \" + e.getMessage());\', \'}\', \'}\', \'});\', \'protected  void handleSiteVerify(final String responseToken){\', \'String url = \"https://www.google.com/recaptcha/api/siteverify\";\', \'StringRequest request = new StringRequest(Request.Method.POST, url,\', \'new Response.Listener<String>() {\', \'@Override\', \'public void onResponse(String response) {\', \'try {\', \'JSONObject jsonObject = new JSONObject(response);\', \'if(jsonObject.getBoolean(\"success\")){\', \'}\', \'else{\', \'Toast.makeText(getApplicationContext(),String.valueOf(jsonObject.getString(\"error-codes\")),Toast.LENGTH_LONG).show();\', \'}\', \'} catch (Exception ex) {\', \'Log.d(TAG, \"JSON exception: \" + ex.getMessage());\', \'}\', \'}\', \'},\', \'new Response.ErrorListener() {\', \'@Override\', \'public void onErrorResponse(VolleyError error) {\', \'Log.d(TAG, \"Error message: \" + error.getMessage());\', \'}\', \'}) {\', \'@Override\', \'protected Map<String, String> getParams() {\', \'Map<String, String> params = new HashMap<>();\', \'params.put(\"secret\", SECRET_KEY);\', \'params.put(\"response\", responseToken);\', \'return params;\', \'}\', \'};\', \'request.setRetryPolicy(new DefaultRetryPolicy(\', \'50000,\', \'DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\', \'DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\', \'queue.add(request);\']','[]','[]','[\'|||An Android app makes a request with Site Key to SafetyNet server for reCAPTCHA validation.|||The SafetyNet server generates the response by captcha token to the Android app using Site key.|||Captcha token is sent to your server for validating using the Secret key.|||Your android server makes a request to SafetyNet for validating captcha token using the Secret key.|||SafetyNet verifies the token response and returns the result as a success or a fail.|||Your Android server notifies the Android app by validating token and returns the result as a success or a fail.||||||Sign-up the Android reCAPTCHA site https://g.co/recaptcha/androidsignup .||||||Provide the input details of label, package name and accept the reCAPTCHA terms and Service.|||Label: It is a unique label for your key. You can use the name of your company or organization.|||Package Name: It is the package name of your android application.||||||The Site key, Secret key, client-side integration code, and server-side code are generated at next page.||||||The RequestQueue of Volley library maintains the server calls in a queue.|||StringRequest is used to get the response as JSON String from your server.|||The setRetryPolicy() method retry the server call if it fails within the time limit.|||\']'),(100,'[\'Android Firebase Authentication - Google Login\']','[\"Firebase Authentication provides backend services for easy use the SDKs and in-built UI libraries to authenticate the user in the application. Most of the apps need the identity of the user, and after knowing their status, the app saves the user\'s data securely in the cloud. It aims to build a secure authentication system. \"]','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/https://firebase.google.com/\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/android-firebase-authentication.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication2.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication3.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication4.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication5.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication6.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication7.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication8.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication-output1.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication-output2.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication-output3.png\', \'https://static.javatpoint.com/kotlin/images/android-firebase-authentication-output4.png\']','[]','[\'Android Firebase Authentication with Google Sign-In Example\']','[\'AndroidManifest.xml\', \'activity_main.xml\', \'strings.xml\', \'MainActivity.java\', \'profile_activity.xml\', \'ProfileActivity.java\']','[]','[\'Using Firebase Authentication, we will authenticate the log-in of Google, Facebook, GitHub, Twitter and more.\', \"1. Create a Firebase developer account at https://firebase.google.com/ and click on \'GO TO CONSOLE\'. \", \"2. Click on \'Add project\'.\", \"3. Fill the project name and select the analytics location, cloud Firestore location, accept the controller terms and click \'Create project,\'.\", \"4. When your new project is successfully ready click on \'Continue\'.\", \"5. Select the \'Android\' platform SDK.\", \"7. Now download the \'google-services.json\' file to integrate it into the Android application and click on \'Next\'.\", \"8. Add the firebase SDK dependencies in .gradle files of your application and click \'Sync now\' in the IDE and click on \'Next\'.\", \'build.gradle (Project)\', \'build.gradle (Module)\', \'Add the Internet permission in the AndroidManifest.xml file to access the network connection.\', \"10. At console page select Authentication -> Sign-in method ->Google -> Enable and click on \'Save\'.\", \"We need to paste the downloaded \'google-services.json\' file in our Android project app directory.\", \'Add the following code in an activity_main.xml file. In this activity, we implement the custom Google Sign-in button.\', \'Add your web client id in the string.xml file. Even you can use the default Google web client id in the program.\', \'Add the following code in MainActivity.java class. The functionality of classes and methods used in MainActivity.java class are given below:\', \'If the Firebase authentication is success, we redirect the user to the next activity (ProfileActivity.java).\', \'The GoogleSignInAccount class keeps the necessary information of the user.\']','[\'In this tutorial, we will integrate the Firebase Authentication for Google Sign-In functionality in our Android application using Google and Firebase APIs.\', \"6. Register your app to Firebase by providing required app information and click on \'Register app\'.\nWe can get the app certificate SHA-1 key through following steps: \", \"9. Run your app to verify the installation configuration, if everything is fine it displays a success message and then click on \'Continue to console\'.\", \'Add the following code in the profile_activity.xml file. The ImageView is used for display the user profile image, TextView is for name, email id, and a button for log-out.\', \'In this ProfileActivity.java class, we get the user information and display them. The GoogleSignInResult class implements the Result interface which represents the final result of invoking an API method of Google Play Services.\']','[\'In this example, we will integrate the Firebase Authentication with Google Sign-In in our Android app. Once the user successfully login through Google Sign-In, we will authenticate them with Firebase Authentication and then redirect the user to the next activity (ProfileActivity) and display their detail.\']','[\'dependencies {\', \"classpath \'com.android.tools.build:gradle:3.0.1\'\", \"classpath \'com.google.gms:google-services:4.0.1\'\", \'dependencies {\', \"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \"implementation \'com.android.support:appcompat-v7:27.1.1\'\", \"implementation \'com.android.support.constraint:constraint-layout:1.1.3\'\", \"testImplementation \'junit:junit:4.12\'\", \"androidTestImplementation \'com.android.support.test:runner:1.0.2\'\", \"androidTestImplementation \'com.android.support.test.espresso:espresso-core:3.0.2\'\", \"implementation \'com.google.firebase:firebase-auth:16.0.3\'\", \"implementation \'com.google.firebase:firebase-core:16.0.3\'\", \"implementation \'com.google.android.gms:play-services-auth:16.0.0\'\", \"implementation \'com.github.bumptech.glide:glide:3.7.0\'\", \"apply plugin: \'com.google.gms.google-services\'\", \'<uses-permission android:name=\"android.permission.INTERNET\" />\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.firebasegooglelogin.MainActivity\">\', \'<TextView\', \'android:id=\"@+id/textView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginLeft=\"20dp\"\', \'android:layout_marginRight=\"20dp\"\', \'android:textSize=\"20dp\"\', \'android:text=\"This is main activity, sign in to move next activity.\" />\', \'<com.google.android.gms.common.SignInButton\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/sign_in_button\"\', \'android:layout_marginLeft=\"20dp\"\', \'android:layout_marginRight=\"20dp\"\', \'android:layout_alignParentBottom=\"true\"\', \'android:layout_marginBottom=\"20dp\">\', \'</com.google.android.gms.common.SignInButton>\', \'</RelativeLayout>\', \'<resources>\', \'<string name=\"app_name\">Firebase Google Login</string>\', \'<string name=\"web_client_id\">xxxxxxxx..place your web client id here</string>\', \'</resources>\', \'package example.javatpoint.com.firebasegooglelogin;\', \'import android.content.Intent;\', \'import android.support.annotation.NonNull;\', \'import android.support.v7.app.AppCompatActivity;\', \'import android.os.Bundle;\', \'import android.util.Log;\', \'import android.view.View;\', \'import android.widget.Toast;\', \'import com.google.android.gms.auth.api.Auth;\', \'import com.google.android.gms.auth.api.signin.GoogleSignInAccount;\', \'import com.google.android.gms.auth.api.signin.GoogleSignInOptions;\', \'import com.google.android.gms.auth.api.signin.GoogleSignInResult;\', \'import com.google.android.gms.common.ConnectionResult;\', \'import com.google.android.gms.common.SignInButton;\', \'import com.google.android.gms.common.api.GoogleApiClient;\', \'import com.google.android.gms.tasks.OnCompleteListener;\', \'import com.google.android.gms.tasks.Task;\', \'import com.google.firebase.auth.AuthCredential;\', \'import com.google.firebase.auth.AuthResult;\', \'import com.google.firebase.auth.FirebaseAuth;\', \'import com.google.firebase.auth.FirebaseUser;\', \'import com.google.firebase.auth.GoogleAuthProvider;\', \'public class MainActivity extends AppCompatActivity implements GoogleApiClient.OnConnectionFailedListener {\', \'private static final String TAG = \"MainActivity\";\', \'private SignInButton signInButton;\', \'private GoogleApiClient googleApiClient;\', \'private static final int RC_SIGN_IN = 1;\', \'String name, email;\', \'String idToken;\', \'private FirebaseAuth firebaseAuth;\', \'private FirebaseAuth.AuthStateListener authStateListener;\', \'@Override\', \'protected void onCreate(Bundle savedInstanceState) {\', \'super.onCreate(savedInstanceState);\', \'setContentView(R.layout.activity_main);\', \'firebaseAuth = com.google.firebase.auth.FirebaseAuth.getInstance();\', \'authStateListener = new FirebaseAuth.AuthStateListener(){\', \'@Override\', \'public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\', \'FirebaseUser user = firebaseAuth.getCurrentUser();\', \'if (user != null) {\', \'Log.d(TAG, \"onAuthStateChanged:signed_in:\" + user.getUid());\', \'} else {\', \'Log.d(TAG, \"onAuthStateChanged:signed_out\");\', \'}\', \'}\', \'};\', \'GoogleSignInOptions gso =  new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\', \'.requestIdToken(getString(R.string.web_client_id))//you can also use R.string.default_web_client_id\', \'.requestEmail()\', \'.build();\', \'googleApiClient=new GoogleApiClient.Builder(this)\', \'.enableAutoManage(this,this)\', \'.addApi(Auth.GOOGLE_SIGN_IN_API,gso)\', \'.build();\', \'signInButton = findViewById(R.id.sign_in_button);\', \'signInButton.setOnClickListener(new View.OnClickListener() {\', \'@Override\', \'public void onClick(View view) {\', \'Intent intent = Auth.GoogleSignInApi.getSignInIntent(googleApiClient);\', \'startActivityForResult(intent,RC_SIGN_IN);\', \'}\', \'});\', \'@Override\', \'public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {\', \'@Override\', \'protected void onActivityResult(int requestCode, int resultCode, Intent data) {\', \'super.onActivityResult(requestCode, resultCode, data);\', \'if(requestCode==RC_SIGN_IN){\', \'GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);\', \'handleSignInResult(result);\', \'}\', \'private void handleSignInResult(GoogleSignInResult result){\', \'if(result.isSuccess()){\', \'GoogleSignInAccount account = result.getSignInAccount();\', \'idToken = account.getIdToken();\', \'name = account.getDisplayName();\', \'email = account.getEmail();\', \'AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\', \'firebaseAuthWithGoogle(credential);\', \'}else{\', \'Log.e(TAG, \"Login Unsuccessful. \"+result);\', \'Toast.makeText(this, \"Login Unsuccessful\", Toast.LENGTH_SHORT).show();\', \'}\', \'private void firebaseAuthWithGoogle(AuthCredential credential){\', \'firebaseAuth.signInWithCredential(credential)\', \'.addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\', \'@Override\', \'public void onComplete(@NonNull Task<AuthResult> task) {\', \'Log.d(TAG, \"signInWithCredential:onComplete:\" + task.isSuccessful());\', \'if(task.isSuccessful()){\', \'Toast.makeText(MainActivity.this, \"Login successful\", Toast.LENGTH_SHORT).show();\', \'gotoProfile();\', \'}else{\', \'Log.w(TAG, \"signInWithCredential\" + task.getException().getMessage());\', \'task.getException().printStackTrace();\', \'Toast.makeText(MainActivity.this, \"Authentication failed.\",\', \'Toast.LENGTH_SHORT).show();\', \'}\', \'}\', \'});\', \'private void gotoProfile(){\', \'Intent intent = new Intent(MainActivity.this, ProfileActivity.class);\', \'intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\', \'startActivity(intent);\', \'finish();\', \'@Override\', \'protected void onStart() {\', \'super.onStart();\', \'if (authStateListener != null){\', \'FirebaseAuth.getInstance().signOut();\', \'}\', \'firebaseAuth.addAuthStateListener(authStateListener);\', \'@Override\', \'protected void onStop() {\', \'super.onStop();\', \'if (authStateListener != null){\', \'firebaseAuth.removeAuthStateListener(authStateListener);\', \'}\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.firebasegooglelogin.ProfileActivity\">\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'android:gravity=\"center\"\', \'android:orientation=\"vertical\">\', \'<ImageView\', \'android:layout_width=\"80dp\"\', \'android:layout_height=\"80dp\"\', \'android:id=\"@+id/profileImage\"\', \'/>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/name\"\', \'android:text=\"name\"\', \'android:textSize=\"20dp\"\', \'android:layout_marginTop=\"20dp\"/>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/email\"\', \'android:textSize=\"20dp\"\', \'android:text=\"email\"\', \'android:layout_marginTop=\"20dp\"/>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/userId\"\', \'android:textSize=\"20dp\"\', \'android:text=\"id\"\', \'android:layout_marginTop=\"20dp\"/>\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/logoutBtn\"\', \'android:text=\"Logout\"\', \'android:layout_marginTop=\"30dp\"/>\', \'</LinearLayout>\', \'</RelativeLayout>\', \'package example.javatpoint.com.firebasegooglelogin;\', \'import android.content.Intent;\', \'import android.support.annotation.NonNull;\', \'import android.support.v7.app.AppCompatActivity;\', \'import android.os.Bundle;\', \'import android.view.View;\', \'import android.widget.Button;\', \'import android.widget.ImageView;\', \'import android.widget.TextView;\', \'import android.widget.Toast;\', \'import com.bumptech.glide.Glide;\', \'import com.google.android.gms.auth.api.Auth;\', \'import com.google.android.gms.auth.api.signin.GoogleSignInAccount;\', \'import com.google.android.gms.auth.api.signin.GoogleSignInOptions;\', \'import com.google.android.gms.auth.api.signin.GoogleSignInResult;\', \'import com.google.android.gms.common.ConnectionResult;\', \'import com.google.android.gms.common.api.GoogleApiClient;\', \'import com.google.android.gms.common.api.OptionalPendingResult;\', \'import com.google.android.gms.common.api.ResultCallback;\', \'import com.google.android.gms.common.api.Status;\', \'import com.google.firebase.auth.FirebaseAuth;\', \'public class ProfileActivity extends AppCompatActivity implements GoogleApiClient.OnConnectionFailedListener {\', \'Button logoutBtn;\', \'TextView userName,userEmail,userId;\', \'ImageView profileImage;\', \'private GoogleApiClient googleApiClient;\', \'private GoogleSignInOptions gso;\', \'@Override\', \'protected void onCreate(Bundle savedInstanceState) {\', \'super.onCreate(savedInstanceState);\', \'setContentView(R.layout.activity_profile);\', \'logoutBtn = findViewById(R.id.logoutBtn);\', \'userName = findViewById(R.id.name);\', \'userEmail = findViewById(R.id.email);\', \'userId = findViewById(R.id.userId);\', \'profileImage = findViewById(R.id.profileImage);\', \'gso =  new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\', \'.requestEmail()\', \'.build();\', \'googleApiClient=new GoogleApiClient.Builder(this)\', \'.enableAutoManage(this,this)\', \'.addApi(Auth.GOOGLE_SIGN_IN_API,gso)\', \'.build();\', \'logoutBtn.setOnClickListener(new View.OnClickListener() {\', \'@Override\', \'public void onClick(View view) {\', \'FirebaseAuth.getInstance().signOut();\', \'Auth.GoogleSignInApi.signOut(googleApiClient).setResultCallback(\', \'new ResultCallback<Status>() {\', \'@Override\', \'public void onResult(Status status) {\', \'if (status.isSuccess()){\', \'gotoMainActivity();\', \'}else{\', \'Toast.makeText(getApplicationContext(),\"Session not close\",Toast.LENGTH_LONG).show();\', \'}\', \'}\', \'});\', \'}\', \'});\', \'@Override\', \'protected void onStart() {\', \'super.onStart();\', \'OptionalPendingResult<GoogleSignInResult> opr= Auth.GoogleSignInApi.silentSignIn(googleApiClient);\', \'if(opr.isDone()){\', \'GoogleSignInResult result=opr.get();\', \'handleSignInResult(result);\', \'}else{\', \'opr.setResultCallback(new ResultCallback<GoogleSignInResult>() {\', \'@Override\', \'public void onResult(@NonNull GoogleSignInResult googleSignInResult) {\', \'handleSignInResult(googleSignInResult);\', \'}\', \'});\', \'}\', \'private void handleSignInResult(GoogleSignInResult result){\', \'if(result.isSuccess()){\', \'GoogleSignInAccount account=result.getSignInAccount();\', \'userName.setText(account.getDisplayName());\', \'userEmail.setText(account.getEmail());\', \'userId.setText(account.getId());\', \'try{\', \'Glide.with(this).load(account.getPhotoUrl()).into(profileImage);\', \'}catch (NullPointerException e){\', \'Toast.makeText(getApplicationContext(),\"image not found\",Toast.LENGTH_LONG).show();\', \'}\', \'}else{\', \'gotoMainActivity();\', \'}\', \'private void gotoMainActivity(){\', \'Intent intent=new Intent(this,MainActivity.class);\', \'startActivity(intent);\', \'@Override\', \'public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {\']','[]','[]','[\"|||Open Android project. |||Open the Gradle tab from a right side panel.|||Double click on \'signingReport\'. |||We will found our app SHA-1 key on \'Gradle Console\'. ||||||The new FirebaseAuth.AuthStateListener(){} is used as an authentication listener to check whether the user is sign-in or not. If the users successfully sign-in we place other firebase logic.|||The new GoogleSignInOptions.Builder() method configure the Google Sign-in to get the user data using the requestEmail option.|||Clicking on Sign-In button, it calls Auth.GoogleSignInApi.getSignInIntent(googleApiClient) and starting the intent with startActivityForResult().|||The onActivityResult() we get the result of Google Sign-in request.|||If handleSignInResult(result) returns true, we get the Google Authentication using idToken.|||Calling firebaseAuthWithGoogle(credential) for making Firebase Authentication with Google.|||\"]'),(101,'[\'Kotlin Android Google AdMob Banner Ads Example\']','[\'In this tutorial, we implement the Google AdMob Banner Ads in our Android application. To place the Google AdMob in Android application, we need to create the Google Ad Unit Id. The complete reference for creating the Google AdMod account and generate the Ad Unit Id is described at Android Google AdMob. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-google-admob\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-banner-ads-example-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-banner-ads-example-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-banner-ads-example-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-banner-ads-example-output4.png\']','[]','[]','[\'build.gradle\', \'activity_main.xml\', \'strings.xml\', \'MainActivity.kt\', \'AndroidManifest.xml\']','[\'Note: If you got an exception as java.lang.RuntimeException: Unable to get provider com.google.android.gms.ads.MobileAdsInitProvider: java.lang.IllegalStateException: then add the\']','[\'We are also able to place the Google AdMob Ads on other activities such as Blank Activity. \', \"Add the Google ads dependency \'com.google.android.gms:play-services-ads:17.0.0\' in the build.gradle file:\", \'Add the Google Ads View on that layout in which we want to display our ads. Here, we have added in our activity_main.xml file.\', \'Add the created ad unit id in the string.xml file.\', \'Override the AdView listeners onAdFailedToLoad(), onAdLoaded(), onAdOpened(), onAdClicked(), onAdClosed(), etc.\', \'in AndroidManifest file.\', \'Add the following code in AndroidManifest.xml file \']','[\'To display the banner ad, we need to add the com.google.android.gms.ads.AdView element to our XML layout. The banner ads align to the bottom of the screen.\', \'Add the following code in MainActivity.kt class. To load the ad on the UI, create the instance of AdRequest and load the ad in AdView by calling AdView.loadAd(AdRequest).\']','[\'Banner ads are rectangular text or image ads that occupy a small spot in activity layout. To implement the Google AdMob in the Android application, select Google AdMob Ads Activity and select the Ad format type as Banner. This activity adds the default required library dependency, View for Ads display, Internet permission, and other required code.\']','[\'dependencies {\', \"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \'implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.android.support.constraint:constraint-layout:1.1.3\'\", \"implementation \'com.google.android.gms:play-services-ads:17.0.0\'\", \"testImplementation \'junit:junit:4.12\'\", \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:ads=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinbannerads.MainActivity\">\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentTop=\"true\"\', \'android:layout_centerHorizontal=\"true\"\', \'android:layout_marginTop=\"215dp\"\', \'android:text=\"@string/banner_ad_sample\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/>\', \'<!-- view for AdMob Banner Ad -->\', \'<com.google.android.gms.ads.AdView\', \'android:id=\"@+id/adView\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_alignParentBottom=\"true\"\', \'android:layout_centerHorizontal=\"true\"\', \'ads:adSize=\"BANNER\"\', \'ads:adUnitId=\"@string/banner_ad_unit_id\" />\', \'</RelativeLayout>\', \'<resources>\', \'<string name=\"app_name\">Kotlin Banner Ads</string>\', \'<string name=\"banner_ad_sample\">Banner Ad Sample</string>\', \'<!-- -\', \'This is an ad unit ID for a banner test ad. Replace with your own banner ad unit id.\', \'-->\', \'<string name=\"banner_ad_unit_id\">ca-app-pub-3940256099942544/6300978111</string>\', \'<!--  <string name=\"title_activity_banner\">BannerActivity</string>-->\', \'</resources>\', \'package example.javatpoint.com.kotlinbannerads\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.view.View\', \'import android.widget.Toast\', \'import com.google.android.gms.ads.AdListener\', \'import com.google.android.gms.ads.AdRequest\', \'import com.google.android.gms.ads.AdView\', \'class MainActivity : AppCompatActivity() {\', \'lateinit var adView : AdView\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'adView = findViewById<View>(R.id.adView) as AdView\', \'val adRequest = AdRequest.Builder().build()\', \'adView.loadAd(adRequest)\', \'adView.adListener = object : AdListener(){\', \'override fun onAdFailedToLoad(p0: Int) {\', \'super.onAdFailedToLoad(p0)\', \'val toastMessage: String = \"ad fail to load\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'override fun onAdLoaded() {\', \'super.onAdLoaded()\', \'val toastMessage: String = \"ad loaded\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'override fun onAdOpened() {\', \'super.onAdOpened()\', \'val toastMessage: String = \"ad is open\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'override fun onAdClicked() {\', \'super.onAdClicked()\', \'val toastMessage: String = \"ad is clicked\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'override fun onAdClosed() {\', \'super.onAdClosed()\', \'val toastMessage: String = \"ad is closed\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'override fun onAdImpression() {\', \'super.onAdImpression()\', \'val toastMessage: String = \"ad impression\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'override fun onAdLeftApplication() {\', \'super.onAdLeftApplication()\', \'val toastMessage: String = \"ad left application\"\', \'Toast.makeText(applicationContext, toastMessage.toString(), Toast.LENGTH_LONG).show()\', \'}\', \'}\', \'override fun onPause() {\', \'if (adView!=null) {\', \'adView.pause();\', \'}\', \'super.onPause()\', \'override fun onResume() {\', \'super.onResume()\', \'if (adView != null) {\', \'adView.resume();\', \'}\', \'override fun onDestroy() {\', \'if (adView != null) {\', \'adView.destroy();\', \'}\', \'super.onDestroy();\', \'<meta-data\', \'android:name=\"com.google.android.gms.ads.AD_MANAGER_APP\"\', \'android:value=\"true\"/>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlinbannerads\">\', \'<!-- Include required permissions for Google Mobile Ads to run. -->\', \'<uses-permission android:name=\"android.permission.INTERNET\" />\', \'<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<activity android:name=\".MainActivity\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'<!-- This meta-data tag is required to use Google Play Services. -->\', \'<meta-data\', \'android:name=\"com.google.android.gms.version\"\', \'android:value=\"@integer/google_play_services_version\" />\', \'<meta-data\', \'android:name=\"com.google.android.gms.ads.AD_MANAGER_APP\"\', \'android:value=\"true\"/>\', \'<activity\', \'android:name=\"com.google.android.gms.ads.AdActivity\"\', \'android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\"\', \'android:theme=\"@android:style/Theme.Translucent\" />\', \'</application>\', \'</manifest>\']','[]','[]','[]'),(102,'[\'Kotlin Android Google AdMob Interstitial Ads Example\']','[\'In this tutorial, we implement the Google AdMob Interstitial Ads in our Android application. To place the Google AdMob in Android application, we need to create the Google Ad Unit Id. The complete reference for creating the Google AdMod account and generate the Ad Unit Id is described at Android Google AdMob. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-google-admob\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-interstitial-ads-example-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-interstitial-ads-example-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-interstitial-ads-example-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-admob-interstitial-ads-example-output4.png\']','[]','[\'build.gradle\']','[\'activity_main.xml\', \'strings.xml\', \'MainActivity.kt\', \'AndroidManifest.xml\']','[]','[\'We are also able to place the Google AdMob Ads on other activities such as Blank Activity.\', \"Add the Google ads dependency \'com.google.android.gms:play-services-ads:17.0.0\' in the build.gradle file:\", \'Add your UI code in the activity_main.xml. The Button component is used to load the ad.\', \'Add the created ad unit id in the string.xml file.\', \'Add the following code in AndroidManifest.xml file: \']','[\'Add the following code in MainActivity.kt class. To load the ad on the UI, create the instance of InterstitialAd and initialize the ad unit id on InterstitialAd interstitialAd.adUnitId = getString(R.string.interstitial_ad_unit_id).\', \'Override the InterstitialAd listeners onAdLoaded(), onAdFailedToLoad(), onAdClosed. To load the ad on clicking the button, create the instance of AdRequest and load the ad by calling InterstitialAd!!.loadAd(AdRequest).\']','[\'An Interstitials ad is the full-screen ad that covers the entire activity layout. This ad is displayed at a transition point of an activity. To implement the Google AdMob in the Android application, choose Google AdMob Ads Activity and select the Ad format type as Interstitials. \']','[\'dependencies {\', \"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \'implementation\"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.google.android.gms:play-services-ads:17.0.0\'\", \"testImplementation \'junit:junit:4.12\'\", \'<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlininterstitialads.MainActivity\">\', \'<!-- view for AdMob Interstitial Ad -->\', \'<TextView\', \'android:id=\"@+id/app_title\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_centerHorizontal=\"true\"\', \'android:layout_marginTop=\"50dp\"\', \'android:text=\"@string/interstitial_ad_sample\"\', \'android:textAppearance=\"?android:attr/textAppearanceLarge\" />\', \'<Button\', \'android:id=\"@+id/load_ad_button\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_centerHorizontal=\"true\"\', \'android:layout_centerVertical=\"true\"\', \'android:text=\"@string/load_ad\" />\', \'</RelativeLayout>\', \'<resources>\', \'<string name=\"app_name\">KotlinInterstitialAds</string>\', \'<string name=\"action_settings\">Settings</string>\', \'<string name=\"interstitial_ad_sample\">Interstitial Ad Sample</string>\', \'<string name=\"load_ad\">Load Ad</string>\', \'<!-- -\', \'This is an ad unit ID for an interstitial test ad. Replace with your own interstitial ad unit id.\', \'-->\', \'<string name=\"interstitial_ad_unit_id\">ca-app-pub-3940256099942544/1033173712</string>\', \'</resources>\', \'package example.javatpoint.com.kotlininterstitialads\', \'import com.google.android.gms.ads.AdListener\', \'import com.google.android.gms.ads.AdRequest\', \'import com.google.android.gms.ads.InterstitialAd\', \'import android.os.Bundle\', \'import android.support.v7.app.AppCompatActivity\', \'import android.widget.Button\', \'import android.widget.Toast\', \'class MainActivity : AppCompatActivity() {\', \'private var mLoadAdButton: Button? = null\', \'private var mInterstitialAd: InterstitialAd? = null\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'mInterstitialAd = newInterstitialAd()\', \'loadInterstitial()\', \'mLoadAdButton = findViewById(R.id.load_ad_button) as Button\', \'mLoadAdButton!!.isEnabled = false\', \'mLoadAdButton!!.setOnClickListener {\', \'showInterstitial()\', \'}\', \'private fun newInterstitialAd(): InterstitialAd {\', \'val interstitialAd = InterstitialAd(this)\', \'interstitialAd.adUnitId = getString(R.string.interstitial_ad_unit_id)\', \'interstitialAd.adListener = object : AdListener() {\', \'override fun onAdLoaded() {\', \'mLoadAdButton!!.isEnabled = true\', \'Toast.makeText(applicationContext, \"Ad Loaded\", Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onAdFailedToLoad(errorCode: Int) {\', \'mLoadAdButton!!.isEnabled = true\', \'Toast.makeText(applicationContext, \"Ad Failed To Load\", Toast.LENGTH_SHORT).show()\', \'}\', \'override fun onAdClosed() {\', \'Toast.makeText(applicationContext, \"Ad Closed\", Toast.LENGTH_SHORT).show()\', \'tryToLoadAdOnceAgain()\', \'}\', \'}\', \'return interstitialAd\', \'private fun loadInterstitial() {\', \'mLoadAdButton!!.isEnabled = false\', \'val adRequest = AdRequest.Builder().build()\', \'mInterstitialAd!!.loadAd(adRequest)\', \'private fun showInterstitial() {\', \'if (mInterstitialAd != null && mInterstitialAd!!.isLoaded) {\', \'mInterstitialAd!!.show()\', \'} else {\', \'Toast.makeText(this, \"Ad did not load\", Toast.LENGTH_SHORT).show()\', \'tryToLoadAdOnceAgain()\', \'}\', \'private fun tryToLoadAdOnceAgain() {\', \'mInterstitialAd = newInterstitialAd()\', \'loadInterstitial()\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlininterstitialads\">\', \'<!-- Include required permissions for Google Mobile Ads to run. -->\', \'<uses-permission android:name=\"android.permission.INTERNET\" />\', \'<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\"> <!-- This meta-data tag is required to use Google Play Services. -->\', \'<meta-data\', \'android:name=\"com.google.android.gms.version\"\', \'android:value=\"@integer/google_play_services_version\" />\', \'<activity\', \'android:name=\".MainActivity\"\', \'android:label=\"@string/app_name\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity> <!-- Include the AdActivity configChanges and theme. -->\', \'<activity\', \'android:name=\"com.google.android.gms.ads.AdActivity\"\', \'android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\"\', \'android:theme=\"@android:style/Theme.Translucent\" />\', \'<meta-data\', \'android:name=\"com.google.android.gms.ads.AD_MANAGER_APP\"\', \'android:value=\"true\"/>\', \'</application>\', \'</manifest>\']','[]','[]','[]'),(103,'[\'Kotlin Android Google Map Current Location\']','[\'To implement the Google Map in an Android application, we need to generate the Google Map API key. The process of creating the Google Map API key is described in Google Map Fixed Location tutorial. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-google-map-fixed-location\', \'https://www.javatpoint.com/kotlin-android-google-map-fixed-location\', \'https://www.javatpoint.com/ android-google-map-displaying-current-location\', \'https://www.javatpoint.com/android-google-map\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-current-location-output1.png\']','[]','[\'Google Map API Interface\', \'Types of Google Map\']','[\'activity_maps.xml\', \'strings.xml\', \'build.gradle\', \'google_maps_api.xml\', \'MapsActivity.kt\', \'AndroidManifest.xml\']','[\'Note: Check it on the real Android device for the best result of output.\']','[\'In the previous tutorial of Kotlin Android Google Map Fixed Location, we have displayed the fixed Google location.\', \'The isLocationEnabled property of GoogleMap is used to enable location layer, which allows the device to interact with the current location.\', \"The tutorial using Java to display Google Map user\'s current location is described at Android Google Map Displaying Current Location.\", \'Using Kotlin syntax, we will use the above Google map types as:\', \'The detail about these map types are explain here.\', \'Add the following code in activity_maps.xml layout file.\', \'Add the Google Map Service and Google Location Service dependencies in build.gradle file.\', \'Place the Google Map API key in res/values/google_map_api.xml file.\', \'Add the following code in MapsActivity.kt class file.\']','[\"Now in this tutorial, we will display and place the marker at user\'s current location. To view the user\'s current location, we need to implement some Google Map interfaces and call there callbacks methods.\", \'There are four different types of Google map are available in map API. Each of them has different view of the map. These types are Normal, Hybrid, Satellite and Terrain.\']','[]','[\'<fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:map=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:id=\"@+id/map\"\', \'android:name=\"com.google.android.gms.maps.SupportMapFragment\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlingooglemapcurrentlocation.MapsActivity\" />\', \'<resources>\', \'<string name=\"app_name\">Kotlin Google Map Current Location</string>\', \'<string name=\"title_activity_maps\">Map Current Location</string>\', \'</resources>\', \'dependencies {\', \"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \'implementation\"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.google.android.gms:play-services-maps:11.8.0\'\", \"compile \'com.google.android.gms:play-services-location:11.8.0\'\", \"testImplementation \'junit:junit:4.12\'\", \'<resources>\', \'<!--\', \'https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=20:0B:71:3B:B2:46:75:A1:87:78:2E:4C:49:3F:E3:B6:FD:2D:76:D3%3Bexample.javatpoint.com.kotlingooglemapcurrentlocation\', \'Alternatively, follow the directions here:\', \'https://developers.google.com/maps/documentation/android/start#get-key\', \'-->\', \'<string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">AIzaSyCuxsZ0D73o-REPLACE-WITH-YOUR-API</string>\', \'</resources>\', \'package example.javatpoint.com.kotlingooglemapcurrentlocation\', \'import android.content.pm.PackageManager\', \'import android.location.Location\', \'import android.os.Build\', \'import android.os.Bundle\', \'import android.support.v4.app.FragmentActivity\', \'import android.support.v4.content.ContextCompat\', \'import com.google.android.gms.common.ConnectionResult\', \'import com.google.android.gms.common.api.GoogleApiClient\', \'import com.google.android.gms.maps.CameraUpdateFactory\', \'import com.google.android.gms.maps.GoogleMap\', \'import com.google.android.gms.maps.OnMapReadyCallback\', \'import com.google.android.gms.maps.SupportMapFragment\', \'import com.google.android.gms.maps.model.BitmapDescriptorFactory\', \'import com.google.android.gms.maps.model.LatLng\', \'import com.google.android.gms.maps.model.Marker\', \'import com.google.android.gms.maps.model.MarkerOptions\', \'import android.Manifest\', \'import android.os.Looper\', \'import android.widget.Toast\', \'import com.google.android.gms.location.*\', \'import com.google.android.gms.location.FusedLocationProviderClient\', \'import com.google.android.gms.location.LocationCallback\', \'import com.google.android.gms.location.LocationRequest\', \'import com.google.android.gms.location.LocationServices\', \'class MapsActivity : FragmentActivity(), OnMapReadyCallback, LocationListener,\', \'GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {\', \'private var mMap: GoogleMap? = null\', \'internal lateinit var mLastLocation: Location\', \'internal lateinit var mLocationResult: LocationRequest\', \'internal lateinit var mLocationCallback: LocationCallback\', \'internal var mCurrLocationMarker: Marker? = null\', \'internal var mGoogleApiClient: GoogleApiClient? = null\', \'internal lateinit var mLocationRequest: LocationRequest\', \'internal var mFusedLocationClient: FusedLocationProviderClient? = null\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_maps)\', \'val mapFragment = supportFragmentManager\', \'.findFragmentById(R.id.map) as SupportMapFragment\', \'mapFragment.getMapAsync(this)\', \'override fun onMapReady(googleMap: GoogleMap) {\', \'mMap = googleMap\', \'if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\', \'if (ContextCompat.checkSelfPermission(this,\', \'Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\', \'buildGoogleApiClient()\', \'mMap!!.isMyLocationEnabled = true\', \'}\', \'} else {\', \'buildGoogleApiClient()\', \'mMap!!.isMyLocationEnabled = true\', \'}\', \'@Synchronized\', \'protected fun buildGoogleApiClient() {\', \'mGoogleApiClient = GoogleApiClient.Builder(this)\', \'.addConnectionCallbacks(this)\', \'.addOnConnectionFailedListener(this)\', \'.addApi(LocationServices.API).build()\', \'mGoogleApiClient!!.connect()\', \'override fun onConnected(bundle: Bundle?) {\', \'mLocationRequest = LocationRequest()\', \'mLocationRequest.interval = 1000\', \'mLocationRequest.fastestInterval = 1000\', \'mLocationRequest.priority = LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY\', \'if (ContextCompat.checkSelfPermission(this,\', \'Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\', \'mFusedLocationClient = LocationServices.getFusedLocationProviderClient(this)\', \'mFusedLocationClient?.requestLocationUpdates(mLocationRequest,mLocationCallback, Looper.myLooper())\', \'}\', \'override fun onLocationChanged(location: Location) {\', \'mLastLocation = location\', \'if (mCurrLocationMarker != null) {\', \'mCurrLocationMarker!!.remove()\', \'}\', \'val latLng = LatLng(location.latitude, location.longitude)\', \'val markerOptions = MarkerOptions()\', \'markerOptions.position(latLng)\', \'markerOptions.title(\"Current Position\")\', \'markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))\', \'mCurrLocationMarker = mMap!!.addMarker(markerOptions)\', \'mMap!!.moveCamera(CameraUpdateFactory.newLatLng(latLng))\', \'mMap!!.animateCamera(CameraUpdateFactory.zoomTo(11f))\', \'if (mGoogleApiClient != null) {\', \'mFusedLocationClient?.removeLocationUpdates(mLocationCallback)\', \'}\', \'override fun onConnectionFailed(connectionResult: ConnectionResult) {\', \'Toast.makeText(applicationContext,\"connection failed\", Toast.LENGTH_SHORT).show()\', \'override fun onConnectionSuspended(p0: Int) {\', \'Toast.makeText(applicationContext,\"connection suspended\", Toast.LENGTH_SHORT).show()\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlingooglemapcurrentlocation\">\', \'<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<meta-data\', \'android:name=\"com.google.android.geo.API_KEY\"\', \'android:value=\"@string/google_maps_key\" />\', \'<activity\', \'android:name=\".MapsActivity\"\', \'android:label=\"@string/title_activity_maps\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'</application>\', \'</manifest>\']','[]','[]','[\'|||googleMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);|||googleMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);|||googleMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);|||googleMap.setMapType(GoogleMap.MAP_TYPE_TERRAIN);||||||googleMap.mapType = MAP_TYPE_NONE|||googleMap.mapType = MAP_TYPE_HYBRID|||googleMap.mapType = MAP_TYPE_SATELLITE|||googleMap.mapType = MAP_TYPE_TERRAIN|||&&&|||OnMapRreadyCallback: This interface invokes when its instance is set on a MapFragment object. The onMapReady(GoogleMap) method of OnMapReadyCallback interface is called when the map is ready to use. In the onMapReady(GoogleMap) method, we can add markers, listeners, and other attributes.|||LocationListener: This interface is used to receive the notification when the device location is changed. The abstract method onLocationChanged(Location) of LocationListener interface is called when the location has changed.|||GoogleApiClient.ConnectionCallbacks: This interface provides the callbacks methods onConnected(Bundle) and onConnectionSuspended(int) which are called when the device is connected and disconnected respectively.|||GoogleApiClient.OnConnectionFailedListener: This interface provides callbacks method onConnectionFailed(ConnectionResult) which is called when the error occurs while connecting the device to the service.|||\']'),(104,'[\'Kotlin Android Google Map Fixed Location\']','[\'Google Map displays the current location, navigate location direction, search location etc. To place the Google Map in an application, we need to create the Google Map API key and integrate it in our application. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-google-map\', \'https://www.javatpoint.com/ https://console.developers.google.com\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location6.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-fixed-location-output3.png\']','[]','[]','[\'activity_maps.xml\', \'build.gradle\', \'strings.xml\', \'google_map_api.xml\', \'MapsActivity.kt\', \'AndroidManifest.xml\', \'MapsActivity.kt\']','[]','[\'The Google Map tutorial using Java code is implemented at Android Google Map.\', \'To implement the Google Map, we need to generate the Google Map API key and integrate it into our application. \', \'Click on Create API key to generate API key.\', \'After clicking on Create API key, it will generate our API key displaying the following screen.\', \'Paste the generated API key in our res/values/google_map_api.xml file.\', \'Add the following code in activity_maps.xml layout file.\', \'Add the Google Map Service and Google Location Service dependencies in build.gradle file.\', \'Place the Google Map API key in res/values/google_map_api.xml file.\', \'GoogleMap.addMarker() points the location of given location.\', \'Add the  in AndroidManifest.xml file.\']','[\'Copy the URL from res/values/google_map_api.xml file and paste it at the browser or we can directly visit at Console Google Developer to generates the Google Map API key.\', \'The application built on version Marshmallow facilitates run time user permission. In this class, we create the above example by providing the run time permission to access the device fine location ACCESS_FINE_LOCATION.\']','[\'In this tutorial, we will integrate the Google Maps in our Android application. To place the Google Map in application, selects the activity type as Google Maps Activity. By default this activity generates the required configuration and setting which are required for Google map.\', \'To get the GoogleMap object in our MapsActivity.kt class, we need to implement the OnMapReadyCallback interface and override the onMapReady() callback method. To display the fix location on map, place the latitude and longitude point in the LatLng(latitude, longitude).\']','[\'<fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:map=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:id=\"@+id/map\"\', \'android:name=\"com.google.android.gms.maps.SupportMapFragment\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlingooglemap.MapsActivity\" />\', \'dependencies {\', \"implementation fileTree(include: [\'*.jar\'], dir: \'libs\')\", \'implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.google.android.gms:play-services-maps:11.8.0\'\", \"implementation \'com.google.android.gms:play-services-location:11.8.0\'\", \"testImplementation \'junit:junit:4.12\'\", \'<resources>\', \'<string name=\"app_name\">Kotlin Google Map</string>\', \'<string name=\"title_activity_maps\">Map Fixed Location</string>\', \'</resources>\', \'<resources>\', \'<!--\', \'Follow the directions here:\', \'https://developers.google.com/maps/documentation/android/signup\', \'Once you have your key (it starts with \"AIza\"), replace the \"google_maps_key\"\', \'string in this file.\', \'-->\', \'<string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">AIzaSyCmTF-n-REPLACE-WITH-YOUR-KEY</string>\', \'</resources>\', \'package example.javatpoint.com.kotlingooglemap\', \'import android.os.Bundle\', \'import android.support.v7.app.AppCompatActivity\', \'import com.google.android.gms.maps.CameraUpdateFactory\', \'import com.google.android.gms.maps.GoogleMap\', \'import com.google.android.gms.maps.OnMapReadyCallback\', \'import com.google.android.gms.maps.SupportMapFragment\', \'import com.google.android.gms.maps.model.LatLng\', \'import com.google.android.gms.maps.model.Marker\', \'import com.google.android.gms.maps.model.MarkerOptions\', \'class MapsActivity : AppCompatActivity(), OnMapReadyCallback,  GoogleMap.OnMarkerClickListener {\', \'private lateinit var mMap: GoogleMap\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_maps)\', \'val mapFragment = supportFragmentManager\', \'.findFragmentById(R.id.map) as SupportMapFragment\', \'mapFragment.getMapAsync(this)\', \'/**\', \'* Manipulates the map once available.\', \'* This callback is triggered when the map is ready to be used.\', \'* This is where we can add markers or lines, add listeners or move the camera. In this case,\', \'* we just add a marker near Sydney, Australia.\', \'* If Google Play services is not installed on the device, the user will be prompted to install\', \'* it inside the SupportMapFragment. This method will only be triggered once the user has\', \'* installed Google Play services and returned to the app.\', \'*/\', \'override fun onMapReady(googleMap: GoogleMap) {\', \'mMap = googleMap\', \'val myLocation = LatLng(20.5937, 78.9629)\', \'mMap.addMarker(MarkerOptions().position(myLocation).title(\"Marker in India\"))\', \'mMap.moveCamera(CameraUpdateFactory.newLatLng(myLocation))\', \'mMap.uiSettings.isZoomControlsEnabled = true\', \'override fun onMarkerClick(p0: Marker?) = false\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlingooglemap\">\', \'<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<meta-data\', \'android:name=\"com.google.android.geo.API_KEY\"\', \'android:value=\"@string/google_maps_key\" />\', \'<activity\', \'android:name=\".MapsActivity\"\', \'android:label=\"@string/title_activity_maps\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'</application>\', \'</manifest>\', \'package example.javatpoint.com.kotlingooglemap\', \'import android.Manifest\', \'import android.content.pm.PackageManager\', \'import android.os.Build\', \'import android.os.Bundle\', \'import android.support.v4.app.ActivityCompat\', \'import android.support.v4.app.FragmentActivity\', \'import android.widget.Toast\', \'import com.google.android.gms.maps.CameraUpdateFactory\', \'import com.google.android.gms.maps.GoogleMap\', \'import com.google.android.gms.maps.OnMapReadyCallback\', \'import com.google.android.gms.maps.SupportMapFragment\', \'import com.google.android.gms.maps.model.LatLng\', \'import com.google.android.gms.maps.model.Marker\', \'import com.google.android.gms.maps.model.MarkerOptions\', \'class MapsActivity : FragmentActivity(), OnMapReadyCallback, GoogleMap.OnMarkerClickListener  {\', \'private lateinit var mMap: GoogleMap\', \'companion object {\', \'private val MY_PERMISSION_FINE_LOCATION = 101\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_maps)\', \'val mapFragment = supportFragmentManager\', \'.findFragmentById(R.id.map) as SupportMapFragment\', \'mapFragment.getMapAsync(this)\', \'override fun onMapReady(googleMap: GoogleMap) {\', \'mMap = googleMap\', \'val india = LatLng(20.5937, 78.9629)\', \'mMap.addMarker(MarkerOptions().position(india).title(\"Marker in India\"))\', \'mMap.moveCamera(CameraUpdateFactory.newLatLng(india))\', \'if (ActivityCompat.checkSelfPermission(this,\', \'Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\', \'mMap.isMyLocationEnabled = true\', \'}\', \'else {//condition for Marshmello and above\', \'if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\', \'requestPermissions(arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), MY_PERMISSION_FINE_LOCATION)\', \'}\', \'}\', \'mMap.setOnMarkerClickListener(this)\', \'override fun onMarkerClick(p0: Marker?) = false\', \'override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<String>, grantResults: IntArray) {\', \'super.onRequestPermissionsResult(requestCode, permissions, grantResults)\', \'when (requestCode) {\', \'MY_PERMISSION_FINE_LOCATION -> if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {//permission to access location grant\', \'if (ActivityCompat.checkSelfPermission(this,\', \'Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\', \'mMap.isMyLocationEnabled = true\', \'}\', \'}\', \'else {\', \'Toast.makeText(applicationContext, \"This app requires location permissions to be granted\", Toast.LENGTH_LONG).show()\', \'finish()\', \'}\', \'}\']','[]','[]','[]'),(105,'[\'Kotlin Android Google Map Search Location\']','[\'In the previous tutorial, we build the application that locate the Map Fixed Location and Map Current Location.\']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/kotlin-android-google-map-fixed-location\', \'https://www.javatpoint.com/kotlin-android-google-map-current-location\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-search-location-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin-android-google-map-search-location-output2.png\']','[]','[\'Methods of Geocoder class\']','[\'activity_maps.xml\', \'build.gradle\', \'strings.xml\', \'google_map_api.xml\', \'MapsActivity.kt\', \'AndroidManifest.xml\']','[\'Note: Check it on the real Android device for the best result of output.\']','[\'Add the Google Map Service and Google Location Service dependencies in build.gradle file.\', \'Place the Google Map API key in res/values/google_map_api.xml file.\', \'Add the following code in MapsActivity.kt class file.\']','[\'In this tutorial, we will implement search location functionality in Google Map. The searching of Google location is done through Geocoder class. Geocoder class facilitates the geocoding and reverse geocoding.\', \'Geocoding is a process in which street address is converted into a coordinate (latitude, longitude). Reverse geocoding is a process in which a coordinate (latitude, longitude) is converted into the street address.\', \'Add the following code in an activity_maps.xml layout file. The EditText is used to input search location and Button is used for click event to search the place.\']','[]','[\'<fragment xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:map=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:id=\"@+id/map\"\', \'android:name=\"com.google.android.gms.maps.SupportMapFragment\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlingooglesearchlocation.MapsActivity\" >\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:orientation=\"horizontal\">\', \'<EditText\', \'android:layout_width=\"248dp\"\', \'android:layout_height=\"wrap_content\"\', \'android:id=\"@+id/editText\"\', \'android:layout_weight=\"0.5\"\', \'android:inputType=\"textPersonName\"\', \'android:hint=\"Search Location\" />\', \'<Button\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_weight=\"0.5\"\', \'android:onClick=\"searchLocation\"\', \'android:text=\"Search\" />\', \'</LinearLayout>\', \'</fragment>\', \'dependencies {\', \"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \'implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.google.android.gms:play-services-maps:11.8.0\'\", \"compile \'com.google.android.gms:play-services-location:11.8.0\'\", \"testImplementation \'junit:junit:4.12\'\", \"testImplementation \'junit:junit:4.12\'\", \'<resources>\', \'<string name=\"app_name\">Kotlin Google Search Location</string>\', \'<string name=\"title_activity_maps\">Google Search Location</string>\', \'</resources>\', \'<resources>\', \'<!--\', \'https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=20:0B:71:3B:B2:46:75:A1:87:78:2E:4C:49:3F:E3:B6:FD:2D:76:D3%3Bexample.javatpoint.com.kotlingooglesearchlocation\', \'Alternatively, follow the directions here:\', \'https://developers.google.com/maps/documentation/android/start#get-key\', \'Once you have your key (it starts with \"AIza\"), replace the \"google_maps_key\"\', \'string in this file.\', \'-->\', \'<string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">AIzaSyCKvLn2KTPKD_-REPLACE-WITH-YOUR-API</string>\', \'</resources>\', \'package example.javatpoint.com.kotlingooglesearchlocation\', \'import android.os.Bundle\', \'import com.google.android.gms.maps.CameraUpdateFactory\', \'import com.google.android.gms.maps.GoogleMap\', \'import com.google.android.gms.maps.OnMapReadyCallback\', \'import com.google.android.gms.maps.SupportMapFragment\', \'import com.google.android.gms.maps.model.LatLng\', \'import com.google.android.gms.maps.model.MarkerOptions\', \'import android.location.Address\', \'import android.location.Geocoder\', \'import android.os.Build\', \'import android.support.v4.app.FragmentActivity\', \'import com.google.android.gms.common.api.GoogleApiClient\', \'import com.google.android.gms.maps.model.BitmapDescriptorFactory\', \'import com.google.android.gms.maps.model.Marker\', \'import com.google.android.gms.location.LocationServices\', \'import android.location.Location\', \'import android.Manifest\', \'import android.content.pm.PackageManager\', \'import android.support.v4.content.ContextCompat\', \'import android.view.View\', \'import android.widget.EditText\', \'import android.widget.Toast\', \'import com.google.android.gms.common.ConnectionResult\', \'import com.google.android.gms.location.LocationListener\', \'import com.google.android.gms.location.LocationRequest\', \'import java.io.IOException\', \'class MapsActivity() : FragmentActivity(), OnMapReadyCallback, LocationListener,\', \'GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener {\', \'private var mMap: GoogleMap? = null\', \'internal lateinit var mLastLocation: Location\', \'internal var mCurrLocationMarker: Marker? = null\', \'internal var mGoogleApiClient: GoogleApiClient? = null\', \'internal lateinit var mLocationRequest: LocationRequest\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_maps)\', \'val mapFragment = supportFragmentManager\', \'.findFragmentById(R.id.map) as SupportMapFragment\', \'mapFragment.getMapAsync(this)\', \'override fun onMapReady(googleMap: GoogleMap) {\', \'mMap = googleMap\', \'if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\', \'if (ContextCompat.checkSelfPermission(this,\', \'Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\', \'buildGoogleApiClient()\', \'mMap!!.isMyLocationEnabled = true\', \'}\', \'} else {\', \'buildGoogleApiClient()\', \'mMap!!.isMyLocationEnabled = true\', \'}\', \'@Synchronized\', \'protected fun buildGoogleApiClient() {\', \'mGoogleApiClient = GoogleApiClient.Builder(this)\', \'.addConnectionCallbacks(this)\', \'.addOnConnectionFailedListener(this)\', \'.addApi(LocationServices.API).build()\', \'mGoogleApiClient!!.connect()\', \'override fun onConnected(bundle: Bundle?) {\', \'mLocationRequest = LocationRequest()\', \'mLocationRequest.interval = 1000\', \'mLocationRequest.fastestInterval = 1000\', \'mLocationRequest.priority = LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY\', \'if (ContextCompat.checkSelfPermission(this,\', \'Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\', \'LocationServices.getFusedLocationProviderClient(this)\', \'}\', \'override fun onConnectionSuspended(i: Int) {\', \'override fun onLocationChanged(location: Location) {\', \'mLastLocation = location\', \'if (mCurrLocationMarker != null) {\', \'mCurrLocationMarker!!.remove()\', \'}\', \'val latLng = LatLng(location.latitude, location.longitude)\', \'val markerOptions = MarkerOptions()\', \'markerOptions.position(latLng)\', \'markerOptions.title(\"Current Position\")\', \'markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))\', \'mCurrLocationMarker = mMap!!.addMarker(markerOptions)\', \'mMap!!.moveCamera(CameraUpdateFactory.newLatLng(latLng))\', \'mMap!!.animateCamera(CameraUpdateFactory.zoomTo(11f))\', \'if (mGoogleApiClient != null) {\', \'LocationServices.getFusedLocationProviderClient(this)\', \'}\', \'override fun onConnectionFailed(connectionResult: ConnectionResult) {\', \'fun searchLocation(view: View) {\', \'val locationSearch:EditText = findViewById<EditText>(R.id.editText)\', \'lateinit var location: String\', \'location = locationSearch.text.toString()\', \'var addressList: List<Address>? = null\', \'if (location == null || location == \"\") {\', \'Toast.makeText(applicationContext,\"provide location\",Toast.LENGTH_SHORT).show()\', \'}\', \'else{\', \'val geoCoder = Geocoder(this)\', \'try {\', \'addressList = geoCoder.getFromLocationName(location, 1)\', \'} catch (e: IOException) {\', \'e.printStackTrace()\', \'}\', \'val address = addressList!![0]\', \'val latLng = LatLng(address.latitude, address.longitude)\', \'mMap!!.addMarker(MarkerOptions().position(latLng).title(location))\', \'mMap!!.animateCamera(CameraUpdateFactory.newLatLng(latLng))\', \'Toast.makeText(applicationContext, address.latitude.toString() + \" \" + address.longitude, Toast.LENGTH_LONG).show()\', \'}\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'package=\"example.javatpoint.com.kotlingooglesearchlocation\">\', \'<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\', \'<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\', \'<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\', \'<uses-permission android:name=\"android.permission.INTERNET\" />\', \'<application\', \'android:allowBackup=\"true\"\', \'android:icon=\"@mipmap/ic_launcher\"\', \'android:label=\"@string/app_name\"\', \'android:roundIcon=\"@mipmap/ic_launcher_round\"\', \'android:supportsRtl=\"true\"\', \'android:theme=\"@style/AppTheme\">\', \'<meta-data\', \'android:name=\"com.google.android.geo.API_KEY\"\', \'android:value=\"@string/google_maps_key\" />\', \'<activity\', \'android:name=\".MapsActivity\"\', \'android:label=\"@string/title_activity_maps\">\', \'<intent-filter>\', \'<action android:name=\"android.intent.action.MAIN\" />\', \'<category android:name=\"android.intent.category.LAUNCHER\" />\', \'</intent-filter>\', \'</activity>\', \'</application>\', \'</manifest>\']','[]','[]','[\'|||List getFromLocation(double latitude, double longitude, int maxResults): This method returns an array of Address which specifies the surrounding latitude and longitude. |||List getFromLocationName(String location, int results, double leftLatitude, double leftLongitude, double rightLatitude, double rightLongitude): This method returns an array of Address which describes the given location such as place, an address, etc.|||List getFromLocationName(String location, int results): This method returns an array of Address which describes the given location such as place, an address, etc.|||static boolean isPresent(): This method returns true if the methods getFromLocation() and getFromLocationName() are implemented.|||\']'),(106,'[\'Kotlin Android Web Service - Volley Library Registration, Log-in, and Log-out Tutorial\']','[\'In this tutorial, we will create the basic user registration and log-in module using Volley library and JSON. Volley is an HTTP Library which provides the facilities for network connectivity for our app. \']','[\'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/android-volley-library-registration-login-logout\', \'https://www.javatpoint.com/android-volley-library-registration-login-logout\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\', \'https://www.javatpoint.com/#\']','[\'https://static.javatpoint.com/kotlin/images/kotlin android web service-output1.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output2.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output3.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output4.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output5.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output6.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output7.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output8.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output9.png\', \'https://static.javatpoint.com/kotlin/images/kotlin android web service-output10.png\']','[]','[]','[\'activity_main.xml\', \'activity_login.xml\', \'activity_register.xml\', \'build.gradle\', \'User.kt\', \'URLs.kt\', \'VolleySingleton.kt\', \'SharedPrefManager.kt\', \'MainActivity.kt\', \'LoginActivity.kt\', \'RegisterActivity.kt\', \'AndroidManifest.xml\']','[\'Now, create an activity_login.xml file in the layout directory with following code. This activity is used for user log-in UI.\', \'Note: The server side code of registration and login are implemented in PHP with MySQL at https://www.javatpoint.com/android-volley-library-registration-login-logout.\']','[\'Create an activity_main.xml in layout and add the following code. This activity is used to display the detail of the user profile.\', \'Create an activity_register.xml file in the layout directory with following code. This activity is used for user registration UI.\', \'Add the volley library dependency in build.gradle file.\', \'Create a data model class named as User.kt with the following code.\', \'We need to define our URL that calls the API of server-side.\', \'Create an URLs.kt class and define the URL.\', \'Add the following permission in AndroidManifest.xml file\']','[\'In Android application, we will create the three activity class for user registration, user log-in and display the user detail in main activity (as a profile).\', \'Create a class named as SharedPreferences.kt. In this class, we use the SharedPreferences class to store the user detail. The SharedPreferences class contains four methods with the following functionalities:\', \'Now, in the MainActivity.kt class, we will display the user information if the user is logged-in otherwise, it redirects to LoginActivity.kt class. The onClick() method is used to log-out the user when clicking on the button.\', \'In the LoginActivity.kt class, we check that the user is already logged-in or not, if true then redirect to MainActivity.kt class otherwise, allow a user to log-in. \', \'StringRequest class of Volley library is used for network module. The object of StringRequest class takes the parameters of the type request method, URL, and the response.\', \'The RegisterActivity.kt class is used to register the user. This class initially checks the user log-in, if true then redirect to MainActivity.kt class otherwise, allow user for registration.\', \'Similar to LoginActivity.kt class, we use the StringRequest class of Volley library for network connection and pass the parameters of the type request method, URL, and the response. The Response.Listener handles the response generated by the server.\']','[\'The web API of registration and login is created using PHP with MySQL. Before implementing the client side Android application code, first look at the server side API code at https://www.javatpoint.com/android-volley-library-registration-login-logout.\']','[\'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinvolleyregistrationloginsystem.MainActivity\">\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"fill_parent\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:orientation=\"vertical\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.0\">\', \'<TextView\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:gravity=\"center\"\', \'android:text=\"Welcome to Profile\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\', \'<TableLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginTop=\"50dp\">\', \'<TableRow>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"Id\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\', \'<TextView\', \'android:id=\"@+id/textViewId\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"id\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'<TableRow>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"Username\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\', \'<TextView\', \'android:id=\"@+id/textViewUsername\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"username\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'<TableRow>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"Email\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\', \'<TextView\', \'android:id=\"@+id/textViewEmail\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"useremail\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'<TableRow>\', \'<TextView\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"Gender\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\', \'<TextView\', \'android:id=\"@+id/textViewGender\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:padding=\"10dp\"\', \'android:text=\"gender\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</TableRow>\', \'</TableLayout>\', \'<Button\', \'android:id=\"@+id/buttonLogout\"\', \'android:layout_width=\"210dp\"\', \'android:layout_height=\"50dp\"\', \'android:layout_marginTop=\"150dp\"\', \'android:layout_marginLeft=\"75dp\"\', \'android:text=\"Logout\" />\', \'</LinearLayout>\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinvolleyregistrationloginsystem.LoginActivity\">\', \'<TextView\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"16dp\"\', \'android:gravity=\"center\"\', \'android:text=\"Login\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"1.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\" />\', \'<EditText\', \'android:id=\"@+id/etUserName\"\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:ems=\"10\"\', \'android:inputType=\"textPersonName\"\', \'android:hint=\"user name\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintHorizontal_bias=\"0.0\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.144\" />\', \'<EditText\', \'android:id=\"@+id/etUserPassword\"\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:hint=\"password\"\', \'android:ems=\"10\"\', \'android:inputType=\"textPassword\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/etUserName\" />\', \'<Button\', \'android:id=\"@+id/btnLogin\"\', \'android:layout_width=\"210dp\"\', \'android:layout_height=\"50dp\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Login\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/etUserName\"\', \'app:layout_constraintVertical_bias=\"0.754\" />\', \'<TextView\', \'android:id=\"@+id/tvRegister\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:gravity=\"center\"\', \'android:text=\"Create New Account\\n Register Here\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toBottomOf=\"@+id/btnLogin\"\', \'app:layout_constraintVertical_bias=\"0.405\" />\', \'<ProgressBar\', \'android:id=\"@+id/progressBar\"\', \'android:visibility=\"gone\"\', \'style=\"?android:attr/progressBarStyle\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.456\" />\', \'</android.support.constraint.ConstraintLayout>\', \'<?xml version=\"1.0\" encoding=\"utf-8\"?>\', \'<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\', \'xmlns:app=\"http://schemas.android.com/apk/res-auto\"\', \'xmlns:tools=\"http://schemas.android.com/tools\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"match_parent\"\', \'tools:context=\"example.javatpoint.com.kotlinvolleyregistrationloginsystem.RegisterActivity\">\', \'<LinearLayout\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"519dp\"\', \'android:layout_centerVertical=\"true\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginEnd=\"8dp\"\', \'android:layout_marginStart=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:orientation=\"vertical\"\', \'android:padding=\"10dp\"\', \'app:layout_constraintBottom_toBottomOf=\"parent\"\', \'app:layout_constraintEnd_toEndOf=\"parent\"\', \'app:layout_constraintStart_toStartOf=\"parent\"\', \'app:layout_constraintTop_toTopOf=\"parent\"\', \'app:layout_constraintVertical_bias=\"0.0\">\', \'<TextView\', \'android:layout_width=\"fill_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Register\"\', \'android:gravity=\"center\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\', \'<EditText\', \'android:id=\"@+id/editTextUsername\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"20dp\"\', \'android:hint=\"Username\"\', \'android:inputType=\"text\" />\', \'<EditText\', \'android:id=\"@+id/editTextEmail\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:hint=\"Email\"\', \'android:inputType=\"textEmailAddress\" />\', \'<EditText\', \'android:id=\"@+id/editTextPassword\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:fontFamily=\"sans-serif\"\', \'android:hint=\"Password\"\', \'android:inputType=\"textPassword\" />\', \'<RadioGroup\', \'android:id=\"@+id/radioGender\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:orientation=\"horizontal\">\', \'<RadioButton\', \'android:id=\"@+id/radioButtonMale\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:checked=\"true\"\', \'android:text=\"Male\" />\', \'<RadioButton\', \'android:id=\"@+id/radioButtonFemale\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:text=\"Female\" />\', \'</RadioGroup>\', \'<Button\', \'android:id=\"@+id/buttonRegister\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"90dp\"\', \'android:text=\"Register\" />\', \'<TextView\', \'android:id=\"@+id/textViewLogin\"\', \'android:layout_width=\"match_parent\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_marginBottom=\"8dp\"\', \'android:layout_marginTop=\"8dp\"\', \'android:text=\"Already Registered?\\nLogin Here\"\', \'android:textAlignment=\"center\"\', \'android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\" />\', \'</LinearLayout>\', \'<ProgressBar\', \'android:visibility=\"gone\"\', \'android:id=\"@+id/progressBar\"\', \'android:layout_width=\"wrap_content\"\', \'android:layout_height=\"wrap_content\"\', \'android:layout_centerHorizontal=\"true\"\', \'android:layout_centerVertical=\"true\" />\', \'</android.support.constraint.ConstraintLayout>\', \'dependencies {\', \"implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\", \'implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\', \"implementation \'com.android.support:appcompat-v7:26.1.0\'\", \"implementation \'com.android.support.constraint:constraint-layout:1.1.3\'\", \"testImplementation \'junit:junit:4.12\'\", \"implementation \'com.android.volley:volley:1.0.0\'\", \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'class User(var id: Int, var name: String?, var email: String?, var gender: String?)\', \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'object URLs {\', \'private val ROOT_URL = \"http://192.168.1.35/androidphpmysql/registrationapi.php?apicall=\"\', \'val URL_REGISTER = ROOT_URL + \"signup\"\', \'val URL_LOGIN = ROOT_URL + \"login\"\', \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'import android.content.Context\', \'import com.android.volley.Request\', \'import com.android.volley.RequestQueue\', \'import com.android.volley.toolbox.Volley\', \'class VolleySingleton private constructor(context: Context) {\', \'private var mRequestQueue: RequestQueue\', \'val requestQueue: RequestQueue\', \'get() {\', \'if (mRequestQueue == null) {\', \'mRequestQueue = Volley.newRequestQueue(mCtx?.applicationContext)\', \'}\', \'return mRequestQueue\', \'}\', \'init {\', \'mCtx = context\', \'mRequestQueue = requestQueue\', \'fun <T> addToRequestQueue(req: Request<T>) {\', \'requestQueue.add(req)\', \'companion object {\', \'private var mInstance: VolleySingleton? = null\', \'private var mCtx: Context? = null\', \'@Synchronized\', \'fun getInstance(context: Context): VolleySingleton {\', \'if (mInstance == null) {\', \'mInstance = VolleySingleton(context)\', \'}\', \'return mInstance as VolleySingleton\', \'}\', \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'import android.content.Context\', \'import android.content.Intent\', \'class SharedPrefManager private constructor(context: Context) {\', \'val isLoggedIn: Boolean\', \'get() {\', \'val sharedPreferences = ctx?.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)\', \'return sharedPreferences?.getString(KEY_USERNAME, null) != null\', \'}\', \'val user: User\', \'get() {\', \'val sharedPreferences = ctx?.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)\', \'return User(\', \'sharedPreferences!!.getInt(KEY_ID, -1),\', \'sharedPreferences.getString(KEY_USERNAME, null),\', \'sharedPreferences.getString(KEY_EMAIL, null),\', \'sharedPreferences.getString(KEY_GENDER, null)\', \')\', \'}\', \'init {\', \'ctx = context\', \'fun userLogin(user: User) {\', \'val sharedPreferences = ctx?.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)\', \'val editor = sharedPreferences?.edit()\', \'editor?.putInt(KEY_ID, user.id)\', \'editor?.putString(KEY_USERNAME, user.name)\', \'editor?.putString(KEY_EMAIL, user.email)\', \'editor?.putString(KEY_GENDER, user.gender)\', \'editor?.apply()\', \'fun logout() {\', \'val sharedPreferences = ctx?.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)\', \'val editor = sharedPreferences?.edit()\', \'editor?.clear()\', \'editor?.apply()\', \'ctx?.startActivity(Intent(ctx, LoginActivity::class.java))\', \'companion object {\', \'private val SHARED_PREF_NAME = \"volleyregisterlogin\"\', \'private val KEY_USERNAME = \"keyusername\"\', \'private val KEY_EMAIL = \"keyemail\"\', \'private val KEY_GENDER = \"keygender\"\', \'private val KEY_ID = \"keyid\"\', \'private var mInstance: SharedPrefManager? = null\', \'private var ctx: Context? = null\', \'@Synchronized\', \'fun getInstance(context: Context): SharedPrefManager {\', \'if (mInstance == null) {\', \'mInstance = SharedPrefManager(context)\', \'}\', \'return mInstance as SharedPrefManager\', \'}\', \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.content.Intent\', \'import android.view.View\', \'import android.widget.Button\', \'import android.widget.TextView\', \'class MainActivity : AppCompatActivity(), View.OnClickListener {\', \'internal lateinit var id: TextView\', \'internal lateinit var userName: TextView\', \'internal lateinit var userEmail: TextView\', \'internal lateinit var gender: TextView\', \'internal lateinit var btnLogout: Button\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_main)\', \'if (SharedPrefManager.getInstance(this).isLoggedIn) {\', \'id = findViewById(R.id.textViewId)\', \'userName = findViewById(R.id.textViewUsername)\', \'userEmail = findViewById(R.id.textViewEmail)\', \'gender = findViewById(R.id.textViewGender)\', \'btnLogout = findViewById(R.id.buttonLogout)\', \'val user = SharedPrefManager.getInstance(this).user\', \'id.text = user.id.toString()\', \'userEmail.text = user.email\', \'gender.text = user.gender\', \'userName.text = user.name\', \'btnLogout.setOnClickListener(this)\', \'} else {\', \'val intent = Intent(this@MainActivity, LoginActivity::class.java)\', \'startActivity(intent)\', \'finish()\', \'}\', \'override fun onClick(view: View) {\', \'if (view == btnLogout) {\', \'SharedPrefManager.getInstance(applicationContext).logout()\', \'}\', \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.content.Intent\', \'import android.text.TextUtils\', \'import android.view.View\', \'import android.widget.EditText\', \'import android.widget.ProgressBar\', \'import android.widget.Toast\', \'import com.android.volley.AuthFailureError\', \'import com.android.volley.Request\', \'import com.android.volley.Response\', \'import com.android.volley.toolbox.StringRequest\', \'import kotlinx.android.synthetic.main.activity_login.*\', \'import org.json.JSONException\', \'import org.json.JSONObject\', \'import java.util.HashMap\', \'class LoginActivity : AppCompatActivity() {\', \'internal lateinit var etName: EditText\', \'internal lateinit var etPassword: EditText\', \'internal lateinit var progressBar: ProgressBar\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_login)\', \'if (SharedPrefManager.getInstance(this).isLoggedIn) {\', \'finish()\', \'startActivity(Intent(this, MainActivity::class.java))\', \'}\', \'progressBar = findViewById(R.id.progressBar)\', \'etName = findViewById(R.id.etUserName)\', \'etPassword = findViewById(R.id.etUserPassword)\', \'btnLogin.setOnClickListener(View.OnClickListener {\', \'userLogin()\', \'})\', \'tvRegister.setOnClickListener(View.OnClickListener {\', \'finish()\', \'startActivity(Intent(applicationContext, RegisterActivity::class.java))\', \'})\', \'private fun userLogin() {\', \'val username = etName.text.toString()\', \'val password = etPassword.text.toString()\', \'if (TextUtils.isEmpty(username)) {\', \'etName.error = \"Please enter your username\"\', \'etName.requestFocus()\', \'return\', \'}\', \'if (TextUtils.isEmpty(password)) {\', \'etPassword.error = \"Please enter your password\"\', \'etPassword.requestFocus()\', \'return\', \'}\', \'val stringRequest = object : StringRequest(Request.Method.POST, URLs.URL_LOGIN,\', \'Response.Listener { response ->\', \'progressBar.visibility = View.GONE\', \'try {\', \'val obj = JSONObject(response)\', \'if (!obj.getBoolean(\"error\")) {\', \'Toast.makeText(applicationContext, obj.getString(\"message\"), Toast.LENGTH_SHORT).show()\', \'val userJson = obj.getJSONObject(\"user\")\', \'val user = User(\', \'userJson.getInt(\"id\"),\', \'userJson.getString(\"username\"),\', \'userJson.getString(\"email\"),\', \'userJson.getString(\"gender\")\', \')\', \'SharedPrefManager.getInstance(applicationContext).userLogin(user)\', \'finish()\', \'startActivity(Intent(applicationContext, MainActivity::class.java))\', \'} else {\', \'Toast.makeText(applicationContext, obj.getString(\"message\"), Toast.LENGTH_SHORT).show()\', \'}\', \'} catch (e: JSONException) {\', \'e.printStackTrace()\', \'}\', \'},\', \'Response.ErrorListener { error -> Toast.makeText(applicationContext, error.message, Toast.LENGTH_SHORT).show() }) {\', \'@Throws(AuthFailureError::class)\', \'override fun getParams(): Map<String, String> {\', \'val params = HashMap<String, String>()\', \'params[\"username\"] = username\', \'params[\"password\"] = password\', \'return params\', \'}\', \'}\', \'VolleySingleton.getInstance(this).addToRequestQueue(stringRequest)\', \'package example.javatpoint.com.kotlinvolleyregistrationloginsystem\', \'import android.support.v7.app.AppCompatActivity\', \'import android.os.Bundle\', \'import android.content.Intent\', \'import android.text.TextUtils\', \'import android.view.View\', \'import android.widget.EditText\', \'import android.widget.ProgressBar\', \'import android.widget.RadioButton\', \'import android.widget.RadioGroup\', \'import android.widget.Toast\', \'import com.android.volley.AuthFailureError\', \'import com.android.volley.Request\', \'import com.android.volley.Response\', \'import com.android.volley.toolbox.StringRequest\', \'import kotlinx.android.synthetic.main.activity_register.*\', \'import org.json.JSONException\', \'import org.json.JSONObject\', \'import java.util.HashMap\', \'class RegisterActivity : AppCompatActivity() {\', \'internal lateinit var editTextUsername: EditText\', \'internal lateinit var editTextEmail: EditText\', \'internal lateinit var editTextPassword: EditText\', \'internal lateinit var radioGroupGender: RadioGroup\', \'internal lateinit var progressBar: ProgressBar\', \'override fun onCreate(savedInstanceState: Bundle?) {\', \'super.onCreate(savedInstanceState)\', \'setContentView(R.layout.activity_register)\', \'progressBar = findViewById(R.id.progressBar)\', \'if (SharedPrefManager.getInstance(this).isLoggedIn) {\', \'finish()\', \'startActivity(Intent(this, MainActivity::class.java))\', \'return\', \'}\', \'editTextUsername = findViewById(R.id.editTextUsername)\', \'editTextEmail = findViewById(R.id.editTextEmail)\', \'editTextPassword = findViewById(R.id.editTextPassword)\', \'radioGroupGender = findViewById(R.id.radioGender)\', \'buttonRegister.setOnClickListener(View.OnClickListener {\', \'registerUser()\', \'})\', \'textViewLogin.setOnClickListener(View.OnClickListener {\', \'finish()\', \'startActivity(Intent(this@RegisterActivity, LoginActivity::class.java))\', \'})\', \'private fun registerUser() {\', \"val username = editTextUsername.text.toString().trim { it <= \' \' }\", \"val email = editTextEmail.text.toString().trim { it <= \' \' }\", \"val password = editTextPassword.text.toString().trim { it <= \' \' }\", \'val gender = (findViewById<View>(radioGroupGender.checkedRadioButtonId) as RadioButton).text.toString()\', \'if (TextUtils.isEmpty(username)) {\', \'editTextUsername.error = \"Please enter username\"\', \'editTextUsername.requestFocus()\', \'return\', \'}\', \'if (TextUtils.isEmpty(email)) {\', \'editTextEmail.error = \"Please enter your email\"\', \'editTextEmail.requestFocus()\', \'return\', \'}\', \'if (!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {\', \'editTextEmail.error = \"Enter a valid email\"\', \'editTextEmail.requestFocus()\', \'return\', \'}\', \'if (TextUtils.isEmpty(password)) {\', \'editTextPassword.error = \"Enter a password\"\', \'editTextPassword.requestFocus()\', \'return\', \'}\', \'val stringRequest = object : StringRequest(Request.Method.POST, URLs.URL_REGISTER,\', \'Response.Listener { response ->\', \'progressBar.visibility = View.GONE\', \'try {\', \'val obj = JSONObject(response)\', \'if (!obj.getBoolean(\"error\")) {\', \'Toast.makeText(applicationContext, obj.getString(\"message\"), Toast.LENGTH_SHORT).show()\', \'val userJson = obj.getJSONObject(\"user\")\', \'val user = User(\', \'userJson.getInt(\"id\"),\', \'userJson.getString(\"username\"),\', \'userJson.getString(\"email\"),\', \'userJson.getString(\"gender\")\', \')\', \'SharedPrefManager.getInstance(applicationContext).userLogin(user)\', \'finish()\', \'startActivity(Intent(applicationContext, MainActivity::class.java))\', \'} else {\', \'Toast.makeText(applicationContext, obj.getString(\"message\"), Toast.LENGTH_SHORT).show()\', \'}\', \'} catch (e: JSONException) {\', \'e.printStackTrace()\', \'}\', \'},\', \'Response.ErrorListener { error -> Toast.makeText(applicationContext, error.message, Toast.LENGTH_SHORT).show() }) {\', \'@Throws(AuthFailureError::class)\', \'override fun getParams(): Map<String, String> {\', \'val params = HashMap<String, String>()\', \'params[\"username\"] = username\', \'params[\"email\"] = email\', \'params[\"password\"] = password\', \'params[\"gender\"] = gender\', \'return params\', \'}\', \'}\', \'VolleySingleton.getInstance(this).addToRequestQueue(stringRequest)\', \'<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\', \'<uses-permission android:name=\"android.permission.INTERNET\" />\']','[]','[]','[\'|||userLogin(): This function is used to store the user information in SharedPreferences after log-in.|||isLoggedIn: This method checks whether the user is already log-in or not.|||user: User get(): This method gets the user information if log-in.|||logout(): This function clears the SharedPreferences data and makes user log-out.|||\']');
/*!40000 ALTER TABLE `javatpoint_kotlin_data` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2022-01-24 18:52:42
